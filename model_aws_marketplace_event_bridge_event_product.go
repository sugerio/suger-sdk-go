/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceEventBridgeEventProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceEventBridgeEventProduct{}

// AwsMarketplaceEventBridgeEventProduct struct for AwsMarketplaceEventBridgeEventProduct
type AwsMarketplaceEventBridgeEventProduct struct {
	Arn   *string `json:"arn,omitempty"`
	Id    *string `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewAwsMarketplaceEventBridgeEventProduct instantiates a new AwsMarketplaceEventBridgeEventProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceEventBridgeEventProduct() *AwsMarketplaceEventBridgeEventProduct {
	this := AwsMarketplaceEventBridgeEventProduct{}
	return &this
}

// NewAwsMarketplaceEventBridgeEventProductWithDefaults instantiates a new AwsMarketplaceEventBridgeEventProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceEventBridgeEventProductWithDefaults() *AwsMarketplaceEventBridgeEventProduct {
	this := AwsMarketplaceEventBridgeEventProduct{}
	return &this
}

// GetArn returns the Arn field value if set, zero value otherwise.
func (o *AwsMarketplaceEventBridgeEventProduct) GetArn() string {
	if o == nil || IsNil(o.Arn) {
		var ret string
		return ret
	}
	return *o.Arn
}

// GetArnOk returns a tuple with the Arn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) GetArnOk() (*string, bool) {
	if o == nil || IsNil(o.Arn) {
		return nil, false
	}
	return o.Arn, true
}

// HasArn returns a boolean if a field has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) HasArn() bool {
	if o != nil && !IsNil(o.Arn) {
		return true
	}

	return false
}

// SetArn gets a reference to the given string and assigns it to the Arn field.
func (o *AwsMarketplaceEventBridgeEventProduct) SetArn(v string) {
	o.Arn = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AwsMarketplaceEventBridgeEventProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AwsMarketplaceEventBridgeEventProduct) SetId(v string) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AwsMarketplaceEventBridgeEventProduct) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AwsMarketplaceEventBridgeEventProduct) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AwsMarketplaceEventBridgeEventProduct) SetTitle(v string) {
	o.Title = &v
}

func (o AwsMarketplaceEventBridgeEventProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceEventBridgeEventProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arn) {
		toSerialize["arn"] = o.Arn
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceEventBridgeEventProduct struct {
	value *AwsMarketplaceEventBridgeEventProduct
	isSet bool
}

func (v NullableAwsMarketplaceEventBridgeEventProduct) Get() *AwsMarketplaceEventBridgeEventProduct {
	return v.value
}

func (v *NullableAwsMarketplaceEventBridgeEventProduct) Set(val *AwsMarketplaceEventBridgeEventProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceEventBridgeEventProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceEventBridgeEventProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceEventBridgeEventProduct(val *AwsMarketplaceEventBridgeEventProduct) *NullableAwsMarketplaceEventBridgeEventProduct {
	return &NullableAwsMarketplaceEventBridgeEventProduct{value: val, isSet: true}
}

func (v NullableAwsMarketplaceEventBridgeEventProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceEventBridgeEventProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
