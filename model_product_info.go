/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProductInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductInfo{}

// ProductInfo struct for ProductInfo
type ProductInfo struct {
	AlibabaProduct *AlibabaMarketplaceProduct `json:"alibabaProduct,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty"`
	AwsSaasProduct *AwsSaasProduct `json:"awsSaasProduct,omitempty"`
	AwsSnsSubscriptions []AwsSnsSubscription `json:"awsSnsSubscriptions,omitempty"`
	AzureProduct *AzureProduct `json:"azureProduct,omitempty"`
	Commits []CommitDimension `json:"commits,omitempty"`
	Currency *string `json:"currency,omitempty"`
	Dimensions []MeteringDimension `json:"dimensions,omitempty"`
	EulaUrl *string `json:"eulaUrl,omitempty"`
	GcpProduct *GcpMarketplaceProduct `json:"gcpProduct,omitempty"`
	RefundCancelationPolicy *string `json:"refundCancelationPolicy,omitempty"`
	SellerNotes *string `json:"sellerNotes,omitempty"`
}

// NewProductInfo instantiates a new ProductInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductInfo() *ProductInfo {
	this := ProductInfo{}
	return &this
}

// NewProductInfoWithDefaults instantiates a new ProductInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductInfoWithDefaults() *ProductInfo {
	this := ProductInfo{}
	return &this
}

// GetAlibabaProduct returns the AlibabaProduct field value if set, zero value otherwise.
func (o *ProductInfo) GetAlibabaProduct() AlibabaMarketplaceProduct {
	if o == nil || IsNil(o.AlibabaProduct) {
		var ret AlibabaMarketplaceProduct
		return ret
	}
	return *o.AlibabaProduct
}

// GetAlibabaProductOk returns a tuple with the AlibabaProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetAlibabaProductOk() (*AlibabaMarketplaceProduct, bool) {
	if o == nil || IsNil(o.AlibabaProduct) {
		return nil, false
	}
	return o.AlibabaProduct, true
}

// HasAlibabaProduct returns a boolean if a field has been set.
func (o *ProductInfo) HasAlibabaProduct() bool {
	if o != nil && !IsNil(o.AlibabaProduct) {
		return true
	}

	return false
}

// SetAlibabaProduct gets a reference to the given AlibabaMarketplaceProduct and assigns it to the AlibabaProduct field.
func (o *ProductInfo) SetAlibabaProduct(v AlibabaMarketplaceProduct) {
	o.AlibabaProduct = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ProductInfo) GetAttributes() map[string]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ProductInfo) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *ProductInfo) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetAwsSaasProduct returns the AwsSaasProduct field value if set, zero value otherwise.
func (o *ProductInfo) GetAwsSaasProduct() AwsSaasProduct {
	if o == nil || IsNil(o.AwsSaasProduct) {
		var ret AwsSaasProduct
		return ret
	}
	return *o.AwsSaasProduct
}

// GetAwsSaasProductOk returns a tuple with the AwsSaasProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetAwsSaasProductOk() (*AwsSaasProduct, bool) {
	if o == nil || IsNil(o.AwsSaasProduct) {
		return nil, false
	}
	return o.AwsSaasProduct, true
}

// HasAwsSaasProduct returns a boolean if a field has been set.
func (o *ProductInfo) HasAwsSaasProduct() bool {
	if o != nil && !IsNil(o.AwsSaasProduct) {
		return true
	}

	return false
}

// SetAwsSaasProduct gets a reference to the given AwsSaasProduct and assigns it to the AwsSaasProduct field.
func (o *ProductInfo) SetAwsSaasProduct(v AwsSaasProduct) {
	o.AwsSaasProduct = &v
}

// GetAwsSnsSubscriptions returns the AwsSnsSubscriptions field value if set, zero value otherwise.
func (o *ProductInfo) GetAwsSnsSubscriptions() []AwsSnsSubscription {
	if o == nil || IsNil(o.AwsSnsSubscriptions) {
		var ret []AwsSnsSubscription
		return ret
	}
	return o.AwsSnsSubscriptions
}

// GetAwsSnsSubscriptionsOk returns a tuple with the AwsSnsSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetAwsSnsSubscriptionsOk() ([]AwsSnsSubscription, bool) {
	if o == nil || IsNil(o.AwsSnsSubscriptions) {
		return nil, false
	}
	return o.AwsSnsSubscriptions, true
}

// HasAwsSnsSubscriptions returns a boolean if a field has been set.
func (o *ProductInfo) HasAwsSnsSubscriptions() bool {
	if o != nil && !IsNil(o.AwsSnsSubscriptions) {
		return true
	}

	return false
}

// SetAwsSnsSubscriptions gets a reference to the given []AwsSnsSubscription and assigns it to the AwsSnsSubscriptions field.
func (o *ProductInfo) SetAwsSnsSubscriptions(v []AwsSnsSubscription) {
	o.AwsSnsSubscriptions = v
}

// GetAzureProduct returns the AzureProduct field value if set, zero value otherwise.
func (o *ProductInfo) GetAzureProduct() AzureProduct {
	if o == nil || IsNil(o.AzureProduct) {
		var ret AzureProduct
		return ret
	}
	return *o.AzureProduct
}

// GetAzureProductOk returns a tuple with the AzureProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetAzureProductOk() (*AzureProduct, bool) {
	if o == nil || IsNil(o.AzureProduct) {
		return nil, false
	}
	return o.AzureProduct, true
}

// HasAzureProduct returns a boolean if a field has been set.
func (o *ProductInfo) HasAzureProduct() bool {
	if o != nil && !IsNil(o.AzureProduct) {
		return true
	}

	return false
}

// SetAzureProduct gets a reference to the given AzureProduct and assigns it to the AzureProduct field.
func (o *ProductInfo) SetAzureProduct(v AzureProduct) {
	o.AzureProduct = &v
}

// GetCommits returns the Commits field value if set, zero value otherwise.
func (o *ProductInfo) GetCommits() []CommitDimension {
	if o == nil || IsNil(o.Commits) {
		var ret []CommitDimension
		return ret
	}
	return o.Commits
}

// GetCommitsOk returns a tuple with the Commits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetCommitsOk() ([]CommitDimension, bool) {
	if o == nil || IsNil(o.Commits) {
		return nil, false
	}
	return o.Commits, true
}

// HasCommits returns a boolean if a field has been set.
func (o *ProductInfo) HasCommits() bool {
	if o != nil && !IsNil(o.Commits) {
		return true
	}

	return false
}

// SetCommits gets a reference to the given []CommitDimension and assigns it to the Commits field.
func (o *ProductInfo) SetCommits(v []CommitDimension) {
	o.Commits = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ProductInfo) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ProductInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ProductInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *ProductInfo) GetDimensions() []MeteringDimension {
	if o == nil || IsNil(o.Dimensions) {
		var ret []MeteringDimension
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetDimensionsOk() ([]MeteringDimension, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *ProductInfo) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []MeteringDimension and assigns it to the Dimensions field.
func (o *ProductInfo) SetDimensions(v []MeteringDimension) {
	o.Dimensions = v
}

// GetEulaUrl returns the EulaUrl field value if set, zero value otherwise.
func (o *ProductInfo) GetEulaUrl() string {
	if o == nil || IsNil(o.EulaUrl) {
		var ret string
		return ret
	}
	return *o.EulaUrl
}

// GetEulaUrlOk returns a tuple with the EulaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetEulaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EulaUrl) {
		return nil, false
	}
	return o.EulaUrl, true
}

// HasEulaUrl returns a boolean if a field has been set.
func (o *ProductInfo) HasEulaUrl() bool {
	if o != nil && !IsNil(o.EulaUrl) {
		return true
	}

	return false
}

// SetEulaUrl gets a reference to the given string and assigns it to the EulaUrl field.
func (o *ProductInfo) SetEulaUrl(v string) {
	o.EulaUrl = &v
}

// GetGcpProduct returns the GcpProduct field value if set, zero value otherwise.
func (o *ProductInfo) GetGcpProduct() GcpMarketplaceProduct {
	if o == nil || IsNil(o.GcpProduct) {
		var ret GcpMarketplaceProduct
		return ret
	}
	return *o.GcpProduct
}

// GetGcpProductOk returns a tuple with the GcpProduct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetGcpProductOk() (*GcpMarketplaceProduct, bool) {
	if o == nil || IsNil(o.GcpProduct) {
		return nil, false
	}
	return o.GcpProduct, true
}

// HasGcpProduct returns a boolean if a field has been set.
func (o *ProductInfo) HasGcpProduct() bool {
	if o != nil && !IsNil(o.GcpProduct) {
		return true
	}

	return false
}

// SetGcpProduct gets a reference to the given GcpMarketplaceProduct and assigns it to the GcpProduct field.
func (o *ProductInfo) SetGcpProduct(v GcpMarketplaceProduct) {
	o.GcpProduct = &v
}

// GetRefundCancelationPolicy returns the RefundCancelationPolicy field value if set, zero value otherwise.
func (o *ProductInfo) GetRefundCancelationPolicy() string {
	if o == nil || IsNil(o.RefundCancelationPolicy) {
		var ret string
		return ret
	}
	return *o.RefundCancelationPolicy
}

// GetRefundCancelationPolicyOk returns a tuple with the RefundCancelationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetRefundCancelationPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.RefundCancelationPolicy) {
		return nil, false
	}
	return o.RefundCancelationPolicy, true
}

// HasRefundCancelationPolicy returns a boolean if a field has been set.
func (o *ProductInfo) HasRefundCancelationPolicy() bool {
	if o != nil && !IsNil(o.RefundCancelationPolicy) {
		return true
	}

	return false
}

// SetRefundCancelationPolicy gets a reference to the given string and assigns it to the RefundCancelationPolicy field.
func (o *ProductInfo) SetRefundCancelationPolicy(v string) {
	o.RefundCancelationPolicy = &v
}

// GetSellerNotes returns the SellerNotes field value if set, zero value otherwise.
func (o *ProductInfo) GetSellerNotes() string {
	if o == nil || IsNil(o.SellerNotes) {
		var ret string
		return ret
	}
	return *o.SellerNotes
}

// GetSellerNotesOk returns a tuple with the SellerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductInfo) GetSellerNotesOk() (*string, bool) {
	if o == nil || IsNil(o.SellerNotes) {
		return nil, false
	}
	return o.SellerNotes, true
}

// HasSellerNotes returns a boolean if a field has been set.
func (o *ProductInfo) HasSellerNotes() bool {
	if o != nil && !IsNil(o.SellerNotes) {
		return true
	}

	return false
}

// SetSellerNotes gets a reference to the given string and assigns it to the SellerNotes field.
func (o *ProductInfo) SetSellerNotes(v string) {
	o.SellerNotes = &v
}

func (o ProductInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlibabaProduct) {
		toSerialize["alibabaProduct"] = o.AlibabaProduct
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.AwsSaasProduct) {
		toSerialize["awsSaasProduct"] = o.AwsSaasProduct
	}
	if !IsNil(o.AwsSnsSubscriptions) {
		toSerialize["awsSnsSubscriptions"] = o.AwsSnsSubscriptions
	}
	if !IsNil(o.AzureProduct) {
		toSerialize["azureProduct"] = o.AzureProduct
	}
	if !IsNil(o.Commits) {
		toSerialize["commits"] = o.Commits
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	if !IsNil(o.EulaUrl) {
		toSerialize["eulaUrl"] = o.EulaUrl
	}
	if !IsNil(o.GcpProduct) {
		toSerialize["gcpProduct"] = o.GcpProduct
	}
	if !IsNil(o.RefundCancelationPolicy) {
		toSerialize["refundCancelationPolicy"] = o.RefundCancelationPolicy
	}
	if !IsNil(o.SellerNotes) {
		toSerialize["sellerNotes"] = o.SellerNotes
	}
	return toSerialize, nil
}

type NullableProductInfo struct {
	value *ProductInfo
	isSet bool
}

func (v NullableProductInfo) Get() *ProductInfo {
	return v.value
}

func (v *NullableProductInfo) Set(val *ProductInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProductInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProductInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductInfo(val *ProductInfo) *NullableProductInfo {
	return &NullableProductInfo{value: val, isSet: true}
}

func (v NullableProductInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


