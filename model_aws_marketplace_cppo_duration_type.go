/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AwsMarketplaceCppoDurationType the model 'AwsMarketplaceCppoDurationType'
type AwsMarketplaceCppoDurationType string

// List of AwsMarketplaceCppoDurationType
const (
	AwsMarketplaceCppoDurationType_SPECIFIC_DATES AwsMarketplaceCppoDurationType = "SPECIFIC_DATES"
	AwsMarketplaceCppoDurationType_ONE_TIME AwsMarketplaceCppoDurationType = "ONE_TIME"
)

// All allowed values of AwsMarketplaceCppoDurationType enum
var AllowedAwsMarketplaceCppoDurationTypeEnumValues = []AwsMarketplaceCppoDurationType{
	"SPECIFIC_DATES",
	"ONE_TIME",
}

func (v *AwsMarketplaceCppoDurationType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsMarketplaceCppoDurationType(value)
	for _, existing := range AllowedAwsMarketplaceCppoDurationTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsMarketplaceCppoDurationType", value)
}

// NewAwsMarketplaceCppoDurationTypeFromValue returns a pointer to a valid AwsMarketplaceCppoDurationType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsMarketplaceCppoDurationTypeFromValue(v string) (*AwsMarketplaceCppoDurationType, error) {
	ev := AwsMarketplaceCppoDurationType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsMarketplaceCppoDurationType: valid values are %v", v, AllowedAwsMarketplaceCppoDurationTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsMarketplaceCppoDurationType) IsValid() bool {
	for _, existing := range AllowedAwsMarketplaceCppoDurationTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsMarketplaceCppoDurationType value
func (v AwsMarketplaceCppoDurationType) Ptr() *AwsMarketplaceCppoDurationType {
	return &v
}

type NullableAwsMarketplaceCppoDurationType struct {
	value *AwsMarketplaceCppoDurationType
	isSet bool
}

func (v NullableAwsMarketplaceCppoDurationType) Get() *AwsMarketplaceCppoDurationType {
	return v.value
}

func (v *NullableAwsMarketplaceCppoDurationType) Set(val *AwsMarketplaceCppoDurationType) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoDurationType) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoDurationType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoDurationType(val *AwsMarketplaceCppoDurationType) *NullableAwsMarketplaceCppoDurationType {
	return &NullableAwsMarketplaceCppoDurationType{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoDurationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoDurationType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

