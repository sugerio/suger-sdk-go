/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCppoPriceTerms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoPriceTerms{}

// AwsMarketplaceCppoPriceTerms struct for AwsMarketplaceCppoPriceTerms
type AwsMarketplaceCppoPriceTerms struct {
	AllConsumptionUnitColumnNames []string `json:"allConsumptionUnitColumnNames,omitempty"`
	DetailedView *AwsMarketplaceCppoPriceTermDetailedView `json:"detailedView,omitempty"`
	Entries []AwsMarketplaceCppoPriceTermEntry `json:"entries,omitempty"`
}

// NewAwsMarketplaceCppoPriceTerms instantiates a new AwsMarketplaceCppoPriceTerms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoPriceTerms() *AwsMarketplaceCppoPriceTerms {
	this := AwsMarketplaceCppoPriceTerms{}
	return &this
}

// NewAwsMarketplaceCppoPriceTermsWithDefaults instantiates a new AwsMarketplaceCppoPriceTerms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoPriceTermsWithDefaults() *AwsMarketplaceCppoPriceTerms {
	this := AwsMarketplaceCppoPriceTerms{}
	return &this
}

// GetAllConsumptionUnitColumnNames returns the AllConsumptionUnitColumnNames field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTerms) GetAllConsumptionUnitColumnNames() []string {
	if o == nil || IsNil(o.AllConsumptionUnitColumnNames) {
		var ret []string
		return ret
	}
	return o.AllConsumptionUnitColumnNames
}

// GetAllConsumptionUnitColumnNamesOk returns a tuple with the AllConsumptionUnitColumnNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTerms) GetAllConsumptionUnitColumnNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllConsumptionUnitColumnNames) {
		return nil, false
	}
	return o.AllConsumptionUnitColumnNames, true
}

// HasAllConsumptionUnitColumnNames returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTerms) HasAllConsumptionUnitColumnNames() bool {
	if o != nil && !IsNil(o.AllConsumptionUnitColumnNames) {
		return true
	}

	return false
}

// SetAllConsumptionUnitColumnNames gets a reference to the given []string and assigns it to the AllConsumptionUnitColumnNames field.
func (o *AwsMarketplaceCppoPriceTerms) SetAllConsumptionUnitColumnNames(v []string) {
	o.AllConsumptionUnitColumnNames = v
}

// GetDetailedView returns the DetailedView field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTerms) GetDetailedView() AwsMarketplaceCppoPriceTermDetailedView {
	if o == nil || IsNil(o.DetailedView) {
		var ret AwsMarketplaceCppoPriceTermDetailedView
		return ret
	}
	return *o.DetailedView
}

// GetDetailedViewOk returns a tuple with the DetailedView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTerms) GetDetailedViewOk() (*AwsMarketplaceCppoPriceTermDetailedView, bool) {
	if o == nil || IsNil(o.DetailedView) {
		return nil, false
	}
	return o.DetailedView, true
}

// HasDetailedView returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTerms) HasDetailedView() bool {
	if o != nil && !IsNil(o.DetailedView) {
		return true
	}

	return false
}

// SetDetailedView gets a reference to the given AwsMarketplaceCppoPriceTermDetailedView and assigns it to the DetailedView field.
func (o *AwsMarketplaceCppoPriceTerms) SetDetailedView(v AwsMarketplaceCppoPriceTermDetailedView) {
	o.DetailedView = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTerms) GetEntries() []AwsMarketplaceCppoPriceTermEntry {
	if o == nil || IsNil(o.Entries) {
		var ret []AwsMarketplaceCppoPriceTermEntry
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTerms) GetEntriesOk() ([]AwsMarketplaceCppoPriceTermEntry, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTerms) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []AwsMarketplaceCppoPriceTermEntry and assigns it to the Entries field.
func (o *AwsMarketplaceCppoPriceTerms) SetEntries(v []AwsMarketplaceCppoPriceTermEntry) {
	o.Entries = v
}

func (o AwsMarketplaceCppoPriceTerms) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoPriceTerms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllConsumptionUnitColumnNames) {
		toSerialize["allConsumptionUnitColumnNames"] = o.AllConsumptionUnitColumnNames
	}
	if !IsNil(o.DetailedView) {
		toSerialize["detailedView"] = o.DetailedView
	}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoPriceTerms struct {
	value *AwsMarketplaceCppoPriceTerms
	isSet bool
}

func (v NullableAwsMarketplaceCppoPriceTerms) Get() *AwsMarketplaceCppoPriceTerms {
	return v.value
}

func (v *NullableAwsMarketplaceCppoPriceTerms) Set(val *AwsMarketplaceCppoPriceTerms) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoPriceTerms) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoPriceTerms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoPriceTerms(val *AwsMarketplaceCppoPriceTerms) *NullableAwsMarketplaceCppoPriceTerms {
	return &NullableAwsMarketplaceCppoPriceTerms{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoPriceTerms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoPriceTerms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


