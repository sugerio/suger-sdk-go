/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProduct{}

// AzureProduct struct for AzureProduct
type AzureProduct struct {
	Availabilities        []AzureProductAvailability         `json:"availabilities,omitempty"`
	Branches              []AzureProductBranch               `json:"branches,omitempty"`
	ExternalIDs           []AzureTypeValue                   `json:"externalIDs,omitempty"`
	Id                    *string                            `json:"id,omitempty"`
	IsModularPublishing   *bool                              `json:"isModularPublishing,omitempty"`
	Listings              []AzureProductListing              `json:"listings,omitempty"`
	Name                  *string                            `json:"name,omitempty"`
	PackageConfigurations []AzureProductPackageConfiguration `json:"packageConfigurations,omitempty"`
	// All plans under this product
	Plans        []AzureMarketplacePriceAndAvailabilityPrivateOfferPlan `json:"plans,omitempty"`
	Properties   []AzureProductProperty                                 `json:"properties,omitempty"`
	ResourceType *string                                                `json:"resourceType,omitempty"`
	// Not original fields. They are populated by other API calls
	Setup       *AzureProductSetup       `json:"setup,omitempty"`
	Submissions []AzureProductSubmission `json:"submissions,omitempty"`
	Variants    []AzureProductVariant    `json:"variants,omitempty"`
}

// NewAzureProduct instantiates a new AzureProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProduct() *AzureProduct {
	this := AzureProduct{}
	return &this
}

// NewAzureProductWithDefaults instantiates a new AzureProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductWithDefaults() *AzureProduct {
	this := AzureProduct{}
	return &this
}

// GetAvailabilities returns the Availabilities field value if set, zero value otherwise.
func (o *AzureProduct) GetAvailabilities() []AzureProductAvailability {
	if o == nil || IsNil(o.Availabilities) {
		var ret []AzureProductAvailability
		return ret
	}
	return o.Availabilities
}

// GetAvailabilitiesOk returns a tuple with the Availabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetAvailabilitiesOk() ([]AzureProductAvailability, bool) {
	if o == nil || IsNil(o.Availabilities) {
		return nil, false
	}
	return o.Availabilities, true
}

// HasAvailabilities returns a boolean if a field has been set.
func (o *AzureProduct) HasAvailabilities() bool {
	if o != nil && !IsNil(o.Availabilities) {
		return true
	}

	return false
}

// SetAvailabilities gets a reference to the given []AzureProductAvailability and assigns it to the Availabilities field.
func (o *AzureProduct) SetAvailabilities(v []AzureProductAvailability) {
	o.Availabilities = v
}

// GetBranches returns the Branches field value if set, zero value otherwise.
func (o *AzureProduct) GetBranches() []AzureProductBranch {
	if o == nil || IsNil(o.Branches) {
		var ret []AzureProductBranch
		return ret
	}
	return o.Branches
}

// GetBranchesOk returns a tuple with the Branches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetBranchesOk() ([]AzureProductBranch, bool) {
	if o == nil || IsNil(o.Branches) {
		return nil, false
	}
	return o.Branches, true
}

// HasBranches returns a boolean if a field has been set.
func (o *AzureProduct) HasBranches() bool {
	if o != nil && !IsNil(o.Branches) {
		return true
	}

	return false
}

// SetBranches gets a reference to the given []AzureProductBranch and assigns it to the Branches field.
func (o *AzureProduct) SetBranches(v []AzureProductBranch) {
	o.Branches = v
}

// GetExternalIDs returns the ExternalIDs field value if set, zero value otherwise.
func (o *AzureProduct) GetExternalIDs() []AzureTypeValue {
	if o == nil || IsNil(o.ExternalIDs) {
		var ret []AzureTypeValue
		return ret
	}
	return o.ExternalIDs
}

// GetExternalIDsOk returns a tuple with the ExternalIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetExternalIDsOk() ([]AzureTypeValue, bool) {
	if o == nil || IsNil(o.ExternalIDs) {
		return nil, false
	}
	return o.ExternalIDs, true
}

// HasExternalIDs returns a boolean if a field has been set.
func (o *AzureProduct) HasExternalIDs() bool {
	if o != nil && !IsNil(o.ExternalIDs) {
		return true
	}

	return false
}

// SetExternalIDs gets a reference to the given []AzureTypeValue and assigns it to the ExternalIDs field.
func (o *AzureProduct) SetExternalIDs(v []AzureTypeValue) {
	o.ExternalIDs = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureProduct) SetId(v string) {
	o.Id = &v
}

// GetIsModularPublishing returns the IsModularPublishing field value if set, zero value otherwise.
func (o *AzureProduct) GetIsModularPublishing() bool {
	if o == nil || IsNil(o.IsModularPublishing) {
		var ret bool
		return ret
	}
	return *o.IsModularPublishing
}

// GetIsModularPublishingOk returns a tuple with the IsModularPublishing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetIsModularPublishingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsModularPublishing) {
		return nil, false
	}
	return o.IsModularPublishing, true
}

// HasIsModularPublishing returns a boolean if a field has been set.
func (o *AzureProduct) HasIsModularPublishing() bool {
	if o != nil && !IsNil(o.IsModularPublishing) {
		return true
	}

	return false
}

// SetIsModularPublishing gets a reference to the given bool and assigns it to the IsModularPublishing field.
func (o *AzureProduct) SetIsModularPublishing(v bool) {
	o.IsModularPublishing = &v
}

// GetListings returns the Listings field value if set, zero value otherwise.
func (o *AzureProduct) GetListings() []AzureProductListing {
	if o == nil || IsNil(o.Listings) {
		var ret []AzureProductListing
		return ret
	}
	return o.Listings
}

// GetListingsOk returns a tuple with the Listings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetListingsOk() ([]AzureProductListing, bool) {
	if o == nil || IsNil(o.Listings) {
		return nil, false
	}
	return o.Listings, true
}

// HasListings returns a boolean if a field has been set.
func (o *AzureProduct) HasListings() bool {
	if o != nil && !IsNil(o.Listings) {
		return true
	}

	return false
}

// SetListings gets a reference to the given []AzureProductListing and assigns it to the Listings field.
func (o *AzureProduct) SetListings(v []AzureProductListing) {
	o.Listings = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AzureProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureProduct) SetName(v string) {
	o.Name = &v
}

// GetPackageConfigurations returns the PackageConfigurations field value if set, zero value otherwise.
func (o *AzureProduct) GetPackageConfigurations() []AzureProductPackageConfiguration {
	if o == nil || IsNil(o.PackageConfigurations) {
		var ret []AzureProductPackageConfiguration
		return ret
	}
	return o.PackageConfigurations
}

// GetPackageConfigurationsOk returns a tuple with the PackageConfigurations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetPackageConfigurationsOk() ([]AzureProductPackageConfiguration, bool) {
	if o == nil || IsNil(o.PackageConfigurations) {
		return nil, false
	}
	return o.PackageConfigurations, true
}

// HasPackageConfigurations returns a boolean if a field has been set.
func (o *AzureProduct) HasPackageConfigurations() bool {
	if o != nil && !IsNil(o.PackageConfigurations) {
		return true
	}

	return false
}

// SetPackageConfigurations gets a reference to the given []AzureProductPackageConfiguration and assigns it to the PackageConfigurations field.
func (o *AzureProduct) SetPackageConfigurations(v []AzureProductPackageConfiguration) {
	o.PackageConfigurations = v
}

// GetPlans returns the Plans field value if set, zero value otherwise.
func (o *AzureProduct) GetPlans() []AzureMarketplacePriceAndAvailabilityPrivateOfferPlan {
	if o == nil || IsNil(o.Plans) {
		var ret []AzureMarketplacePriceAndAvailabilityPrivateOfferPlan
		return ret
	}
	return o.Plans
}

// GetPlansOk returns a tuple with the Plans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetPlansOk() ([]AzureMarketplacePriceAndAvailabilityPrivateOfferPlan, bool) {
	if o == nil || IsNil(o.Plans) {
		return nil, false
	}
	return o.Plans, true
}

// HasPlans returns a boolean if a field has been set.
func (o *AzureProduct) HasPlans() bool {
	if o != nil && !IsNil(o.Plans) {
		return true
	}

	return false
}

// SetPlans gets a reference to the given []AzureMarketplacePriceAndAvailabilityPrivateOfferPlan and assigns it to the Plans field.
func (o *AzureProduct) SetPlans(v []AzureMarketplacePriceAndAvailabilityPrivateOfferPlan) {
	o.Plans = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AzureProduct) GetProperties() []AzureProductProperty {
	if o == nil || IsNil(o.Properties) {
		var ret []AzureProductProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetPropertiesOk() ([]AzureProductProperty, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AzureProduct) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []AzureProductProperty and assigns it to the Properties field.
func (o *AzureProduct) SetProperties(v []AzureProductProperty) {
	o.Properties = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureProduct) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AzureProduct) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AzureProduct) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSetup returns the Setup field value if set, zero value otherwise.
func (o *AzureProduct) GetSetup() AzureProductSetup {
	if o == nil || IsNil(o.Setup) {
		var ret AzureProductSetup
		return ret
	}
	return *o.Setup
}

// GetSetupOk returns a tuple with the Setup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetSetupOk() (*AzureProductSetup, bool) {
	if o == nil || IsNil(o.Setup) {
		return nil, false
	}
	return o.Setup, true
}

// HasSetup returns a boolean if a field has been set.
func (o *AzureProduct) HasSetup() bool {
	if o != nil && !IsNil(o.Setup) {
		return true
	}

	return false
}

// SetSetup gets a reference to the given AzureProductSetup and assigns it to the Setup field.
func (o *AzureProduct) SetSetup(v AzureProductSetup) {
	o.Setup = &v
}

// GetSubmissions returns the Submissions field value if set, zero value otherwise.
func (o *AzureProduct) GetSubmissions() []AzureProductSubmission {
	if o == nil || IsNil(o.Submissions) {
		var ret []AzureProductSubmission
		return ret
	}
	return o.Submissions
}

// GetSubmissionsOk returns a tuple with the Submissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetSubmissionsOk() ([]AzureProductSubmission, bool) {
	if o == nil || IsNil(o.Submissions) {
		return nil, false
	}
	return o.Submissions, true
}

// HasSubmissions returns a boolean if a field has been set.
func (o *AzureProduct) HasSubmissions() bool {
	if o != nil && !IsNil(o.Submissions) {
		return true
	}

	return false
}

// SetSubmissions gets a reference to the given []AzureProductSubmission and assigns it to the Submissions field.
func (o *AzureProduct) SetSubmissions(v []AzureProductSubmission) {
	o.Submissions = v
}

// GetVariants returns the Variants field value if set, zero value otherwise.
func (o *AzureProduct) GetVariants() []AzureProductVariant {
	if o == nil || IsNil(o.Variants) {
		var ret []AzureProductVariant
		return ret
	}
	return o.Variants
}

// GetVariantsOk returns a tuple with the Variants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProduct) GetVariantsOk() ([]AzureProductVariant, bool) {
	if o == nil || IsNil(o.Variants) {
		return nil, false
	}
	return o.Variants, true
}

// HasVariants returns a boolean if a field has been set.
func (o *AzureProduct) HasVariants() bool {
	if o != nil && !IsNil(o.Variants) {
		return true
	}

	return false
}

// SetVariants gets a reference to the given []AzureProductVariant and assigns it to the Variants field.
func (o *AzureProduct) SetVariants(v []AzureProductVariant) {
	o.Variants = v
}

func (o AzureProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Availabilities) {
		toSerialize["availabilities"] = o.Availabilities
	}
	if !IsNil(o.Branches) {
		toSerialize["branches"] = o.Branches
	}
	if !IsNil(o.ExternalIDs) {
		toSerialize["externalIDs"] = o.ExternalIDs
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsModularPublishing) {
		toSerialize["isModularPublishing"] = o.IsModularPublishing
	}
	if !IsNil(o.Listings) {
		toSerialize["listings"] = o.Listings
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PackageConfigurations) {
		toSerialize["packageConfigurations"] = o.PackageConfigurations
	}
	if !IsNil(o.Plans) {
		toSerialize["plans"] = o.Plans
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.Setup) {
		toSerialize["setup"] = o.Setup
	}
	if !IsNil(o.Submissions) {
		toSerialize["submissions"] = o.Submissions
	}
	if !IsNil(o.Variants) {
		toSerialize["variants"] = o.Variants
	}
	return toSerialize, nil
}

type NullableAzureProduct struct {
	value *AzureProduct
	isSet bool
}

func (v NullableAzureProduct) Get() *AzureProduct {
	return v.value
}

func (v *NullableAzureProduct) Set(val *AzureProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProduct(val *AzureProduct) *NullableAzureProduct {
	return &NullableAzureProduct{value: val, isSet: true}
}

func (v NullableAzureProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
