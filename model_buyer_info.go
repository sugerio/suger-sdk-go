/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the BuyerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuyerInfo{}

// BuyerInfo struct for BuyerInfo
type BuyerInfo struct {
	// Buyer on Adyen
	AdyenBuyer *AdyenBuyer `json:"adyenBuyer,omitempty"`
	// Buyer from AWS Marketplace
	AwsBuyer *AwsAccountIdentifier `json:"awsBuyer,omitempty"`
	// Buyer from Azure Marketplace
	AzureBuyer *AzureADIdentifier `json:"azureBuyer,omitempty"`
	// The amount that the seller can collect. It excludes the marketplace commision fee.
	CollectableAmount *float32     `json:"collectableAmount,omitempty"`
	CompanyInfo       *CompanyInfo `json:"companyInfo,omitempty"`
	// customerID of buyer on seller's side
	CustomerId *string `json:"customerId,omitempty"`
	// The amount that has been disbursed to the seller account.
	DisbursedAmount *float32 `json:"disbursedAmount,omitempty"`
	// The email address of the buyer. This was copied from the new client signup form.
	EmailAddress *string `json:"emailAddress,omitempty"`
	// Fields to store key-value pairs of buyer information.
	Fields map[string]interface{} `json:"fields,omitempty"`
	// Buyer from GCP Marketplace
	GcpBuyer *GcpMarketplaceUserAccount `json:"gcpBuyer,omitempty"`
	// The gross amount that the buyer has committed to pay, including usage metered amount.
	GrossAmount *float32 `json:"grossAmount,omitempty"`
	// The amount that the buyer has got invoiced.
	InvoicedAmount *float32 `json:"invoicedAmount,omitempty"`
	// The lgo customer ID for the buyer if it is connected to a lago customer.
	LagoCustomerId *string `json:"lagoCustomerId,omitempty"`
	// Last modifier user ID.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// The metronome customer ID for the buyer if it is connected to a metronome customer.
	MetronomeCustomerId *string `json:"metronomeCustomerId,omitempty"`
	// The orb customer ID for the buyer if it is connected to a orb customer.
	OrbCustomerId *string `json:"orbCustomerId,omitempty"`
	// Payment Config for billing.
	PaymentConfig *PaymentConfig `json:"paymentConfig,omitempty"`
	// Buyer SPA url, public page visited with jwt.
	SpaUrl *string `json:"spaUrl,omitempty"`
	// Buyer as Customer on Stripe
	StripeBuyer *StripeCustomer `json:"stripeBuyer,omitempty"`
	// The stripe customer ID for the buyer if it is connected to a stripe customer.
	StripeCustomerId *string `json:"stripeCustomerId,omitempty"`
}

// NewBuyerInfo instantiates a new BuyerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuyerInfo() *BuyerInfo {
	this := BuyerInfo{}
	return &this
}

// NewBuyerInfoWithDefaults instantiates a new BuyerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuyerInfoWithDefaults() *BuyerInfo {
	this := BuyerInfo{}
	return &this
}

// GetAdyenBuyer returns the AdyenBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetAdyenBuyer() AdyenBuyer {
	if o == nil || IsNil(o.AdyenBuyer) {
		var ret AdyenBuyer
		return ret
	}
	return *o.AdyenBuyer
}

// GetAdyenBuyerOk returns a tuple with the AdyenBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetAdyenBuyerOk() (*AdyenBuyer, bool) {
	if o == nil || IsNil(o.AdyenBuyer) {
		return nil, false
	}
	return o.AdyenBuyer, true
}

// HasAdyenBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasAdyenBuyer() bool {
	if o != nil && !IsNil(o.AdyenBuyer) {
		return true
	}

	return false
}

// SetAdyenBuyer gets a reference to the given AdyenBuyer and assigns it to the AdyenBuyer field.
func (o *BuyerInfo) SetAdyenBuyer(v AdyenBuyer) {
	o.AdyenBuyer = &v
}

// GetAwsBuyer returns the AwsBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetAwsBuyer() AwsAccountIdentifier {
	if o == nil || IsNil(o.AwsBuyer) {
		var ret AwsAccountIdentifier
		return ret
	}
	return *o.AwsBuyer
}

// GetAwsBuyerOk returns a tuple with the AwsBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetAwsBuyerOk() (*AwsAccountIdentifier, bool) {
	if o == nil || IsNil(o.AwsBuyer) {
		return nil, false
	}
	return o.AwsBuyer, true
}

// HasAwsBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasAwsBuyer() bool {
	if o != nil && !IsNil(o.AwsBuyer) {
		return true
	}

	return false
}

// SetAwsBuyer gets a reference to the given AwsAccountIdentifier and assigns it to the AwsBuyer field.
func (o *BuyerInfo) SetAwsBuyer(v AwsAccountIdentifier) {
	o.AwsBuyer = &v
}

// GetAzureBuyer returns the AzureBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetAzureBuyer() AzureADIdentifier {
	if o == nil || IsNil(o.AzureBuyer) {
		var ret AzureADIdentifier
		return ret
	}
	return *o.AzureBuyer
}

// GetAzureBuyerOk returns a tuple with the AzureBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetAzureBuyerOk() (*AzureADIdentifier, bool) {
	if o == nil || IsNil(o.AzureBuyer) {
		return nil, false
	}
	return o.AzureBuyer, true
}

// HasAzureBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasAzureBuyer() bool {
	if o != nil && !IsNil(o.AzureBuyer) {
		return true
	}

	return false
}

// SetAzureBuyer gets a reference to the given AzureADIdentifier and assigns it to the AzureBuyer field.
func (o *BuyerInfo) SetAzureBuyer(v AzureADIdentifier) {
	o.AzureBuyer = &v
}

// GetCollectableAmount returns the CollectableAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetCollectableAmount() float32 {
	if o == nil || IsNil(o.CollectableAmount) {
		var ret float32
		return ret
	}
	return *o.CollectableAmount
}

// GetCollectableAmountOk returns a tuple with the CollectableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetCollectableAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CollectableAmount) {
		return nil, false
	}
	return o.CollectableAmount, true
}

// HasCollectableAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasCollectableAmount() bool {
	if o != nil && !IsNil(o.CollectableAmount) {
		return true
	}

	return false
}

// SetCollectableAmount gets a reference to the given float32 and assigns it to the CollectableAmount field.
func (o *BuyerInfo) SetCollectableAmount(v float32) {
	o.CollectableAmount = &v
}

// GetCompanyInfo returns the CompanyInfo field value if set, zero value otherwise.
func (o *BuyerInfo) GetCompanyInfo() CompanyInfo {
	if o == nil || IsNil(o.CompanyInfo) {
		var ret CompanyInfo
		return ret
	}
	return *o.CompanyInfo
}

// GetCompanyInfoOk returns a tuple with the CompanyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetCompanyInfoOk() (*CompanyInfo, bool) {
	if o == nil || IsNil(o.CompanyInfo) {
		return nil, false
	}
	return o.CompanyInfo, true
}

// HasCompanyInfo returns a boolean if a field has been set.
func (o *BuyerInfo) HasCompanyInfo() bool {
	if o != nil && !IsNil(o.CompanyInfo) {
		return true
	}

	return false
}

// SetCompanyInfo gets a reference to the given CompanyInfo and assigns it to the CompanyInfo field.
func (o *BuyerInfo) SetCompanyInfo(v CompanyInfo) {
	o.CompanyInfo = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *BuyerInfo) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetDisbursedAmount returns the DisbursedAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetDisbursedAmount() float32 {
	if o == nil || IsNil(o.DisbursedAmount) {
		var ret float32
		return ret
	}
	return *o.DisbursedAmount
}

// GetDisbursedAmountOk returns a tuple with the DisbursedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetDisbursedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DisbursedAmount) {
		return nil, false
	}
	return o.DisbursedAmount, true
}

// HasDisbursedAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasDisbursedAmount() bool {
	if o != nil && !IsNil(o.DisbursedAmount) {
		return true
	}

	return false
}

// SetDisbursedAmount gets a reference to the given float32 and assigns it to the DisbursedAmount field.
func (o *BuyerInfo) SetDisbursedAmount(v float32) {
	o.DisbursedAmount = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *BuyerInfo) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *BuyerInfo) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *BuyerInfo) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *BuyerInfo) GetFields() map[string]interface{} {
	if o == nil || IsNil(o.Fields) {
		var ret map[string]interface{}
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetFieldsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Fields) {
		return map[string]interface{}{}, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *BuyerInfo) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given map[string]interface{} and assigns it to the Fields field.
func (o *BuyerInfo) SetFields(v map[string]interface{}) {
	o.Fields = v
}

// GetGcpBuyer returns the GcpBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetGcpBuyer() GcpMarketplaceUserAccount {
	if o == nil || IsNil(o.GcpBuyer) {
		var ret GcpMarketplaceUserAccount
		return ret
	}
	return *o.GcpBuyer
}

// GetGcpBuyerOk returns a tuple with the GcpBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetGcpBuyerOk() (*GcpMarketplaceUserAccount, bool) {
	if o == nil || IsNil(o.GcpBuyer) {
		return nil, false
	}
	return o.GcpBuyer, true
}

// HasGcpBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasGcpBuyer() bool {
	if o != nil && !IsNil(o.GcpBuyer) {
		return true
	}

	return false
}

// SetGcpBuyer gets a reference to the given GcpMarketplaceUserAccount and assigns it to the GcpBuyer field.
func (o *BuyerInfo) SetGcpBuyer(v GcpMarketplaceUserAccount) {
	o.GcpBuyer = &v
}

// GetGrossAmount returns the GrossAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetGrossAmount() float32 {
	if o == nil || IsNil(o.GrossAmount) {
		var ret float32
		return ret
	}
	return *o.GrossAmount
}

// GetGrossAmountOk returns a tuple with the GrossAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetGrossAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.GrossAmount) {
		return nil, false
	}
	return o.GrossAmount, true
}

// HasGrossAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasGrossAmount() bool {
	if o != nil && !IsNil(o.GrossAmount) {
		return true
	}

	return false
}

// SetGrossAmount gets a reference to the given float32 and assigns it to the GrossAmount field.
func (o *BuyerInfo) SetGrossAmount(v float32) {
	o.GrossAmount = &v
}

// GetInvoicedAmount returns the InvoicedAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetInvoicedAmount() float32 {
	if o == nil || IsNil(o.InvoicedAmount) {
		var ret float32
		return ret
	}
	return *o.InvoicedAmount
}

// GetInvoicedAmountOk returns a tuple with the InvoicedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetInvoicedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoicedAmount) {
		return nil, false
	}
	return o.InvoicedAmount, true
}

// HasInvoicedAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasInvoicedAmount() bool {
	if o != nil && !IsNil(o.InvoicedAmount) {
		return true
	}

	return false
}

// SetInvoicedAmount gets a reference to the given float32 and assigns it to the InvoicedAmount field.
func (o *BuyerInfo) SetInvoicedAmount(v float32) {
	o.InvoicedAmount = &v
}

// GetLagoCustomerId returns the LagoCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetLagoCustomerId() string {
	if o == nil || IsNil(o.LagoCustomerId) {
		var ret string
		return ret
	}
	return *o.LagoCustomerId
}

// GetLagoCustomerIdOk returns a tuple with the LagoCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetLagoCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.LagoCustomerId) {
		return nil, false
	}
	return o.LagoCustomerId, true
}

// HasLagoCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasLagoCustomerId() bool {
	if o != nil && !IsNil(o.LagoCustomerId) {
		return true
	}

	return false
}

// SetLagoCustomerId gets a reference to the given string and assigns it to the LagoCustomerId field.
func (o *BuyerInfo) SetLagoCustomerId(v string) {
	o.LagoCustomerId = &v
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *BuyerInfo) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *BuyerInfo) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *BuyerInfo) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetMetronomeCustomerId returns the MetronomeCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetMetronomeCustomerId() string {
	if o == nil || IsNil(o.MetronomeCustomerId) {
		var ret string
		return ret
	}
	return *o.MetronomeCustomerId
}

// GetMetronomeCustomerIdOk returns a tuple with the MetronomeCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetMetronomeCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.MetronomeCustomerId) {
		return nil, false
	}
	return o.MetronomeCustomerId, true
}

// HasMetronomeCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasMetronomeCustomerId() bool {
	if o != nil && !IsNil(o.MetronomeCustomerId) {
		return true
	}

	return false
}

// SetMetronomeCustomerId gets a reference to the given string and assigns it to the MetronomeCustomerId field.
func (o *BuyerInfo) SetMetronomeCustomerId(v string) {
	o.MetronomeCustomerId = &v
}

// GetOrbCustomerId returns the OrbCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetOrbCustomerId() string {
	if o == nil || IsNil(o.OrbCustomerId) {
		var ret string
		return ret
	}
	return *o.OrbCustomerId
}

// GetOrbCustomerIdOk returns a tuple with the OrbCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetOrbCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrbCustomerId) {
		return nil, false
	}
	return o.OrbCustomerId, true
}

// HasOrbCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasOrbCustomerId() bool {
	if o != nil && !IsNil(o.OrbCustomerId) {
		return true
	}

	return false
}

// SetOrbCustomerId gets a reference to the given string and assigns it to the OrbCustomerId field.
func (o *BuyerInfo) SetOrbCustomerId(v string) {
	o.OrbCustomerId = &v
}

// GetPaymentConfig returns the PaymentConfig field value if set, zero value otherwise.
func (o *BuyerInfo) GetPaymentConfig() PaymentConfig {
	if o == nil || IsNil(o.PaymentConfig) {
		var ret PaymentConfig
		return ret
	}
	return *o.PaymentConfig
}

// GetPaymentConfigOk returns a tuple with the PaymentConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetPaymentConfigOk() (*PaymentConfig, bool) {
	if o == nil || IsNil(o.PaymentConfig) {
		return nil, false
	}
	return o.PaymentConfig, true
}

// HasPaymentConfig returns a boolean if a field has been set.
func (o *BuyerInfo) HasPaymentConfig() bool {
	if o != nil && !IsNil(o.PaymentConfig) {
		return true
	}

	return false
}

// SetPaymentConfig gets a reference to the given PaymentConfig and assigns it to the PaymentConfig field.
func (o *BuyerInfo) SetPaymentConfig(v PaymentConfig) {
	o.PaymentConfig = &v
}

// GetSpaUrl returns the SpaUrl field value if set, zero value otherwise.
func (o *BuyerInfo) GetSpaUrl() string {
	if o == nil || IsNil(o.SpaUrl) {
		var ret string
		return ret
	}
	return *o.SpaUrl
}

// GetSpaUrlOk returns a tuple with the SpaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetSpaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SpaUrl) {
		return nil, false
	}
	return o.SpaUrl, true
}

// HasSpaUrl returns a boolean if a field has been set.
func (o *BuyerInfo) HasSpaUrl() bool {
	if o != nil && !IsNil(o.SpaUrl) {
		return true
	}

	return false
}

// SetSpaUrl gets a reference to the given string and assigns it to the SpaUrl field.
func (o *BuyerInfo) SetSpaUrl(v string) {
	o.SpaUrl = &v
}

// GetStripeBuyer returns the StripeBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetStripeBuyer() StripeCustomer {
	if o == nil || IsNil(o.StripeBuyer) {
		var ret StripeCustomer
		return ret
	}
	return *o.StripeBuyer
}

// GetStripeBuyerOk returns a tuple with the StripeBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetStripeBuyerOk() (*StripeCustomer, bool) {
	if o == nil || IsNil(o.StripeBuyer) {
		return nil, false
	}
	return o.StripeBuyer, true
}

// HasStripeBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasStripeBuyer() bool {
	if o != nil && !IsNil(o.StripeBuyer) {
		return true
	}

	return false
}

// SetStripeBuyer gets a reference to the given StripeCustomer and assigns it to the StripeBuyer field.
func (o *BuyerInfo) SetStripeBuyer(v StripeCustomer) {
	o.StripeBuyer = &v
}

// GetStripeCustomerId returns the StripeCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetStripeCustomerId() string {
	if o == nil || IsNil(o.StripeCustomerId) {
		var ret string
		return ret
	}
	return *o.StripeCustomerId
}

// GetStripeCustomerIdOk returns a tuple with the StripeCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetStripeCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.StripeCustomerId) {
		return nil, false
	}
	return o.StripeCustomerId, true
}

// HasStripeCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasStripeCustomerId() bool {
	if o != nil && !IsNil(o.StripeCustomerId) {
		return true
	}

	return false
}

// SetStripeCustomerId gets a reference to the given string and assigns it to the StripeCustomerId field.
func (o *BuyerInfo) SetStripeCustomerId(v string) {
	o.StripeCustomerId = &v
}

func (o BuyerInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuyerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdyenBuyer) {
		toSerialize["adyenBuyer"] = o.AdyenBuyer
	}
	if !IsNil(o.AwsBuyer) {
		toSerialize["awsBuyer"] = o.AwsBuyer
	}
	if !IsNil(o.AzureBuyer) {
		toSerialize["azureBuyer"] = o.AzureBuyer
	}
	if !IsNil(o.CollectableAmount) {
		toSerialize["collectableAmount"] = o.CollectableAmount
	}
	if !IsNil(o.CompanyInfo) {
		toSerialize["companyInfo"] = o.CompanyInfo
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.DisbursedAmount) {
		toSerialize["disbursedAmount"] = o.DisbursedAmount
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.GcpBuyer) {
		toSerialize["gcpBuyer"] = o.GcpBuyer
	}
	if !IsNil(o.GrossAmount) {
		toSerialize["grossAmount"] = o.GrossAmount
	}
	if !IsNil(o.InvoicedAmount) {
		toSerialize["invoicedAmount"] = o.InvoicedAmount
	}
	if !IsNil(o.LagoCustomerId) {
		toSerialize["lagoCustomerId"] = o.LagoCustomerId
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.MetronomeCustomerId) {
		toSerialize["metronomeCustomerId"] = o.MetronomeCustomerId
	}
	if !IsNil(o.OrbCustomerId) {
		toSerialize["orbCustomerId"] = o.OrbCustomerId
	}
	if !IsNil(o.PaymentConfig) {
		toSerialize["paymentConfig"] = o.PaymentConfig
	}
	if !IsNil(o.SpaUrl) {
		toSerialize["spaUrl"] = o.SpaUrl
	}
	if !IsNil(o.StripeBuyer) {
		toSerialize["stripeBuyer"] = o.StripeBuyer
	}
	if !IsNil(o.StripeCustomerId) {
		toSerialize["stripeCustomerId"] = o.StripeCustomerId
	}
	return toSerialize, nil
}

type NullableBuyerInfo struct {
	value *BuyerInfo
	isSet bool
}

func (v NullableBuyerInfo) Get() *BuyerInfo {
	return v.value
}

func (v *NullableBuyerInfo) Set(val *BuyerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBuyerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBuyerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuyerInfo(val *BuyerInfo) *NullableBuyerInfo {
	return &NullableBuyerInfo{value: val, isSet: true}
}

func (v NullableBuyerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuyerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
