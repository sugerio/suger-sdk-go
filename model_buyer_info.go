/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BuyerInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuyerInfo{}

// BuyerInfo struct for BuyerInfo
type BuyerInfo struct {
	AwsBuyer *AwsAccountIdentifier `json:"awsBuyer,omitempty"`
	AzureBuyer *AzureADIdentifier `json:"azureBuyer,omitempty"`
	// The amount that the seller can collect. It excludes the marketplace commision fee.
	CollectableAmount *float32 `json:"collectableAmount,omitempty"`
	// customerID of buyer on seller's side
	CustomerId *string `json:"customerId,omitempty"`
	// The amount that has been disbursed to the seller account.
	DisbursedAmount *float32 `json:"disbursedAmount,omitempty"`
	GcpBuyer *GcpMarketplaceUserAccount `json:"gcpBuyer,omitempty"`
	// The amount that the buyer has got invoiced.
	InvoicedAmount *float32 `json:"invoicedAmount,omitempty"`
	// The metronome customer ID for the buyer if it is connected to a metronome customer.
	MetronomeCustomerId *string `json:"metronomeCustomerId,omitempty"`
	// The orb customer ID for the buyer if it is connected to a orb customer.
	OrbCustomerId *string `json:"orbCustomerId,omitempty"`
}

// NewBuyerInfo instantiates a new BuyerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuyerInfo() *BuyerInfo {
	this := BuyerInfo{}
	return &this
}

// NewBuyerInfoWithDefaults instantiates a new BuyerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuyerInfoWithDefaults() *BuyerInfo {
	this := BuyerInfo{}
	return &this
}

// GetAwsBuyer returns the AwsBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetAwsBuyer() AwsAccountIdentifier {
	if o == nil || IsNil(o.AwsBuyer) {
		var ret AwsAccountIdentifier
		return ret
	}
	return *o.AwsBuyer
}

// GetAwsBuyerOk returns a tuple with the AwsBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetAwsBuyerOk() (*AwsAccountIdentifier, bool) {
	if o == nil || IsNil(o.AwsBuyer) {
		return nil, false
	}
	return o.AwsBuyer, true
}

// HasAwsBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasAwsBuyer() bool {
	if o != nil && !IsNil(o.AwsBuyer) {
		return true
	}

	return false
}

// SetAwsBuyer gets a reference to the given AwsAccountIdentifier and assigns it to the AwsBuyer field.
func (o *BuyerInfo) SetAwsBuyer(v AwsAccountIdentifier) {
	o.AwsBuyer = &v
}

// GetAzureBuyer returns the AzureBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetAzureBuyer() AzureADIdentifier {
	if o == nil || IsNil(o.AzureBuyer) {
		var ret AzureADIdentifier
		return ret
	}
	return *o.AzureBuyer
}

// GetAzureBuyerOk returns a tuple with the AzureBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetAzureBuyerOk() (*AzureADIdentifier, bool) {
	if o == nil || IsNil(o.AzureBuyer) {
		return nil, false
	}
	return o.AzureBuyer, true
}

// HasAzureBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasAzureBuyer() bool {
	if o != nil && !IsNil(o.AzureBuyer) {
		return true
	}

	return false
}

// SetAzureBuyer gets a reference to the given AzureADIdentifier and assigns it to the AzureBuyer field.
func (o *BuyerInfo) SetAzureBuyer(v AzureADIdentifier) {
	o.AzureBuyer = &v
}

// GetCollectableAmount returns the CollectableAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetCollectableAmount() float32 {
	if o == nil || IsNil(o.CollectableAmount) {
		var ret float32
		return ret
	}
	return *o.CollectableAmount
}

// GetCollectableAmountOk returns a tuple with the CollectableAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetCollectableAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CollectableAmount) {
		return nil, false
	}
	return o.CollectableAmount, true
}

// HasCollectableAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasCollectableAmount() bool {
	if o != nil && !IsNil(o.CollectableAmount) {
		return true
	}

	return false
}

// SetCollectableAmount gets a reference to the given float32 and assigns it to the CollectableAmount field.
func (o *BuyerInfo) SetCollectableAmount(v float32) {
	o.CollectableAmount = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *BuyerInfo) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetDisbursedAmount returns the DisbursedAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetDisbursedAmount() float32 {
	if o == nil || IsNil(o.DisbursedAmount) {
		var ret float32
		return ret
	}
	return *o.DisbursedAmount
}

// GetDisbursedAmountOk returns a tuple with the DisbursedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetDisbursedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DisbursedAmount) {
		return nil, false
	}
	return o.DisbursedAmount, true
}

// HasDisbursedAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasDisbursedAmount() bool {
	if o != nil && !IsNil(o.DisbursedAmount) {
		return true
	}

	return false
}

// SetDisbursedAmount gets a reference to the given float32 and assigns it to the DisbursedAmount field.
func (o *BuyerInfo) SetDisbursedAmount(v float32) {
	o.DisbursedAmount = &v
}

// GetGcpBuyer returns the GcpBuyer field value if set, zero value otherwise.
func (o *BuyerInfo) GetGcpBuyer() GcpMarketplaceUserAccount {
	if o == nil || IsNil(o.GcpBuyer) {
		var ret GcpMarketplaceUserAccount
		return ret
	}
	return *o.GcpBuyer
}

// GetGcpBuyerOk returns a tuple with the GcpBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetGcpBuyerOk() (*GcpMarketplaceUserAccount, bool) {
	if o == nil || IsNil(o.GcpBuyer) {
		return nil, false
	}
	return o.GcpBuyer, true
}

// HasGcpBuyer returns a boolean if a field has been set.
func (o *BuyerInfo) HasGcpBuyer() bool {
	if o != nil && !IsNil(o.GcpBuyer) {
		return true
	}

	return false
}

// SetGcpBuyer gets a reference to the given GcpMarketplaceUserAccount and assigns it to the GcpBuyer field.
func (o *BuyerInfo) SetGcpBuyer(v GcpMarketplaceUserAccount) {
	o.GcpBuyer = &v
}

// GetInvoicedAmount returns the InvoicedAmount field value if set, zero value otherwise.
func (o *BuyerInfo) GetInvoicedAmount() float32 {
	if o == nil || IsNil(o.InvoicedAmount) {
		var ret float32
		return ret
	}
	return *o.InvoicedAmount
}

// GetInvoicedAmountOk returns a tuple with the InvoicedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetInvoicedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.InvoicedAmount) {
		return nil, false
	}
	return o.InvoicedAmount, true
}

// HasInvoicedAmount returns a boolean if a field has been set.
func (o *BuyerInfo) HasInvoicedAmount() bool {
	if o != nil && !IsNil(o.InvoicedAmount) {
		return true
	}

	return false
}

// SetInvoicedAmount gets a reference to the given float32 and assigns it to the InvoicedAmount field.
func (o *BuyerInfo) SetInvoicedAmount(v float32) {
	o.InvoicedAmount = &v
}

// GetMetronomeCustomerId returns the MetronomeCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetMetronomeCustomerId() string {
	if o == nil || IsNil(o.MetronomeCustomerId) {
		var ret string
		return ret
	}
	return *o.MetronomeCustomerId
}

// GetMetronomeCustomerIdOk returns a tuple with the MetronomeCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetMetronomeCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.MetronomeCustomerId) {
		return nil, false
	}
	return o.MetronomeCustomerId, true
}

// HasMetronomeCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasMetronomeCustomerId() bool {
	if o != nil && !IsNil(o.MetronomeCustomerId) {
		return true
	}

	return false
}

// SetMetronomeCustomerId gets a reference to the given string and assigns it to the MetronomeCustomerId field.
func (o *BuyerInfo) SetMetronomeCustomerId(v string) {
	o.MetronomeCustomerId = &v
}

// GetOrbCustomerId returns the OrbCustomerId field value if set, zero value otherwise.
func (o *BuyerInfo) GetOrbCustomerId() string {
	if o == nil || IsNil(o.OrbCustomerId) {
		var ret string
		return ret
	}
	return *o.OrbCustomerId
}

// GetOrbCustomerIdOk returns a tuple with the OrbCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyerInfo) GetOrbCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrbCustomerId) {
		return nil, false
	}
	return o.OrbCustomerId, true
}

// HasOrbCustomerId returns a boolean if a field has been set.
func (o *BuyerInfo) HasOrbCustomerId() bool {
	if o != nil && !IsNil(o.OrbCustomerId) {
		return true
	}

	return false
}

// SetOrbCustomerId gets a reference to the given string and assigns it to the OrbCustomerId field.
func (o *BuyerInfo) SetOrbCustomerId(v string) {
	o.OrbCustomerId = &v
}

func (o BuyerInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuyerInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AwsBuyer) {
		toSerialize["awsBuyer"] = o.AwsBuyer
	}
	if !IsNil(o.AzureBuyer) {
		toSerialize["azureBuyer"] = o.AzureBuyer
	}
	if !IsNil(o.CollectableAmount) {
		toSerialize["collectableAmount"] = o.CollectableAmount
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customerId"] = o.CustomerId
	}
	if !IsNil(o.DisbursedAmount) {
		toSerialize["disbursedAmount"] = o.DisbursedAmount
	}
	if !IsNil(o.GcpBuyer) {
		toSerialize["gcpBuyer"] = o.GcpBuyer
	}
	if !IsNil(o.InvoicedAmount) {
		toSerialize["invoicedAmount"] = o.InvoicedAmount
	}
	if !IsNil(o.MetronomeCustomerId) {
		toSerialize["metronomeCustomerId"] = o.MetronomeCustomerId
	}
	if !IsNil(o.OrbCustomerId) {
		toSerialize["orbCustomerId"] = o.OrbCustomerId
	}
	return toSerialize, nil
}

type NullableBuyerInfo struct {
	value *BuyerInfo
	isSet bool
}

func (v NullableBuyerInfo) Get() *BuyerInfo {
	return v.value
}

func (v *NullableBuyerInfo) Set(val *BuyerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBuyerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBuyerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuyerInfo(val *BuyerInfo) *NullableBuyerInfo {
	return &NullableBuyerInfo{value: val, isSet: true}
}

func (v NullableBuyerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuyerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


