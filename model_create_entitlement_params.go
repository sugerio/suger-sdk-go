/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the CreateEntitlementParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEntitlementParams{}

// CreateEntitlementParams struct for CreateEntitlementParams
type CreateEntitlementParams struct {
	BuyerId *string `json:"buyerId,omitempty"`
	// The end date of the entitlement. If it is null, the entitlement will ends based on the offer. If it is in the past, the entitlement will be created as CANCELLED status.
	EndDate        *string `json:"endDate,omitempty"`
	OfferId        *string `json:"offerId,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	// The start date of the entitlement. If it is null, the entitlement starts immediately. It can be in the future or in the past.
	StartDate *string `json:"startDate,omitempty"`
}

// NewCreateEntitlementParams instantiates a new CreateEntitlementParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEntitlementParams() *CreateEntitlementParams {
	this := CreateEntitlementParams{}
	return &this
}

// NewCreateEntitlementParamsWithDefaults instantiates a new CreateEntitlementParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEntitlementParamsWithDefaults() *CreateEntitlementParams {
	this := CreateEntitlementParams{}
	return &this
}

// GetBuyerId returns the BuyerId field value if set, zero value otherwise.
func (o *CreateEntitlementParams) GetBuyerId() string {
	if o == nil || IsNil(o.BuyerId) {
		var ret string
		return ret
	}
	return *o.BuyerId
}

// GetBuyerIdOk returns a tuple with the BuyerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntitlementParams) GetBuyerIdOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerId) {
		return nil, false
	}
	return o.BuyerId, true
}

// HasBuyerId returns a boolean if a field has been set.
func (o *CreateEntitlementParams) HasBuyerId() bool {
	if o != nil && !IsNil(o.BuyerId) {
		return true
	}

	return false
}

// SetBuyerId gets a reference to the given string and assigns it to the BuyerId field.
func (o *CreateEntitlementParams) SetBuyerId(v string) {
	o.BuyerId = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CreateEntitlementParams) GetEndDate() string {
	if o == nil || IsNil(o.EndDate) {
		var ret string
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntitlementParams) GetEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CreateEntitlementParams) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given string and assigns it to the EndDate field.
func (o *CreateEntitlementParams) SetEndDate(v string) {
	o.EndDate = &v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *CreateEntitlementParams) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntitlementParams) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *CreateEntitlementParams) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *CreateEntitlementParams) SetOfferId(v string) {
	o.OfferId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *CreateEntitlementParams) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntitlementParams) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *CreateEntitlementParams) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *CreateEntitlementParams) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CreateEntitlementParams) GetStartDate() string {
	if o == nil || IsNil(o.StartDate) {
		var ret string
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEntitlementParams) GetStartDateOk() (*string, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CreateEntitlementParams) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given string and assigns it to the StartDate field.
func (o *CreateEntitlementParams) SetStartDate(v string) {
	o.StartDate = &v
}

func (o CreateEntitlementParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEntitlementParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyerId) {
		toSerialize["buyerId"] = o.BuyerId
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.OfferId) {
		toSerialize["offerId"] = o.OfferId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	return toSerialize, nil
}

type NullableCreateEntitlementParams struct {
	value *CreateEntitlementParams
	isSet bool
}

func (v NullableCreateEntitlementParams) Get() *CreateEntitlementParams {
	return v.value
}

func (v *NullableCreateEntitlementParams) Set(val *CreateEntitlementParams) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEntitlementParams) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEntitlementParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEntitlementParams(val *CreateEntitlementParams) *NullableCreateEntitlementParams {
	return &NullableCreateEntitlementParams{value: val, isSet: true}
}

func (v NullableCreateEntitlementParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEntitlementParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
