/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralAdditionalRequirements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralAdditionalRequirements{}

// MicrosoftPartnerReferralAdditionalRequirements struct for MicrosoftPartnerReferralAdditionalRequirements
type MicrosoftPartnerReferralAdditionalRequirements struct {
	Attributes []MicrosoftPartnerReferralRequirementAttribute `json:"attributes,omitempty"`
	Iot *MicrosoftPartnerReferralIot `json:"iot,omitempty"`
}

// NewMicrosoftPartnerReferralAdditionalRequirements instantiates a new MicrosoftPartnerReferralAdditionalRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralAdditionalRequirements() *MicrosoftPartnerReferralAdditionalRequirements {
	this := MicrosoftPartnerReferralAdditionalRequirements{}
	return &this
}

// NewMicrosoftPartnerReferralAdditionalRequirementsWithDefaults instantiates a new MicrosoftPartnerReferralAdditionalRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralAdditionalRequirementsWithDefaults() *MicrosoftPartnerReferralAdditionalRequirements {
	this := MicrosoftPartnerReferralAdditionalRequirements{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralAdditionalRequirements) GetAttributes() []MicrosoftPartnerReferralRequirementAttribute {
	if o == nil || IsNil(o.Attributes) {
		var ret []MicrosoftPartnerReferralRequirementAttribute
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralAdditionalRequirements) GetAttributesOk() ([]MicrosoftPartnerReferralRequirementAttribute, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralAdditionalRequirements) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given []MicrosoftPartnerReferralRequirementAttribute and assigns it to the Attributes field.
func (o *MicrosoftPartnerReferralAdditionalRequirements) SetAttributes(v []MicrosoftPartnerReferralRequirementAttribute) {
	o.Attributes = v
}

// GetIot returns the Iot field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralAdditionalRequirements) GetIot() MicrosoftPartnerReferralIot {
	if o == nil || IsNil(o.Iot) {
		var ret MicrosoftPartnerReferralIot
		return ret
	}
	return *o.Iot
}

// GetIotOk returns a tuple with the Iot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralAdditionalRequirements) GetIotOk() (*MicrosoftPartnerReferralIot, bool) {
	if o == nil || IsNil(o.Iot) {
		return nil, false
	}
	return o.Iot, true
}

// HasIot returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralAdditionalRequirements) HasIot() bool {
	if o != nil && !IsNil(o.Iot) {
		return true
	}

	return false
}

// SetIot gets a reference to the given MicrosoftPartnerReferralIot and assigns it to the Iot field.
func (o *MicrosoftPartnerReferralAdditionalRequirements) SetIot(v MicrosoftPartnerReferralIot) {
	o.Iot = &v
}

func (o MicrosoftPartnerReferralAdditionalRequirements) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralAdditionalRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Iot) {
		toSerialize["iot"] = o.Iot
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralAdditionalRequirements struct {
	value *MicrosoftPartnerReferralAdditionalRequirements
	isSet bool
}

func (v NullableMicrosoftPartnerReferralAdditionalRequirements) Get() *MicrosoftPartnerReferralAdditionalRequirements {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralAdditionalRequirements) Set(val *MicrosoftPartnerReferralAdditionalRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralAdditionalRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralAdditionalRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralAdditionalRequirements(val *MicrosoftPartnerReferralAdditionalRequirements) *NullableMicrosoftPartnerReferralAdditionalRequirements {
	return &NullableMicrosoftPartnerReferralAdditionalRequirements{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralAdditionalRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralAdditionalRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


