/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzurePriceSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzurePriceSchedule{}

// AzurePriceSchedule struct for AzurePriceSchedule
type AzurePriceSchedule struct {
	PriceCadence *AzurePriceCadence `json:"priceCadence,omitempty"`
	PricingModel *string `json:"pricingModel,omitempty"`
	PricingUnits []AzurePricingUnit `json:"pricingUnits,omitempty"`
	RetailPrice *AzurePrice `json:"retailPrice,omitempty"`
}

// NewAzurePriceSchedule instantiates a new AzurePriceSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzurePriceSchedule() *AzurePriceSchedule {
	this := AzurePriceSchedule{}
	return &this
}

// NewAzurePriceScheduleWithDefaults instantiates a new AzurePriceSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzurePriceScheduleWithDefaults() *AzurePriceSchedule {
	this := AzurePriceSchedule{}
	return &this
}

// GetPriceCadence returns the PriceCadence field value if set, zero value otherwise.
func (o *AzurePriceSchedule) GetPriceCadence() AzurePriceCadence {
	if o == nil || IsNil(o.PriceCadence) {
		var ret AzurePriceCadence
		return ret
	}
	return *o.PriceCadence
}

// GetPriceCadenceOk returns a tuple with the PriceCadence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceSchedule) GetPriceCadenceOk() (*AzurePriceCadence, bool) {
	if o == nil || IsNil(o.PriceCadence) {
		return nil, false
	}
	return o.PriceCadence, true
}

// HasPriceCadence returns a boolean if a field has been set.
func (o *AzurePriceSchedule) HasPriceCadence() bool {
	if o != nil && !IsNil(o.PriceCadence) {
		return true
	}

	return false
}

// SetPriceCadence gets a reference to the given AzurePriceCadence and assigns it to the PriceCadence field.
func (o *AzurePriceSchedule) SetPriceCadence(v AzurePriceCadence) {
	o.PriceCadence = &v
}

// GetPricingModel returns the PricingModel field value if set, zero value otherwise.
func (o *AzurePriceSchedule) GetPricingModel() string {
	if o == nil || IsNil(o.PricingModel) {
		var ret string
		return ret
	}
	return *o.PricingModel
}

// GetPricingModelOk returns a tuple with the PricingModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceSchedule) GetPricingModelOk() (*string, bool) {
	if o == nil || IsNil(o.PricingModel) {
		return nil, false
	}
	return o.PricingModel, true
}

// HasPricingModel returns a boolean if a field has been set.
func (o *AzurePriceSchedule) HasPricingModel() bool {
	if o != nil && !IsNil(o.PricingModel) {
		return true
	}

	return false
}

// SetPricingModel gets a reference to the given string and assigns it to the PricingModel field.
func (o *AzurePriceSchedule) SetPricingModel(v string) {
	o.PricingModel = &v
}

// GetPricingUnits returns the PricingUnits field value if set, zero value otherwise.
func (o *AzurePriceSchedule) GetPricingUnits() []AzurePricingUnit {
	if o == nil || IsNil(o.PricingUnits) {
		var ret []AzurePricingUnit
		return ret
	}
	return o.PricingUnits
}

// GetPricingUnitsOk returns a tuple with the PricingUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceSchedule) GetPricingUnitsOk() ([]AzurePricingUnit, bool) {
	if o == nil || IsNil(o.PricingUnits) {
		return nil, false
	}
	return o.PricingUnits, true
}

// HasPricingUnits returns a boolean if a field has been set.
func (o *AzurePriceSchedule) HasPricingUnits() bool {
	if o != nil && !IsNil(o.PricingUnits) {
		return true
	}

	return false
}

// SetPricingUnits gets a reference to the given []AzurePricingUnit and assigns it to the PricingUnits field.
func (o *AzurePriceSchedule) SetPricingUnits(v []AzurePricingUnit) {
	o.PricingUnits = v
}

// GetRetailPrice returns the RetailPrice field value if set, zero value otherwise.
func (o *AzurePriceSchedule) GetRetailPrice() AzurePrice {
	if o == nil || IsNil(o.RetailPrice) {
		var ret AzurePrice
		return ret
	}
	return *o.RetailPrice
}

// GetRetailPriceOk returns a tuple with the RetailPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceSchedule) GetRetailPriceOk() (*AzurePrice, bool) {
	if o == nil || IsNil(o.RetailPrice) {
		return nil, false
	}
	return o.RetailPrice, true
}

// HasRetailPrice returns a boolean if a field has been set.
func (o *AzurePriceSchedule) HasRetailPrice() bool {
	if o != nil && !IsNil(o.RetailPrice) {
		return true
	}

	return false
}

// SetRetailPrice gets a reference to the given AzurePrice and assigns it to the RetailPrice field.
func (o *AzurePriceSchedule) SetRetailPrice(v AzurePrice) {
	o.RetailPrice = &v
}

func (o AzurePriceSchedule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzurePriceSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PriceCadence) {
		toSerialize["priceCadence"] = o.PriceCadence
	}
	if !IsNil(o.PricingModel) {
		toSerialize["pricingModel"] = o.PricingModel
	}
	if !IsNil(o.PricingUnits) {
		toSerialize["pricingUnits"] = o.PricingUnits
	}
	if !IsNil(o.RetailPrice) {
		toSerialize["retailPrice"] = o.RetailPrice
	}
	return toSerialize, nil
}

type NullableAzurePriceSchedule struct {
	value *AzurePriceSchedule
	isSet bool
}

func (v NullableAzurePriceSchedule) Get() *AzurePriceSchedule {
	return v.value
}

func (v *NullableAzurePriceSchedule) Set(val *AzurePriceSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableAzurePriceSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableAzurePriceSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzurePriceSchedule(val *AzurePriceSchedule) *NullableAzurePriceSchedule {
	return &NullableAzurePriceSchedule{value: val, isSet: true}
}

func (v NullableAzurePriceSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzurePriceSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


