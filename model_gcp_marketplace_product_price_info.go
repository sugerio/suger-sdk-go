/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductPriceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductPriceInfo{}

// GcpMarketplaceProductPriceInfo struct for GcpMarketplaceProductPriceInfo
type GcpMarketplaceProductPriceInfo struct {
	Description *string `json:"description,omitempty"`
	PriceModel *GcpMarketplacePriceModel `json:"priceModel,omitempty"`
	// Subscription Plan (Flat Commitment)
	SubscriptionPlans []GcpMarketplaceProductSubscriptionPlan `json:"subscriptionPlans,omitempty"`
	// Usage Metering Dimension/Metric if available
	UsageFees []GcpMarketplaceProductUsageFee `json:"usageFees,omitempty"`
}

// NewGcpMarketplaceProductPriceInfo instantiates a new GcpMarketplaceProductPriceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductPriceInfo() *GcpMarketplaceProductPriceInfo {
	this := GcpMarketplaceProductPriceInfo{}
	return &this
}

// NewGcpMarketplaceProductPriceInfoWithDefaults instantiates a new GcpMarketplaceProductPriceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductPriceInfoWithDefaults() *GcpMarketplaceProductPriceInfo {
	this := GcpMarketplaceProductPriceInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPriceInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPriceInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPriceInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GcpMarketplaceProductPriceInfo) SetDescription(v string) {
	o.Description = &v
}

// GetPriceModel returns the PriceModel field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPriceInfo) GetPriceModel() GcpMarketplacePriceModel {
	if o == nil || IsNil(o.PriceModel) {
		var ret GcpMarketplacePriceModel
		return ret
	}
	return *o.PriceModel
}

// GetPriceModelOk returns a tuple with the PriceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPriceInfo) GetPriceModelOk() (*GcpMarketplacePriceModel, bool) {
	if o == nil || IsNil(o.PriceModel) {
		return nil, false
	}
	return o.PriceModel, true
}

// HasPriceModel returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPriceInfo) HasPriceModel() bool {
	if o != nil && !IsNil(o.PriceModel) {
		return true
	}

	return false
}

// SetPriceModel gets a reference to the given GcpMarketplacePriceModel and assigns it to the PriceModel field.
func (o *GcpMarketplaceProductPriceInfo) SetPriceModel(v GcpMarketplacePriceModel) {
	o.PriceModel = &v
}

// GetSubscriptionPlans returns the SubscriptionPlans field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPriceInfo) GetSubscriptionPlans() []GcpMarketplaceProductSubscriptionPlan {
	if o == nil || IsNil(o.SubscriptionPlans) {
		var ret []GcpMarketplaceProductSubscriptionPlan
		return ret
	}
	return o.SubscriptionPlans
}

// GetSubscriptionPlansOk returns a tuple with the SubscriptionPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPriceInfo) GetSubscriptionPlansOk() ([]GcpMarketplaceProductSubscriptionPlan, bool) {
	if o == nil || IsNil(o.SubscriptionPlans) {
		return nil, false
	}
	return o.SubscriptionPlans, true
}

// HasSubscriptionPlans returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPriceInfo) HasSubscriptionPlans() bool {
	if o != nil && !IsNil(o.SubscriptionPlans) {
		return true
	}

	return false
}

// SetSubscriptionPlans gets a reference to the given []GcpMarketplaceProductSubscriptionPlan and assigns it to the SubscriptionPlans field.
func (o *GcpMarketplaceProductPriceInfo) SetSubscriptionPlans(v []GcpMarketplaceProductSubscriptionPlan) {
	o.SubscriptionPlans = v
}

// GetUsageFees returns the UsageFees field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPriceInfo) GetUsageFees() []GcpMarketplaceProductUsageFee {
	if o == nil || IsNil(o.UsageFees) {
		var ret []GcpMarketplaceProductUsageFee
		return ret
	}
	return o.UsageFees
}

// GetUsageFeesOk returns a tuple with the UsageFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPriceInfo) GetUsageFeesOk() ([]GcpMarketplaceProductUsageFee, bool) {
	if o == nil || IsNil(o.UsageFees) {
		return nil, false
	}
	return o.UsageFees, true
}

// HasUsageFees returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPriceInfo) HasUsageFees() bool {
	if o != nil && !IsNil(o.UsageFees) {
		return true
	}

	return false
}

// SetUsageFees gets a reference to the given []GcpMarketplaceProductUsageFee and assigns it to the UsageFees field.
func (o *GcpMarketplaceProductPriceInfo) SetUsageFees(v []GcpMarketplaceProductUsageFee) {
	o.UsageFees = v
}

func (o GcpMarketplaceProductPriceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductPriceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.PriceModel) {
		toSerialize["priceModel"] = o.PriceModel
	}
	if !IsNil(o.SubscriptionPlans) {
		toSerialize["subscriptionPlans"] = o.SubscriptionPlans
	}
	if !IsNil(o.UsageFees) {
		toSerialize["usageFees"] = o.UsageFees
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductPriceInfo struct {
	value *GcpMarketplaceProductPriceInfo
	isSet bool
}

func (v NullableGcpMarketplaceProductPriceInfo) Get() *GcpMarketplaceProductPriceInfo {
	return v.value
}

func (v *NullableGcpMarketplaceProductPriceInfo) Set(val *GcpMarketplaceProductPriceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductPriceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductPriceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductPriceInfo(val *GcpMarketplaceProductPriceInfo) *NullableGcpMarketplaceProductPriceInfo {
	return &NullableGcpMarketplaceProductPriceInfo{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductPriceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductPriceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


