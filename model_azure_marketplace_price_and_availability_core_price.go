/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityCorePrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityCorePrice{}

// AzureMarketplacePriceAndAvailabilityCorePrice struct for AzureMarketplacePriceAndAvailabilityCorePrice
type AzureMarketplacePriceAndAvailabilityCorePrice struct {
	Price            *float32                `json:"price,omitempty"`
	PriceInputOption *string                 `json:"priceInputOption,omitempty"`
	PricePerCore     *float32                `json:"pricePerCore,omitempty"`
	PricePerCoreSize map[string]interface{}  `json:"pricePerCoreSize,omitempty"`
	Prices           []AzureMarketplacePrice `json:"prices,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityCorePrice instantiates a new AzureMarketplacePriceAndAvailabilityCorePrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityCorePrice() *AzureMarketplacePriceAndAvailabilityCorePrice {
	this := AzureMarketplacePriceAndAvailabilityCorePrice{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityCorePriceWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityCorePrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityCorePriceWithDefaults() *AzureMarketplacePriceAndAvailabilityCorePrice {
	this := AzureMarketplacePriceAndAvailabilityCorePrice{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) SetPrice(v float32) {
	o.Price = &v
}

// GetPriceInputOption returns the PriceInputOption field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPriceInputOption() string {
	if o == nil || IsNil(o.PriceInputOption) {
		var ret string
		return ret
	}
	return *o.PriceInputOption
}

// GetPriceInputOptionOk returns a tuple with the PriceInputOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPriceInputOptionOk() (*string, bool) {
	if o == nil || IsNil(o.PriceInputOption) {
		return nil, false
	}
	return o.PriceInputOption, true
}

// HasPriceInputOption returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) HasPriceInputOption() bool {
	if o != nil && !IsNil(o.PriceInputOption) {
		return true
	}

	return false
}

// SetPriceInputOption gets a reference to the given string and assigns it to the PriceInputOption field.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) SetPriceInputOption(v string) {
	o.PriceInputOption = &v
}

// GetPricePerCore returns the PricePerCore field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPricePerCore() float32 {
	if o == nil || IsNil(o.PricePerCore) {
		var ret float32
		return ret
	}
	return *o.PricePerCore
}

// GetPricePerCoreOk returns a tuple with the PricePerCore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPricePerCoreOk() (*float32, bool) {
	if o == nil || IsNil(o.PricePerCore) {
		return nil, false
	}
	return o.PricePerCore, true
}

// HasPricePerCore returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) HasPricePerCore() bool {
	if o != nil && !IsNil(o.PricePerCore) {
		return true
	}

	return false
}

// SetPricePerCore gets a reference to the given float32 and assigns it to the PricePerCore field.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) SetPricePerCore(v float32) {
	o.PricePerCore = &v
}

// GetPricePerCoreSize returns the PricePerCoreSize field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPricePerCoreSize() map[string]interface{} {
	if o == nil || IsNil(o.PricePerCoreSize) {
		var ret map[string]interface{}
		return ret
	}
	return o.PricePerCoreSize
}

// GetPricePerCoreSizeOk returns a tuple with the PricePerCoreSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPricePerCoreSizeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PricePerCoreSize) {
		return map[string]interface{}{}, false
	}
	return o.PricePerCoreSize, true
}

// HasPricePerCoreSize returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) HasPricePerCoreSize() bool {
	if o != nil && !IsNil(o.PricePerCoreSize) {
		return true
	}

	return false
}

// SetPricePerCoreSize gets a reference to the given map[string]interface{} and assigns it to the PricePerCoreSize field.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) SetPricePerCoreSize(v map[string]interface{}) {
	o.PricePerCoreSize = v
}

// GetPrices returns the Prices field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPrices() []AzureMarketplacePrice {
	if o == nil || IsNil(o.Prices) {
		var ret []AzureMarketplacePrice
		return ret
	}
	return o.Prices
}

// GetPricesOk returns a tuple with the Prices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) GetPricesOk() ([]AzureMarketplacePrice, bool) {
	if o == nil || IsNil(o.Prices) {
		return nil, false
	}
	return o.Prices, true
}

// HasPrices returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) HasPrices() bool {
	if o != nil && !IsNil(o.Prices) {
		return true
	}

	return false
}

// SetPrices gets a reference to the given []AzureMarketplacePrice and assigns it to the Prices field.
func (o *AzureMarketplacePriceAndAvailabilityCorePrice) SetPrices(v []AzureMarketplacePrice) {
	o.Prices = v
}

func (o AzureMarketplacePriceAndAvailabilityCorePrice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityCorePrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PriceInputOption) {
		toSerialize["priceInputOption"] = o.PriceInputOption
	}
	if !IsNil(o.PricePerCore) {
		toSerialize["pricePerCore"] = o.PricePerCore
	}
	if !IsNil(o.PricePerCoreSize) {
		toSerialize["pricePerCoreSize"] = o.PricePerCoreSize
	}
	if !IsNil(o.Prices) {
		toSerialize["prices"] = o.Prices
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityCorePrice struct {
	value *AzureMarketplacePriceAndAvailabilityCorePrice
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityCorePrice) Get() *AzureMarketplacePriceAndAvailabilityCorePrice {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCorePrice) Set(val *AzureMarketplacePriceAndAvailabilityCorePrice) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityCorePrice) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCorePrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityCorePrice(val *AzureMarketplacePriceAndAvailabilityCorePrice) *NullableAzureMarketplacePriceAndAvailabilityCorePrice {
	return &NullableAzureMarketplacePriceAndAvailabilityCorePrice{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityCorePrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCorePrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
