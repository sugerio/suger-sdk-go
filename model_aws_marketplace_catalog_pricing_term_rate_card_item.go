/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCatalogPricingTermRateCardItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCatalogPricingTermRateCardItem{}

// AwsMarketplaceCatalogPricingTermRateCardItem struct for AwsMarketplaceCatalogPricingTermRateCardItem
type AwsMarketplaceCatalogPricingTermRateCardItem struct {
	Description  *string `json:"Description,omitempty"`
	DimensionKey *string `json:"DimensionKey,omitempty"`
	// These fields are used for aws discovery API result.
	DisplayName *string `json:"DisplayName,omitempty"`
	Price       *string `json:"Price,omitempty"`
	Quantity    *string `json:"Quantity,omitempty"`
	Unit        *string `json:"Unit,omitempty"`
}

// NewAwsMarketplaceCatalogPricingTermRateCardItem instantiates a new AwsMarketplaceCatalogPricingTermRateCardItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCatalogPricingTermRateCardItem() *AwsMarketplaceCatalogPricingTermRateCardItem {
	this := AwsMarketplaceCatalogPricingTermRateCardItem{}
	return &this
}

// NewAwsMarketplaceCatalogPricingTermRateCardItemWithDefaults instantiates a new AwsMarketplaceCatalogPricingTermRateCardItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCatalogPricingTermRateCardItemWithDefaults() *AwsMarketplaceCatalogPricingTermRateCardItem {
	this := AwsMarketplaceCatalogPricingTermRateCardItem{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetDescription(v string) {
	o.Description = &v
}

// GetDimensionKey returns the DimensionKey field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDimensionKey() string {
	if o == nil || IsNil(o.DimensionKey) {
		var ret string
		return ret
	}
	return *o.DimensionKey
}

// GetDimensionKeyOk returns a tuple with the DimensionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDimensionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionKey) {
		return nil, false
	}
	return o.DimensionKey, true
}

// HasDimensionKey returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasDimensionKey() bool {
	if o != nil && !IsNil(o.DimensionKey) {
		return true
	}

	return false
}

// SetDimensionKey gets a reference to the given string and assigns it to the DimensionKey field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetDimensionKey(v string) {
	o.DimensionKey = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetQuantity(v string) {
	o.Quantity = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AwsMarketplaceCatalogPricingTermRateCardItem) SetUnit(v string) {
	o.Unit = &v
}

func (o AwsMarketplaceCatalogPricingTermRateCardItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCatalogPricingTermRateCardItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.DimensionKey) {
		toSerialize["DimensionKey"] = o.DimensionKey
	}
	if !IsNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !IsNil(o.Price) {
		toSerialize["Price"] = o.Price
	}
	if !IsNil(o.Quantity) {
		toSerialize["Quantity"] = o.Quantity
	}
	if !IsNil(o.Unit) {
		toSerialize["Unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCatalogPricingTermRateCardItem struct {
	value *AwsMarketplaceCatalogPricingTermRateCardItem
	isSet bool
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardItem) Get() *AwsMarketplaceCatalogPricingTermRateCardItem {
	return v.value
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardItem) Set(val *AwsMarketplaceCatalogPricingTermRateCardItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCatalogPricingTermRateCardItem(val *AwsMarketplaceCatalogPricingTermRateCardItem) *NullableAwsMarketplaceCatalogPricingTermRateCardItem {
	return &NullableAwsMarketplaceCatalogPricingTermRateCardItem{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
