/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem{}

// AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem struct for AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem
type AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem struct {
	BillingTerm *AzureMarketplaceTerm `json:"billingTerm,omitempty"`
	IsInfinite  *bool                 `json:"isInfinite,omitempty"`
	Quantity    *float32              `json:"quantity,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem instantiates a new AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem() *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem {
	this := AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItemWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItemWithDefaults() *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem {
	this := AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem{}
	return &this
}

// GetBillingTerm returns the BillingTerm field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetBillingTerm() AzureMarketplaceTerm {
	if o == nil || IsNil(o.BillingTerm) {
		var ret AzureMarketplaceTerm
		return ret
	}
	return *o.BillingTerm
}

// GetBillingTermOk returns a tuple with the BillingTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetBillingTermOk() (*AzureMarketplaceTerm, bool) {
	if o == nil || IsNil(o.BillingTerm) {
		return nil, false
	}
	return o.BillingTerm, true
}

// HasBillingTerm returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) HasBillingTerm() bool {
	if o != nil && !IsNil(o.BillingTerm) {
		return true
	}

	return false
}

// SetBillingTerm gets a reference to the given AzureMarketplaceTerm and assigns it to the BillingTerm field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) SetBillingTerm(v AzureMarketplaceTerm) {
	o.BillingTerm = &v
}

// GetIsInfinite returns the IsInfinite field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetIsInfinite() bool {
	if o == nil || IsNil(o.IsInfinite) {
		var ret bool
		return ret
	}
	return *o.IsInfinite
}

// GetIsInfiniteOk returns a tuple with the IsInfinite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetIsInfiniteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsInfinite) {
		return nil, false
	}
	return o.IsInfinite, true
}

// HasIsInfinite returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) HasIsInfinite() bool {
	if o != nil && !IsNil(o.IsInfinite) {
		return true
	}

	return false
}

// SetIsInfinite gets a reference to the given bool and assigns it to the IsInfinite field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) SetIsInfinite(v bool) {
	o.IsInfinite = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) SetQuantity(v float32) {
	o.Quantity = &v
}

func (o AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingTerm) {
		toSerialize["billingTerm"] = o.BillingTerm
	}
	if !IsNil(o.IsInfinite) {
		toSerialize["isInfinite"] = o.IsInfinite
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem struct {
	value *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) Get() *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) Set(val *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem(val *AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) *NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem {
	return &NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
