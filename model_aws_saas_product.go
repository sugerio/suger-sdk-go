/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsSaasProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsSaasProduct{}

// AwsSaasProduct struct for AwsSaasProduct
type AwsSaasProduct struct {
	Description *AwsSaasProductDescription `json:"Description,omitempty"`
	Dimensions []AwsSaasProductDimension `json:"Dimensions,omitempty"`
	PromotionalResources *AwsSaasProductPromotionalResources `json:"PromotionalResources,omitempty"`
	SupportInformation *AwsSaasProductSupportInformation `json:"SupportInformation,omitempty"`
	Versions []AwsSaasProductVersion `json:"Versions,omitempty"`
	// The product Id in AWS Marketplace Data Feed Service.
	DataFeedProductId *string `json:"dataFeedProductId,omitempty"`
	// AWS Product ID
	ProductId *string `json:"productId,omitempty"`
}

// NewAwsSaasProduct instantiates a new AwsSaasProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSaasProduct() *AwsSaasProduct {
	this := AwsSaasProduct{}
	return &this
}

// NewAwsSaasProductWithDefaults instantiates a new AwsSaasProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSaasProductWithDefaults() *AwsSaasProduct {
	this := AwsSaasProduct{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetDescription() AwsSaasProductDescription {
	if o == nil || IsNil(o.Description) {
		var ret AwsSaasProductDescription
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetDescriptionOk() (*AwsSaasProductDescription, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given AwsSaasProductDescription and assigns it to the Description field.
func (o *AwsSaasProduct) SetDescription(v AwsSaasProductDescription) {
	o.Description = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetDimensions() []AwsSaasProductDimension {
	if o == nil || IsNil(o.Dimensions) {
		var ret []AwsSaasProductDimension
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetDimensionsOk() ([]AwsSaasProductDimension, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []AwsSaasProductDimension and assigns it to the Dimensions field.
func (o *AwsSaasProduct) SetDimensions(v []AwsSaasProductDimension) {
	o.Dimensions = v
}

// GetPromotionalResources returns the PromotionalResources field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetPromotionalResources() AwsSaasProductPromotionalResources {
	if o == nil || IsNil(o.PromotionalResources) {
		var ret AwsSaasProductPromotionalResources
		return ret
	}
	return *o.PromotionalResources
}

// GetPromotionalResourcesOk returns a tuple with the PromotionalResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetPromotionalResourcesOk() (*AwsSaasProductPromotionalResources, bool) {
	if o == nil || IsNil(o.PromotionalResources) {
		return nil, false
	}
	return o.PromotionalResources, true
}

// HasPromotionalResources returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasPromotionalResources() bool {
	if o != nil && !IsNil(o.PromotionalResources) {
		return true
	}

	return false
}

// SetPromotionalResources gets a reference to the given AwsSaasProductPromotionalResources and assigns it to the PromotionalResources field.
func (o *AwsSaasProduct) SetPromotionalResources(v AwsSaasProductPromotionalResources) {
	o.PromotionalResources = &v
}

// GetSupportInformation returns the SupportInformation field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetSupportInformation() AwsSaasProductSupportInformation {
	if o == nil || IsNil(o.SupportInformation) {
		var ret AwsSaasProductSupportInformation
		return ret
	}
	return *o.SupportInformation
}

// GetSupportInformationOk returns a tuple with the SupportInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetSupportInformationOk() (*AwsSaasProductSupportInformation, bool) {
	if o == nil || IsNil(o.SupportInformation) {
		return nil, false
	}
	return o.SupportInformation, true
}

// HasSupportInformation returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasSupportInformation() bool {
	if o != nil && !IsNil(o.SupportInformation) {
		return true
	}

	return false
}

// SetSupportInformation gets a reference to the given AwsSaasProductSupportInformation and assigns it to the SupportInformation field.
func (o *AwsSaasProduct) SetSupportInformation(v AwsSaasProductSupportInformation) {
	o.SupportInformation = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetVersions() []AwsSaasProductVersion {
	if o == nil || IsNil(o.Versions) {
		var ret []AwsSaasProductVersion
		return ret
	}
	return o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetVersionsOk() ([]AwsSaasProductVersion, bool) {
	if o == nil || IsNil(o.Versions) {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasVersions() bool {
	if o != nil && !IsNil(o.Versions) {
		return true
	}

	return false
}

// SetVersions gets a reference to the given []AwsSaasProductVersion and assigns it to the Versions field.
func (o *AwsSaasProduct) SetVersions(v []AwsSaasProductVersion) {
	o.Versions = v
}

// GetDataFeedProductId returns the DataFeedProductId field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetDataFeedProductId() string {
	if o == nil || IsNil(o.DataFeedProductId) {
		var ret string
		return ret
	}
	return *o.DataFeedProductId
}

// GetDataFeedProductIdOk returns a tuple with the DataFeedProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetDataFeedProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataFeedProductId) {
		return nil, false
	}
	return o.DataFeedProductId, true
}

// HasDataFeedProductId returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasDataFeedProductId() bool {
	if o != nil && !IsNil(o.DataFeedProductId) {
		return true
	}

	return false
}

// SetDataFeedProductId gets a reference to the given string and assigns it to the DataFeedProductId field.
func (o *AwsSaasProduct) SetDataFeedProductId(v string) {
	o.DataFeedProductId = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *AwsSaasProduct) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProduct) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *AwsSaasProduct) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *AwsSaasProduct) SetProductId(v string) {
	o.ProductId = &v
}

func (o AwsSaasProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsSaasProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Dimensions) {
		toSerialize["Dimensions"] = o.Dimensions
	}
	if !IsNil(o.PromotionalResources) {
		toSerialize["PromotionalResources"] = o.PromotionalResources
	}
	if !IsNil(o.SupportInformation) {
		toSerialize["SupportInformation"] = o.SupportInformation
	}
	if !IsNil(o.Versions) {
		toSerialize["Versions"] = o.Versions
	}
	if !IsNil(o.DataFeedProductId) {
		toSerialize["dataFeedProductId"] = o.DataFeedProductId
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	return toSerialize, nil
}

type NullableAwsSaasProduct struct {
	value *AwsSaasProduct
	isSet bool
}

func (v NullableAwsSaasProduct) Get() *AwsSaasProduct {
	return v.value
}

func (v *NullableAwsSaasProduct) Set(val *AwsSaasProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSaasProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSaasProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSaasProduct(val *AwsSaasProduct) *NullableAwsSaasProduct {
	return &NullableAwsSaasProduct{value: val, isSet: true}
}

func (v NullableAwsSaasProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSaasProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


