/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityCustomMeter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityCustomMeter{}

// AzureMarketplacePriceAndAvailabilityCustomMeter struct for AzureMarketplacePriceAndAvailabilityCustomMeter
type AzureMarketplacePriceAndAvailabilityCustomMeter struct {
	Schema       *string                                                         `json:"$schema,omitempty"`
	CustomMeters *map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem `json:"customMeters,omitempty"`
	Id           *string                                                         `json:"id,omitempty"`
	Product      *string                                                         `json:"product,omitempty"`
	ResourceName *string                                                         `json:"resourceName,omitempty"`
	Validations  []AzureMarketplaceValidation                                    `json:"validations,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityCustomMeter instantiates a new AzureMarketplacePriceAndAvailabilityCustomMeter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityCustomMeter() *AzureMarketplacePriceAndAvailabilityCustomMeter {
	this := AzureMarketplacePriceAndAvailabilityCustomMeter{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityCustomMeterWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityCustomMeter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityCustomMeterWithDefaults() *AzureMarketplacePriceAndAvailabilityCustomMeter {
	this := AzureMarketplacePriceAndAvailabilityCustomMeter{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetSchema(v string) {
	o.Schema = &v
}

// GetCustomMeters returns the CustomMeters field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetCustomMeters() map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem {
	if o == nil || IsNil(o.CustomMeters) {
		var ret map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem
		return ret
	}
	return *o.CustomMeters
}

// GetCustomMetersOk returns a tuple with the CustomMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetCustomMetersOk() (*map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem, bool) {
	if o == nil || IsNil(o.CustomMeters) {
		return nil, false
	}
	return o.CustomMeters, true
}

// HasCustomMeters returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasCustomMeters() bool {
	if o != nil && !IsNil(o.CustomMeters) {
		return true
	}

	return false
}

// SetCustomMeters gets a reference to the given map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem and assigns it to the CustomMeters field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetCustomMeters(v map[string]AzureMarketplacePriceAndAvailabilityCustomMeterItem) {
	o.CustomMeters = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetId(v string) {
	o.Id = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetProduct(v string) {
	o.Product = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzureMarketplacePriceAndAvailabilityCustomMeter) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

func (o AzureMarketplacePriceAndAvailabilityCustomMeter) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityCustomMeter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.CustomMeters) {
		toSerialize["customMeters"] = o.CustomMeters
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityCustomMeter struct {
	value *AzureMarketplacePriceAndAvailabilityCustomMeter
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeter) Get() *AzureMarketplacePriceAndAvailabilityCustomMeter {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeter) Set(val *AzureMarketplacePriceAndAvailabilityCustomMeter) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeter) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityCustomMeter(val *AzureMarketplacePriceAndAvailabilityCustomMeter) *NullableAzureMarketplacePriceAndAvailabilityCustomMeter {
	return &NullableAzureMarketplacePriceAndAvailabilityCustomMeter{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityCustomMeter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityCustomMeter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
