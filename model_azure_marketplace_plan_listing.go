/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplacePlanListing type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePlanListing{}

// AzureMarketplacePlanListing struct for AzureMarketplacePlanListing
type AzureMarketplacePlanListing struct {
	Schema         *string                                 `json:"$schema,omitempty"`
	Description    *string                                 `json:"description,omitempty"`
	Id             *string                                 `json:"id,omitempty"`
	Kind           *string                                 `json:"kind,omitempty"`
	LanguageId     *string                                 `json:"languageId,omitempty"`
	LifecycleState *AzureMarketplaceResourceLifecycleState `json:"lifecycleState,omitempty"`
	Name           *string                                 `json:"name,omitempty"`
	Plan           *string                                 `json:"plan,omitempty"`
	Product        *string                                 `json:"product,omitempty"`
	ResourceName   *string                                 `json:"resourceName,omitempty"`
	Summary        *string                                 `json:"summary,omitempty"`
	Validations    []AzureMarketplaceValidation            `json:"validations,omitempty"`
}

// NewAzureMarketplacePlanListing instantiates a new AzureMarketplacePlanListing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePlanListing() *AzureMarketplacePlanListing {
	this := AzureMarketplacePlanListing{}
	return &this
}

// NewAzureMarketplacePlanListingWithDefaults instantiates a new AzureMarketplacePlanListing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePlanListingWithDefaults() *AzureMarketplacePlanListing {
	this := AzureMarketplacePlanListing{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplacePlanListing) SetSchema(v string) {
	o.Schema = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AzureMarketplacePlanListing) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplacePlanListing) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AzureMarketplacePlanListing) SetKind(v string) {
	o.Kind = &v
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetLanguageId() string {
	if o == nil || IsNil(o.LanguageId) {
		var ret string
		return ret
	}
	return *o.LanguageId
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetLanguageIdOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageId) {
		return nil, false
	}
	return o.LanguageId, true
}

// HasLanguageId returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasLanguageId() bool {
	if o != nil && !IsNil(o.LanguageId) {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given string and assigns it to the LanguageId field.
func (o *AzureMarketplacePlanListing) SetLanguageId(v string) {
	o.LanguageId = &v
}

// GetLifecycleState returns the LifecycleState field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetLifecycleState() AzureMarketplaceResourceLifecycleState {
	if o == nil || IsNil(o.LifecycleState) {
		var ret AzureMarketplaceResourceLifecycleState
		return ret
	}
	return *o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetLifecycleStateOk() (*AzureMarketplaceResourceLifecycleState, bool) {
	if o == nil || IsNil(o.LifecycleState) {
		return nil, false
	}
	return o.LifecycleState, true
}

// HasLifecycleState returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasLifecycleState() bool {
	if o != nil && !IsNil(o.LifecycleState) {
		return true
	}

	return false
}

// SetLifecycleState gets a reference to the given AzureMarketplaceResourceLifecycleState and assigns it to the LifecycleState field.
func (o *AzureMarketplacePlanListing) SetLifecycleState(v AzureMarketplaceResourceLifecycleState) {
	o.LifecycleState = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureMarketplacePlanListing) SetName(v string) {
	o.Name = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *AzureMarketplacePlanListing) SetPlan(v string) {
	o.Plan = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzureMarketplacePlanListing) SetProduct(v string) {
	o.Product = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzureMarketplacePlanListing) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *AzureMarketplacePlanListing) SetSummary(v string) {
	o.Summary = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzureMarketplacePlanListing) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePlanListing) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzureMarketplacePlanListing) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzureMarketplacePlanListing) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

func (o AzureMarketplacePlanListing) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePlanListing) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.LanguageId) {
		toSerialize["languageId"] = o.LanguageId
	}
	if !IsNil(o.LifecycleState) {
		toSerialize["lifecycleState"] = o.LifecycleState
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePlanListing struct {
	value *AzureMarketplacePlanListing
	isSet bool
}

func (v NullableAzureMarketplacePlanListing) Get() *AzureMarketplacePlanListing {
	return v.value
}

func (v *NullableAzureMarketplacePlanListing) Set(val *AzureMarketplacePlanListing) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePlanListing) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePlanListing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePlanListing(val *AzureMarketplacePlanListing) *NullableAzureMarketplacePlanListing {
	return &NullableAzureMarketplacePlanListing{value: val, isSet: true}
}

func (v NullableAzureMarketplacePlanListing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePlanListing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
