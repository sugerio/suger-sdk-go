/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GcpMarketplaceUserAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceUserAccount{}

// GcpMarketplaceUserAccount struct for GcpMarketplaceUserAccount
type GcpMarketplaceUserAccount struct {
	// The approvals for this account, that are permitted or have been completed.
	Approvals []GcpMarketplaceUserAccountApproval `json:"approvals,omitempty"`
	// The buyer's GCP billing account ID.
	BillingAccountId *string `json:"billingAccountId,omitempty"`
	CompanyInfo *CompanyInfo `json:"companyInfo,omitempty"`
	// RFC3339 UTC timestamp
	CreateTime *time.Time `json:"createTime,omitempty"`
	// GCP Marketplace User Account ID.
	Id *string `json:"id,omitempty"`
	InputProperties []int32 `json:"inputProperties,omitempty"`
	// The resource name of the account. Account names have the form providers/{provider_id}/accounts/{account_id}.
	Name *string `json:"name,omitempty"`
	// The identifier of the service provider (SaaS Seller) that this account was created against.
	Provider *string `json:"provider,omitempty"`
	State *GcpMarketplaceUserAccountState `json:"state,omitempty"`
	// RFC3339 UTC timestamp
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	UserInfo *GcpUserInfo `json:"userInfo,omitempty"`
}

// NewGcpMarketplaceUserAccount instantiates a new GcpMarketplaceUserAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceUserAccount() *GcpMarketplaceUserAccount {
	this := GcpMarketplaceUserAccount{}
	return &this
}

// NewGcpMarketplaceUserAccountWithDefaults instantiates a new GcpMarketplaceUserAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceUserAccountWithDefaults() *GcpMarketplaceUserAccount {
	this := GcpMarketplaceUserAccount{}
	return &this
}

// GetApprovals returns the Approvals field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetApprovals() []GcpMarketplaceUserAccountApproval {
	if o == nil || IsNil(o.Approvals) {
		var ret []GcpMarketplaceUserAccountApproval
		return ret
	}
	return o.Approvals
}

// GetApprovalsOk returns a tuple with the Approvals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetApprovalsOk() ([]GcpMarketplaceUserAccountApproval, bool) {
	if o == nil || IsNil(o.Approvals) {
		return nil, false
	}
	return o.Approvals, true
}

// HasApprovals returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasApprovals() bool {
	if o != nil && !IsNil(o.Approvals) {
		return true
	}

	return false
}

// SetApprovals gets a reference to the given []GcpMarketplaceUserAccountApproval and assigns it to the Approvals field.
func (o *GcpMarketplaceUserAccount) SetApprovals(v []GcpMarketplaceUserAccountApproval) {
	o.Approvals = v
}

// GetBillingAccountId returns the BillingAccountId field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetBillingAccountId() string {
	if o == nil || IsNil(o.BillingAccountId) {
		var ret string
		return ret
	}
	return *o.BillingAccountId
}

// GetBillingAccountIdOk returns a tuple with the BillingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetBillingAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingAccountId) {
		return nil, false
	}
	return o.BillingAccountId, true
}

// HasBillingAccountId returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasBillingAccountId() bool {
	if o != nil && !IsNil(o.BillingAccountId) {
		return true
	}

	return false
}

// SetBillingAccountId gets a reference to the given string and assigns it to the BillingAccountId field.
func (o *GcpMarketplaceUserAccount) SetBillingAccountId(v string) {
	o.BillingAccountId = &v
}

// GetCompanyInfo returns the CompanyInfo field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetCompanyInfo() CompanyInfo {
	if o == nil || IsNil(o.CompanyInfo) {
		var ret CompanyInfo
		return ret
	}
	return *o.CompanyInfo
}

// GetCompanyInfoOk returns a tuple with the CompanyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetCompanyInfoOk() (*CompanyInfo, bool) {
	if o == nil || IsNil(o.CompanyInfo) {
		return nil, false
	}
	return o.CompanyInfo, true
}

// HasCompanyInfo returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasCompanyInfo() bool {
	if o != nil && !IsNil(o.CompanyInfo) {
		return true
	}

	return false
}

// SetCompanyInfo gets a reference to the given CompanyInfo and assigns it to the CompanyInfo field.
func (o *GcpMarketplaceUserAccount) SetCompanyInfo(v CompanyInfo) {
	o.CompanyInfo = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *GcpMarketplaceUserAccount) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GcpMarketplaceUserAccount) SetId(v string) {
	o.Id = &v
}

// GetInputProperties returns the InputProperties field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetInputProperties() []int32 {
	if o == nil || IsNil(o.InputProperties) {
		var ret []int32
		return ret
	}
	return o.InputProperties
}

// GetInputPropertiesOk returns a tuple with the InputProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetInputPropertiesOk() ([]int32, bool) {
	if o == nil || IsNil(o.InputProperties) {
		return nil, false
	}
	return o.InputProperties, true
}

// HasInputProperties returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasInputProperties() bool {
	if o != nil && !IsNil(o.InputProperties) {
		return true
	}

	return false
}

// SetInputProperties gets a reference to the given []int32 and assigns it to the InputProperties field.
func (o *GcpMarketplaceUserAccount) SetInputProperties(v []int32) {
	o.InputProperties = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GcpMarketplaceUserAccount) SetName(v string) {
	o.Name = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *GcpMarketplaceUserAccount) SetProvider(v string) {
	o.Provider = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetState() GcpMarketplaceUserAccountState {
	if o == nil || IsNil(o.State) {
		var ret GcpMarketplaceUserAccountState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetStateOk() (*GcpMarketplaceUserAccountState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given GcpMarketplaceUserAccountState and assigns it to the State field.
func (o *GcpMarketplaceUserAccount) SetState(v GcpMarketplaceUserAccountState) {
	o.State = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *GcpMarketplaceUserAccount) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetUserInfo returns the UserInfo field value if set, zero value otherwise.
func (o *GcpMarketplaceUserAccount) GetUserInfo() GcpUserInfo {
	if o == nil || IsNil(o.UserInfo) {
		var ret GcpUserInfo
		return ret
	}
	return *o.UserInfo
}

// GetUserInfoOk returns a tuple with the UserInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceUserAccount) GetUserInfoOk() (*GcpUserInfo, bool) {
	if o == nil || IsNil(o.UserInfo) {
		return nil, false
	}
	return o.UserInfo, true
}

// HasUserInfo returns a boolean if a field has been set.
func (o *GcpMarketplaceUserAccount) HasUserInfo() bool {
	if o != nil && !IsNil(o.UserInfo) {
		return true
	}

	return false
}

// SetUserInfo gets a reference to the given GcpUserInfo and assigns it to the UserInfo field.
func (o *GcpMarketplaceUserAccount) SetUserInfo(v GcpUserInfo) {
	o.UserInfo = &v
}

func (o GcpMarketplaceUserAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceUserAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Approvals) {
		toSerialize["approvals"] = o.Approvals
	}
	if !IsNil(o.BillingAccountId) {
		toSerialize["billingAccountId"] = o.BillingAccountId
	}
	if !IsNil(o.CompanyInfo) {
		toSerialize["companyInfo"] = o.CompanyInfo
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InputProperties) {
		toSerialize["inputProperties"] = o.InputProperties
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !IsNil(o.UserInfo) {
		toSerialize["userInfo"] = o.UserInfo
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceUserAccount struct {
	value *GcpMarketplaceUserAccount
	isSet bool
}

func (v NullableGcpMarketplaceUserAccount) Get() *GcpMarketplaceUserAccount {
	return v.value
}

func (v *NullableGcpMarketplaceUserAccount) Set(val *GcpMarketplaceUserAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceUserAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceUserAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceUserAccount(val *GcpMarketplaceUserAccount) *NullableGcpMarketplaceUserAccount {
	return &NullableGcpMarketplaceUserAccount{value: val, isSet: true}
}

func (v NullableGcpMarketplaceUserAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceUserAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


