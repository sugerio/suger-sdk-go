/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GcpMarketplaceEntitlement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceEntitlement{}

// GcpMarketplaceEntitlement struct for GcpMarketplaceEntitlement
type GcpMarketplaceEntitlement struct {
	// The resource name of the account that this entitlement is based on, if any, in format \"\"providers/{provider_id}/accounts/{account_id}\"
	Account *string `json:"account,omitempty"`
	// The resources using this entitlement, if applicable.
	Consumers  []GcpMarketplaceConsumer `json:"consumers,omitempty"`
	CreateTime *time.Time               `json:"createTime,omitempty"`
	// Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.
	Id *string `json:"id,omitempty"`
	// The custom properties that were collected from the user to create this entitlement.
	InputProperties []int32 `json:"inputProperties,omitempty"`
	// Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.
	MessageToUser *string `json:"messageToUser,omitempty"`
	// The resource name of the entitlement. Entitlement names have the form of `providers/{provider_id}/entitlements/{entitlement_id}`.
	Name *string `json:"name,omitempty"`
	// in ISO 8601 duration format, such as \"P2Y3M\". For Marketplace pub/sub event.
	NewOfferDuration *string `json:"newOfferDuration,omitempty"`
	// Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer. If the offer was created with a term instead of a specified end date, this field is empty.
	NewOfferEndTime *string `json:"newOfferEndTime,omitempty"`
	// Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.
	NewOfferStartTime *string `json:"newOfferStartTime,omitempty"`
	// The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the pending plan change is moving to an offer. Format: 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the offer is private or public.
	NewPendingOffer *string `json:"newPendingOffer,omitempty"`
	// The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan change is not moving to an offer since the entitlement is not pending, only the plan change is pending.
	NewPendingOfferDuration *string `json:"newPendingOfferDuration,omitempty"`
	// The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.
	NewPendingPlan *string `json:"newPendingPlan,omitempty"`
	// When the buyer changes plan, For Marketplace pub/sub event.
	NewPlan *string `json:"newPlan,omitempty"`
	// The name of the offer that was procured. Field is empty if order was not made using an offer. Format: 'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}', depending on whether the offer is private or public.
	Offer *string `json:"offer,omitempty"`
	// The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as \"P1Y\", \"P2M\"
	OfferDuration *string `json:"offerDuration,omitempty"`
	// When the offer is effective.
	OfferEffectiveTime *time.Time `json:"offerEffectiveTime,omitempty"`
	// Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.
	OfferEndTime *time.Time `json:"offerEndTime,omitempty"`
	// The identifier of the plan that was procured. Required if the product has plans.
	Plan *string `json:"plan,omitempty"`
	// The identifier of the entity that was purchased. This may actually represent a product, quote, or offer. For Private offer, \"projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id\"
	Product *string `json:"product,omitempty"`
	// The identifier of the product that was procured.
	ProductExternalName *string `json:"productExternalName,omitempty"`
	// The ID of the service provider under Cloud Commerce platform that this entitlement was created against.
	Provider *string `json:"provider,omitempty"`
	// The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.
	QuoteExternalName *string `json:"quoteExternalName,omitempty"`
	// Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState
	State *GcpMarketplaceEntitlementState `json:"state,omitempty"`
	// The End time for the subscription corresponding to this entitlement.
	SubscriptionEndTime *time.Time `json:"subscriptionEndTime,omitempty"`
	// The last update timestamp. It is the endTime for the cancelled entitlement.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	// The consumerId to use when reporting usage through the Service Control API. See the consumerId field at Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details. This field is present only if the product has usage-based billing configured.
	UsageReportingId *string `json:"usageReportingId,omitempty"`
}

// NewGcpMarketplaceEntitlement instantiates a new GcpMarketplaceEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceEntitlement() *GcpMarketplaceEntitlement {
	this := GcpMarketplaceEntitlement{}
	return &this
}

// NewGcpMarketplaceEntitlementWithDefaults instantiates a new GcpMarketplaceEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceEntitlementWithDefaults() *GcpMarketplaceEntitlement {
	this := GcpMarketplaceEntitlement{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *GcpMarketplaceEntitlement) SetAccount(v string) {
	o.Account = &v
}

// GetConsumers returns the Consumers field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetConsumers() []GcpMarketplaceConsumer {
	if o == nil || IsNil(o.Consumers) {
		var ret []GcpMarketplaceConsumer
		return ret
	}
	return o.Consumers
}

// GetConsumersOk returns a tuple with the Consumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetConsumersOk() ([]GcpMarketplaceConsumer, bool) {
	if o == nil || IsNil(o.Consumers) {
		return nil, false
	}
	return o.Consumers, true
}

// HasConsumers returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasConsumers() bool {
	if o != nil && !IsNil(o.Consumers) {
		return true
	}

	return false
}

// SetConsumers gets a reference to the given []GcpMarketplaceConsumer and assigns it to the Consumers field.
func (o *GcpMarketplaceEntitlement) SetConsumers(v []GcpMarketplaceConsumer) {
	o.Consumers = v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *GcpMarketplaceEntitlement) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GcpMarketplaceEntitlement) SetId(v string) {
	o.Id = &v
}

// GetInputProperties returns the InputProperties field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetInputProperties() []int32 {
	if o == nil || IsNil(o.InputProperties) {
		var ret []int32
		return ret
	}
	return o.InputProperties
}

// GetInputPropertiesOk returns a tuple with the InputProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetInputPropertiesOk() ([]int32, bool) {
	if o == nil || IsNil(o.InputProperties) {
		return nil, false
	}
	return o.InputProperties, true
}

// HasInputProperties returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasInputProperties() bool {
	if o != nil && !IsNil(o.InputProperties) {
		return true
	}

	return false
}

// SetInputProperties gets a reference to the given []int32 and assigns it to the InputProperties field.
func (o *GcpMarketplaceEntitlement) SetInputProperties(v []int32) {
	o.InputProperties = v
}

// GetMessageToUser returns the MessageToUser field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetMessageToUser() string {
	if o == nil || IsNil(o.MessageToUser) {
		var ret string
		return ret
	}
	return *o.MessageToUser
}

// GetMessageToUserOk returns a tuple with the MessageToUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetMessageToUserOk() (*string, bool) {
	if o == nil || IsNil(o.MessageToUser) {
		return nil, false
	}
	return o.MessageToUser, true
}

// HasMessageToUser returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasMessageToUser() bool {
	if o != nil && !IsNil(o.MessageToUser) {
		return true
	}

	return false
}

// SetMessageToUser gets a reference to the given string and assigns it to the MessageToUser field.
func (o *GcpMarketplaceEntitlement) SetMessageToUser(v string) {
	o.MessageToUser = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GcpMarketplaceEntitlement) SetName(v string) {
	o.Name = &v
}

// GetNewOfferDuration returns the NewOfferDuration field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewOfferDuration() string {
	if o == nil || IsNil(o.NewOfferDuration) {
		var ret string
		return ret
	}
	return *o.NewOfferDuration
}

// GetNewOfferDurationOk returns a tuple with the NewOfferDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewOfferDurationOk() (*string, bool) {
	if o == nil || IsNil(o.NewOfferDuration) {
		return nil, false
	}
	return o.NewOfferDuration, true
}

// HasNewOfferDuration returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewOfferDuration() bool {
	if o != nil && !IsNil(o.NewOfferDuration) {
		return true
	}

	return false
}

// SetNewOfferDuration gets a reference to the given string and assigns it to the NewOfferDuration field.
func (o *GcpMarketplaceEntitlement) SetNewOfferDuration(v string) {
	o.NewOfferDuration = &v
}

// GetNewOfferEndTime returns the NewOfferEndTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewOfferEndTime() string {
	if o == nil || IsNil(o.NewOfferEndTime) {
		var ret string
		return ret
	}
	return *o.NewOfferEndTime
}

// GetNewOfferEndTimeOk returns a tuple with the NewOfferEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewOfferEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NewOfferEndTime) {
		return nil, false
	}
	return o.NewOfferEndTime, true
}

// HasNewOfferEndTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewOfferEndTime() bool {
	if o != nil && !IsNil(o.NewOfferEndTime) {
		return true
	}

	return false
}

// SetNewOfferEndTime gets a reference to the given string and assigns it to the NewOfferEndTime field.
func (o *GcpMarketplaceEntitlement) SetNewOfferEndTime(v string) {
	o.NewOfferEndTime = &v
}

// GetNewOfferStartTime returns the NewOfferStartTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewOfferStartTime() string {
	if o == nil || IsNil(o.NewOfferStartTime) {
		var ret string
		return ret
	}
	return *o.NewOfferStartTime
}

// GetNewOfferStartTimeOk returns a tuple with the NewOfferStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewOfferStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NewOfferStartTime) {
		return nil, false
	}
	return o.NewOfferStartTime, true
}

// HasNewOfferStartTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewOfferStartTime() bool {
	if o != nil && !IsNil(o.NewOfferStartTime) {
		return true
	}

	return false
}

// SetNewOfferStartTime gets a reference to the given string and assigns it to the NewOfferStartTime field.
func (o *GcpMarketplaceEntitlement) SetNewOfferStartTime(v string) {
	o.NewOfferStartTime = &v
}

// GetNewPendingOffer returns the NewPendingOffer field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewPendingOffer() string {
	if o == nil || IsNil(o.NewPendingOffer) {
		var ret string
		return ret
	}
	return *o.NewPendingOffer
}

// GetNewPendingOfferOk returns a tuple with the NewPendingOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewPendingOfferOk() (*string, bool) {
	if o == nil || IsNil(o.NewPendingOffer) {
		return nil, false
	}
	return o.NewPendingOffer, true
}

// HasNewPendingOffer returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewPendingOffer() bool {
	if o != nil && !IsNil(o.NewPendingOffer) {
		return true
	}

	return false
}

// SetNewPendingOffer gets a reference to the given string and assigns it to the NewPendingOffer field.
func (o *GcpMarketplaceEntitlement) SetNewPendingOffer(v string) {
	o.NewPendingOffer = &v
}

// GetNewPendingOfferDuration returns the NewPendingOfferDuration field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewPendingOfferDuration() string {
	if o == nil || IsNil(o.NewPendingOfferDuration) {
		var ret string
		return ret
	}
	return *o.NewPendingOfferDuration
}

// GetNewPendingOfferDurationOk returns a tuple with the NewPendingOfferDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewPendingOfferDurationOk() (*string, bool) {
	if o == nil || IsNil(o.NewPendingOfferDuration) {
		return nil, false
	}
	return o.NewPendingOfferDuration, true
}

// HasNewPendingOfferDuration returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewPendingOfferDuration() bool {
	if o != nil && !IsNil(o.NewPendingOfferDuration) {
		return true
	}

	return false
}

// SetNewPendingOfferDuration gets a reference to the given string and assigns it to the NewPendingOfferDuration field.
func (o *GcpMarketplaceEntitlement) SetNewPendingOfferDuration(v string) {
	o.NewPendingOfferDuration = &v
}

// GetNewPendingPlan returns the NewPendingPlan field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewPendingPlan() string {
	if o == nil || IsNil(o.NewPendingPlan) {
		var ret string
		return ret
	}
	return *o.NewPendingPlan
}

// GetNewPendingPlanOk returns a tuple with the NewPendingPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewPendingPlanOk() (*string, bool) {
	if o == nil || IsNil(o.NewPendingPlan) {
		return nil, false
	}
	return o.NewPendingPlan, true
}

// HasNewPendingPlan returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewPendingPlan() bool {
	if o != nil && !IsNil(o.NewPendingPlan) {
		return true
	}

	return false
}

// SetNewPendingPlan gets a reference to the given string and assigns it to the NewPendingPlan field.
func (o *GcpMarketplaceEntitlement) SetNewPendingPlan(v string) {
	o.NewPendingPlan = &v
}

// GetNewPlan returns the NewPlan field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetNewPlan() string {
	if o == nil || IsNil(o.NewPlan) {
		var ret string
		return ret
	}
	return *o.NewPlan
}

// GetNewPlanOk returns a tuple with the NewPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetNewPlanOk() (*string, bool) {
	if o == nil || IsNil(o.NewPlan) {
		return nil, false
	}
	return o.NewPlan, true
}

// HasNewPlan returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasNewPlan() bool {
	if o != nil && !IsNil(o.NewPlan) {
		return true
	}

	return false
}

// SetNewPlan gets a reference to the given string and assigns it to the NewPlan field.
func (o *GcpMarketplaceEntitlement) SetNewPlan(v string) {
	o.NewPlan = &v
}

// GetOffer returns the Offer field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetOffer() string {
	if o == nil || IsNil(o.Offer) {
		var ret string
		return ret
	}
	return *o.Offer
}

// GetOfferOk returns a tuple with the Offer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetOfferOk() (*string, bool) {
	if o == nil || IsNil(o.Offer) {
		return nil, false
	}
	return o.Offer, true
}

// HasOffer returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasOffer() bool {
	if o != nil && !IsNil(o.Offer) {
		return true
	}

	return false
}

// SetOffer gets a reference to the given string and assigns it to the Offer field.
func (o *GcpMarketplaceEntitlement) SetOffer(v string) {
	o.Offer = &v
}

// GetOfferDuration returns the OfferDuration field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetOfferDuration() string {
	if o == nil || IsNil(o.OfferDuration) {
		var ret string
		return ret
	}
	return *o.OfferDuration
}

// GetOfferDurationOk returns a tuple with the OfferDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetOfferDurationOk() (*string, bool) {
	if o == nil || IsNil(o.OfferDuration) {
		return nil, false
	}
	return o.OfferDuration, true
}

// HasOfferDuration returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasOfferDuration() bool {
	if o != nil && !IsNil(o.OfferDuration) {
		return true
	}

	return false
}

// SetOfferDuration gets a reference to the given string and assigns it to the OfferDuration field.
func (o *GcpMarketplaceEntitlement) SetOfferDuration(v string) {
	o.OfferDuration = &v
}

// GetOfferEffectiveTime returns the OfferEffectiveTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetOfferEffectiveTime() time.Time {
	if o == nil || IsNil(o.OfferEffectiveTime) {
		var ret time.Time
		return ret
	}
	return *o.OfferEffectiveTime
}

// GetOfferEffectiveTimeOk returns a tuple with the OfferEffectiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetOfferEffectiveTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OfferEffectiveTime) {
		return nil, false
	}
	return o.OfferEffectiveTime, true
}

// HasOfferEffectiveTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasOfferEffectiveTime() bool {
	if o != nil && !IsNil(o.OfferEffectiveTime) {
		return true
	}

	return false
}

// SetOfferEffectiveTime gets a reference to the given time.Time and assigns it to the OfferEffectiveTime field.
func (o *GcpMarketplaceEntitlement) SetOfferEffectiveTime(v time.Time) {
	o.OfferEffectiveTime = &v
}

// GetOfferEndTime returns the OfferEndTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetOfferEndTime() time.Time {
	if o == nil || IsNil(o.OfferEndTime) {
		var ret time.Time
		return ret
	}
	return *o.OfferEndTime
}

// GetOfferEndTimeOk returns a tuple with the OfferEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetOfferEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OfferEndTime) {
		return nil, false
	}
	return o.OfferEndTime, true
}

// HasOfferEndTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasOfferEndTime() bool {
	if o != nil && !IsNil(o.OfferEndTime) {
		return true
	}

	return false
}

// SetOfferEndTime gets a reference to the given time.Time and assigns it to the OfferEndTime field.
func (o *GcpMarketplaceEntitlement) SetOfferEndTime(v time.Time) {
	o.OfferEndTime = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *GcpMarketplaceEntitlement) SetPlan(v string) {
	o.Plan = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *GcpMarketplaceEntitlement) SetProduct(v string) {
	o.Product = &v
}

// GetProductExternalName returns the ProductExternalName field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetProductExternalName() string {
	if o == nil || IsNil(o.ProductExternalName) {
		var ret string
		return ret
	}
	return *o.ProductExternalName
}

// GetProductExternalNameOk returns a tuple with the ProductExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetProductExternalNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductExternalName) {
		return nil, false
	}
	return o.ProductExternalName, true
}

// HasProductExternalName returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasProductExternalName() bool {
	if o != nil && !IsNil(o.ProductExternalName) {
		return true
	}

	return false
}

// SetProductExternalName gets a reference to the given string and assigns it to the ProductExternalName field.
func (o *GcpMarketplaceEntitlement) SetProductExternalName(v string) {
	o.ProductExternalName = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *GcpMarketplaceEntitlement) SetProvider(v string) {
	o.Provider = &v
}

// GetQuoteExternalName returns the QuoteExternalName field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetQuoteExternalName() string {
	if o == nil || IsNil(o.QuoteExternalName) {
		var ret string
		return ret
	}
	return *o.QuoteExternalName
}

// GetQuoteExternalNameOk returns a tuple with the QuoteExternalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetQuoteExternalNameOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteExternalName) {
		return nil, false
	}
	return o.QuoteExternalName, true
}

// HasQuoteExternalName returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasQuoteExternalName() bool {
	if o != nil && !IsNil(o.QuoteExternalName) {
		return true
	}

	return false
}

// SetQuoteExternalName gets a reference to the given string and assigns it to the QuoteExternalName field.
func (o *GcpMarketplaceEntitlement) SetQuoteExternalName(v string) {
	o.QuoteExternalName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetState() GcpMarketplaceEntitlementState {
	if o == nil || IsNil(o.State) {
		var ret GcpMarketplaceEntitlementState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetStateOk() (*GcpMarketplaceEntitlementState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given GcpMarketplaceEntitlementState and assigns it to the State field.
func (o *GcpMarketplaceEntitlement) SetState(v GcpMarketplaceEntitlementState) {
	o.State = &v
}

// GetSubscriptionEndTime returns the SubscriptionEndTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetSubscriptionEndTime() time.Time {
	if o == nil || IsNil(o.SubscriptionEndTime) {
		var ret time.Time
		return ret
	}
	return *o.SubscriptionEndTime
}

// GetSubscriptionEndTimeOk returns a tuple with the SubscriptionEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetSubscriptionEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.SubscriptionEndTime) {
		return nil, false
	}
	return o.SubscriptionEndTime, true
}

// HasSubscriptionEndTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasSubscriptionEndTime() bool {
	if o != nil && !IsNil(o.SubscriptionEndTime) {
		return true
	}

	return false
}

// SetSubscriptionEndTime gets a reference to the given time.Time and assigns it to the SubscriptionEndTime field.
func (o *GcpMarketplaceEntitlement) SetSubscriptionEndTime(v time.Time) {
	o.SubscriptionEndTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *GcpMarketplaceEntitlement) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetUsageReportingId returns the UsageReportingId field value if set, zero value otherwise.
func (o *GcpMarketplaceEntitlement) GetUsageReportingId() string {
	if o == nil || IsNil(o.UsageReportingId) {
		var ret string
		return ret
	}
	return *o.UsageReportingId
}

// GetUsageReportingIdOk returns a tuple with the UsageReportingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceEntitlement) GetUsageReportingIdOk() (*string, bool) {
	if o == nil || IsNil(o.UsageReportingId) {
		return nil, false
	}
	return o.UsageReportingId, true
}

// HasUsageReportingId returns a boolean if a field has been set.
func (o *GcpMarketplaceEntitlement) HasUsageReportingId() bool {
	if o != nil && !IsNil(o.UsageReportingId) {
		return true
	}

	return false
}

// SetUsageReportingId gets a reference to the given string and assigns it to the UsageReportingId field.
func (o *GcpMarketplaceEntitlement) SetUsageReportingId(v string) {
	o.UsageReportingId = &v
}

func (o GcpMarketplaceEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceEntitlement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.Consumers) {
		toSerialize["consumers"] = o.Consumers
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InputProperties) {
		toSerialize["inputProperties"] = o.InputProperties
	}
	if !IsNil(o.MessageToUser) {
		toSerialize["messageToUser"] = o.MessageToUser
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NewOfferDuration) {
		toSerialize["newOfferDuration"] = o.NewOfferDuration
	}
	if !IsNil(o.NewOfferEndTime) {
		toSerialize["newOfferEndTime"] = o.NewOfferEndTime
	}
	if !IsNil(o.NewOfferStartTime) {
		toSerialize["newOfferStartTime"] = o.NewOfferStartTime
	}
	if !IsNil(o.NewPendingOffer) {
		toSerialize["newPendingOffer"] = o.NewPendingOffer
	}
	if !IsNil(o.NewPendingOfferDuration) {
		toSerialize["newPendingOfferDuration"] = o.NewPendingOfferDuration
	}
	if !IsNil(o.NewPendingPlan) {
		toSerialize["newPendingPlan"] = o.NewPendingPlan
	}
	if !IsNil(o.NewPlan) {
		toSerialize["newPlan"] = o.NewPlan
	}
	if !IsNil(o.Offer) {
		toSerialize["offer"] = o.Offer
	}
	if !IsNil(o.OfferDuration) {
		toSerialize["offerDuration"] = o.OfferDuration
	}
	if !IsNil(o.OfferEffectiveTime) {
		toSerialize["offerEffectiveTime"] = o.OfferEffectiveTime
	}
	if !IsNil(o.OfferEndTime) {
		toSerialize["offerEndTime"] = o.OfferEndTime
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ProductExternalName) {
		toSerialize["productExternalName"] = o.ProductExternalName
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.QuoteExternalName) {
		toSerialize["quoteExternalName"] = o.QuoteExternalName
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubscriptionEndTime) {
		toSerialize["subscriptionEndTime"] = o.SubscriptionEndTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if !IsNil(o.UsageReportingId) {
		toSerialize["usageReportingId"] = o.UsageReportingId
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceEntitlement struct {
	value *GcpMarketplaceEntitlement
	isSet bool
}

func (v NullableGcpMarketplaceEntitlement) Get() *GcpMarketplaceEntitlement {
	return v.value
}

func (v *NullableGcpMarketplaceEntitlement) Set(val *GcpMarketplaceEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceEntitlement(val *GcpMarketplaceEntitlement) *NullableGcpMarketplaceEntitlement {
	return &NullableGcpMarketplaceEntitlement{value: val, isSet: true}
}

func (v NullableGcpMarketplaceEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
