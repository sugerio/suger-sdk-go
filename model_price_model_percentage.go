/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the PriceModelPercentage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceModelPercentage{}

// PriceModelPercentage struct for PriceModelPercentage
type PriceModelPercentage struct {
	FlatFee *float32 `json:"flatFee,omitempty"`
	// Basis point take rate per event
	PercentageRate *float32 `json:"percentageRate,omitempty"`
}

// NewPriceModelPercentage instantiates a new PriceModelPercentage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceModelPercentage() *PriceModelPercentage {
	this := PriceModelPercentage{}
	return &this
}

// NewPriceModelPercentageWithDefaults instantiates a new PriceModelPercentage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceModelPercentageWithDefaults() *PriceModelPercentage {
	this := PriceModelPercentage{}
	return &this
}

// GetFlatFee returns the FlatFee field value if set, zero value otherwise.
func (o *PriceModelPercentage) GetFlatFee() float32 {
	if o == nil || IsNil(o.FlatFee) {
		var ret float32
		return ret
	}
	return *o.FlatFee
}

// GetFlatFeeOk returns a tuple with the FlatFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceModelPercentage) GetFlatFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.FlatFee) {
		return nil, false
	}
	return o.FlatFee, true
}

// HasFlatFee returns a boolean if a field has been set.
func (o *PriceModelPercentage) HasFlatFee() bool {
	if o != nil && !IsNil(o.FlatFee) {
		return true
	}

	return false
}

// SetFlatFee gets a reference to the given float32 and assigns it to the FlatFee field.
func (o *PriceModelPercentage) SetFlatFee(v float32) {
	o.FlatFee = &v
}

// GetPercentageRate returns the PercentageRate field value if set, zero value otherwise.
func (o *PriceModelPercentage) GetPercentageRate() float32 {
	if o == nil || IsNil(o.PercentageRate) {
		var ret float32
		return ret
	}
	return *o.PercentageRate
}

// GetPercentageRateOk returns a tuple with the PercentageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceModelPercentage) GetPercentageRateOk() (*float32, bool) {
	if o == nil || IsNil(o.PercentageRate) {
		return nil, false
	}
	return o.PercentageRate, true
}

// HasPercentageRate returns a boolean if a field has been set.
func (o *PriceModelPercentage) HasPercentageRate() bool {
	if o != nil && !IsNil(o.PercentageRate) {
		return true
	}

	return false
}

// SetPercentageRate gets a reference to the given float32 and assigns it to the PercentageRate field.
func (o *PriceModelPercentage) SetPercentageRate(v float32) {
	o.PercentageRate = &v
}

func (o PriceModelPercentage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceModelPercentage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlatFee) {
		toSerialize["flatFee"] = o.FlatFee
	}
	if !IsNil(o.PercentageRate) {
		toSerialize["percentageRate"] = o.PercentageRate
	}
	return toSerialize, nil
}

type NullablePriceModelPercentage struct {
	value *PriceModelPercentage
	isSet bool
}

func (v NullablePriceModelPercentage) Get() *PriceModelPercentage {
	return v.value
}

func (v *NullablePriceModelPercentage) Set(val *PriceModelPercentage) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceModelPercentage) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceModelPercentage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceModelPercentage(val *PriceModelPercentage) *NullablePriceModelPercentage {
	return &NullablePriceModelPercentage{value: val, isSet: true}
}

func (v NullablePriceModelPercentage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceModelPercentage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
