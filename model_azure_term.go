/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AzureTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureTerm{}

// AzureTerm struct for AzureTerm
type AzureTerm struct {
	ChargeDuration *string `json:"chargeDuration,omitempty"`
	EndDate *time.Time `json:"endDate,omitempty"`
	StartDate *time.Time `json:"startDate,omitempty"`
	TermUnit *string `json:"termUnit,omitempty"`
}

// NewAzureTerm instantiates a new AzureTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureTerm() *AzureTerm {
	this := AzureTerm{}
	return &this
}

// NewAzureTermWithDefaults instantiates a new AzureTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureTermWithDefaults() *AzureTerm {
	this := AzureTerm{}
	return &this
}

// GetChargeDuration returns the ChargeDuration field value if set, zero value otherwise.
func (o *AzureTerm) GetChargeDuration() string {
	if o == nil || IsNil(o.ChargeDuration) {
		var ret string
		return ret
	}
	return *o.ChargeDuration
}

// GetChargeDurationOk returns a tuple with the ChargeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTerm) GetChargeDurationOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeDuration) {
		return nil, false
	}
	return o.ChargeDuration, true
}

// HasChargeDuration returns a boolean if a field has been set.
func (o *AzureTerm) HasChargeDuration() bool {
	if o != nil && !IsNil(o.ChargeDuration) {
		return true
	}

	return false
}

// SetChargeDuration gets a reference to the given string and assigns it to the ChargeDuration field.
func (o *AzureTerm) SetChargeDuration(v string) {
	o.ChargeDuration = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AzureTerm) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate) {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTerm) GetEndDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndDate) {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AzureTerm) HasEndDate() bool {
	if o != nil && !IsNil(o.EndDate) {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *AzureTerm) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AzureTerm) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTerm) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AzureTerm) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *AzureTerm) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetTermUnit returns the TermUnit field value if set, zero value otherwise.
func (o *AzureTerm) GetTermUnit() string {
	if o == nil || IsNil(o.TermUnit) {
		var ret string
		return ret
	}
	return *o.TermUnit
}

// GetTermUnitOk returns a tuple with the TermUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureTerm) GetTermUnitOk() (*string, bool) {
	if o == nil || IsNil(o.TermUnit) {
		return nil, false
	}
	return o.TermUnit, true
}

// HasTermUnit returns a boolean if a field has been set.
func (o *AzureTerm) HasTermUnit() bool {
	if o != nil && !IsNil(o.TermUnit) {
		return true
	}

	return false
}

// SetTermUnit gets a reference to the given string and assigns it to the TermUnit field.
func (o *AzureTerm) SetTermUnit(v string) {
	o.TermUnit = &v
}

func (o AzureTerm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeDuration) {
		toSerialize["chargeDuration"] = o.ChargeDuration
	}
	if !IsNil(o.EndDate) {
		toSerialize["endDate"] = o.EndDate
	}
	if !IsNil(o.StartDate) {
		toSerialize["startDate"] = o.StartDate
	}
	if !IsNil(o.TermUnit) {
		toSerialize["termUnit"] = o.TermUnit
	}
	return toSerialize, nil
}

type NullableAzureTerm struct {
	value *AzureTerm
	isSet bool
}

func (v NullableAzureTerm) Get() *AzureTerm {
	return v.value
}

func (v *NullableAzureTerm) Set(val *AzureTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureTerm(val *AzureTerm) *NullableAzureTerm {
	return &NullableAzureTerm{value: val, isSet: true}
}

func (v NullableAzureTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


