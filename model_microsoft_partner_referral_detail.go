/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralDetail{}

// MicrosoftPartnerReferralDetail struct for MicrosoftPartnerReferralDetail
type MicrosoftPartnerReferralDetail struct {
	// in UTC date time format
	ClosingDateTime *string `json:"closingDateTime,omitempty"`
	// ISO 4217 currency symbol
	Currency *string `json:"currency,omitempty"`
	CustomerAction map[string]interface{} `json:"customerAction,omitempty"`
	CustomerRequestedContact map[string]interface{} `json:"customerRequestedContact,omitempty"`
	DealValue *float32 `json:"dealValue,omitempty"`
	IncentiveLevel map[string]interface{} `json:"incentiveLevel,omitempty"`
	Notes *string `json:"notes,omitempty"`
	Requirements *MicrosoftPartnerReferralRequirements `json:"requirements,omitempty"`
}

// NewMicrosoftPartnerReferralDetail instantiates a new MicrosoftPartnerReferralDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralDetail() *MicrosoftPartnerReferralDetail {
	this := MicrosoftPartnerReferralDetail{}
	return &this
}

// NewMicrosoftPartnerReferralDetailWithDefaults instantiates a new MicrosoftPartnerReferralDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralDetailWithDefaults() *MicrosoftPartnerReferralDetail {
	this := MicrosoftPartnerReferralDetail{}
	return &this
}

// GetClosingDateTime returns the ClosingDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetClosingDateTime() string {
	if o == nil || IsNil(o.ClosingDateTime) {
		var ret string
		return ret
	}
	return *o.ClosingDateTime
}

// GetClosingDateTimeOk returns a tuple with the ClosingDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetClosingDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ClosingDateTime) {
		return nil, false
	}
	return o.ClosingDateTime, true
}

// HasClosingDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasClosingDateTime() bool {
	if o != nil && !IsNil(o.ClosingDateTime) {
		return true
	}

	return false
}

// SetClosingDateTime gets a reference to the given string and assigns it to the ClosingDateTime field.
func (o *MicrosoftPartnerReferralDetail) SetClosingDateTime(v string) {
	o.ClosingDateTime = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *MicrosoftPartnerReferralDetail) SetCurrency(v string) {
	o.Currency = &v
}

// GetCustomerAction returns the CustomerAction field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetCustomerAction() map[string]interface{} {
	if o == nil || IsNil(o.CustomerAction) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomerAction
}

// GetCustomerActionOk returns a tuple with the CustomerAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetCustomerActionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomerAction) {
		return map[string]interface{}{}, false
	}
	return o.CustomerAction, true
}

// HasCustomerAction returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasCustomerAction() bool {
	if o != nil && !IsNil(o.CustomerAction) {
		return true
	}

	return false
}

// SetCustomerAction gets a reference to the given map[string]interface{} and assigns it to the CustomerAction field.
func (o *MicrosoftPartnerReferralDetail) SetCustomerAction(v map[string]interface{}) {
	o.CustomerAction = v
}

// GetCustomerRequestedContact returns the CustomerRequestedContact field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetCustomerRequestedContact() map[string]interface{} {
	if o == nil || IsNil(o.CustomerRequestedContact) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomerRequestedContact
}

// GetCustomerRequestedContactOk returns a tuple with the CustomerRequestedContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetCustomerRequestedContactOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomerRequestedContact) {
		return map[string]interface{}{}, false
	}
	return o.CustomerRequestedContact, true
}

// HasCustomerRequestedContact returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasCustomerRequestedContact() bool {
	if o != nil && !IsNil(o.CustomerRequestedContact) {
		return true
	}

	return false
}

// SetCustomerRequestedContact gets a reference to the given map[string]interface{} and assigns it to the CustomerRequestedContact field.
func (o *MicrosoftPartnerReferralDetail) SetCustomerRequestedContact(v map[string]interface{}) {
	o.CustomerRequestedContact = v
}

// GetDealValue returns the DealValue field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetDealValue() float32 {
	if o == nil || IsNil(o.DealValue) {
		var ret float32
		return ret
	}
	return *o.DealValue
}

// GetDealValueOk returns a tuple with the DealValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetDealValueOk() (*float32, bool) {
	if o == nil || IsNil(o.DealValue) {
		return nil, false
	}
	return o.DealValue, true
}

// HasDealValue returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasDealValue() bool {
	if o != nil && !IsNil(o.DealValue) {
		return true
	}

	return false
}

// SetDealValue gets a reference to the given float32 and assigns it to the DealValue field.
func (o *MicrosoftPartnerReferralDetail) SetDealValue(v float32) {
	o.DealValue = &v
}

// GetIncentiveLevel returns the IncentiveLevel field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetIncentiveLevel() map[string]interface{} {
	if o == nil || IsNil(o.IncentiveLevel) {
		var ret map[string]interface{}
		return ret
	}
	return o.IncentiveLevel
}

// GetIncentiveLevelOk returns a tuple with the IncentiveLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetIncentiveLevelOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.IncentiveLevel) {
		return map[string]interface{}{}, false
	}
	return o.IncentiveLevel, true
}

// HasIncentiveLevel returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasIncentiveLevel() bool {
	if o != nil && !IsNil(o.IncentiveLevel) {
		return true
	}

	return false
}

// SetIncentiveLevel gets a reference to the given map[string]interface{} and assigns it to the IncentiveLevel field.
func (o *MicrosoftPartnerReferralDetail) SetIncentiveLevel(v map[string]interface{}) {
	o.IncentiveLevel = v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *MicrosoftPartnerReferralDetail) SetNotes(v string) {
	o.Notes = &v
}

// GetRequirements returns the Requirements field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralDetail) GetRequirements() MicrosoftPartnerReferralRequirements {
	if o == nil || IsNil(o.Requirements) {
		var ret MicrosoftPartnerReferralRequirements
		return ret
	}
	return *o.Requirements
}

// GetRequirementsOk returns a tuple with the Requirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralDetail) GetRequirementsOk() (*MicrosoftPartnerReferralRequirements, bool) {
	if o == nil || IsNil(o.Requirements) {
		return nil, false
	}
	return o.Requirements, true
}

// HasRequirements returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralDetail) HasRequirements() bool {
	if o != nil && !IsNil(o.Requirements) {
		return true
	}

	return false
}

// SetRequirements gets a reference to the given MicrosoftPartnerReferralRequirements and assigns it to the Requirements field.
func (o *MicrosoftPartnerReferralDetail) SetRequirements(v MicrosoftPartnerReferralRequirements) {
	o.Requirements = &v
}

func (o MicrosoftPartnerReferralDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosingDateTime) {
		toSerialize["closingDateTime"] = o.ClosingDateTime
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.CustomerAction) {
		toSerialize["customerAction"] = o.CustomerAction
	}
	if !IsNil(o.CustomerRequestedContact) {
		toSerialize["customerRequestedContact"] = o.CustomerRequestedContact
	}
	if !IsNil(o.DealValue) {
		toSerialize["dealValue"] = o.DealValue
	}
	if !IsNil(o.IncentiveLevel) {
		toSerialize["incentiveLevel"] = o.IncentiveLevel
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.Requirements) {
		toSerialize["requirements"] = o.Requirements
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralDetail struct {
	value *MicrosoftPartnerReferralDetail
	isSet bool
}

func (v NullableMicrosoftPartnerReferralDetail) Get() *MicrosoftPartnerReferralDetail {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralDetail) Set(val *MicrosoftPartnerReferralDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralDetail(val *MicrosoftPartnerReferralDetail) *NullableMicrosoftPartnerReferralDetail {
	return &NullableMicrosoftPartnerReferralDetail{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


