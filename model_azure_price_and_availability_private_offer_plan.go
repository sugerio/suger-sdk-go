/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzurePriceAndAvailabilityPrivateOfferPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzurePriceAndAvailabilityPrivateOfferPlan{}

// AzurePriceAndAvailabilityPrivateOfferPlan struct for AzurePriceAndAvailabilityPrivateOfferPlan
type AzurePriceAndAvailabilityPrivateOfferPlan struct {
	Schema *string `json:"$schema,omitempty"`
	Id *string `json:"id,omitempty"`
	Plan *string `json:"plan,omitempty"`
	// The azure plan friendly name, from the Azure Marketplace.
	PlanName *string `json:"planName,omitempty"`
	Pricing *AzurePriceAndAvailabilityPrivateOfferPrice `json:"pricing,omitempty"`
	Product *string `json:"product,omitempty"`
	ResourceName *string `json:"resourceName,omitempty"`
	Validations []AzureMarketplaceValidation `json:"validations,omitempty"`
}

// NewAzurePriceAndAvailabilityPrivateOfferPlan instantiates a new AzurePriceAndAvailabilityPrivateOfferPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzurePriceAndAvailabilityPrivateOfferPlan() *AzurePriceAndAvailabilityPrivateOfferPlan {
	this := AzurePriceAndAvailabilityPrivateOfferPlan{}
	return &this
}

// NewAzurePriceAndAvailabilityPrivateOfferPlanWithDefaults instantiates a new AzurePriceAndAvailabilityPrivateOfferPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzurePriceAndAvailabilityPrivateOfferPlanWithDefaults() *AzurePriceAndAvailabilityPrivateOfferPlan {
	this := AzurePriceAndAvailabilityPrivateOfferPlan{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetSchema(v string) {
	o.Schema = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetId(v string) {
	o.Id = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetPlan(v string) {
	o.Plan = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPricing returns the Pricing field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPricing() AzurePriceAndAvailabilityPrivateOfferPrice {
	if o == nil || IsNil(o.Pricing) {
		var ret AzurePriceAndAvailabilityPrivateOfferPrice
		return ret
	}
	return *o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetPricingOk() (*AzurePriceAndAvailabilityPrivateOfferPrice, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return o.Pricing, true
}

// HasPricing returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasPricing() bool {
	if o != nil && !IsNil(o.Pricing) {
		return true
	}

	return false
}

// SetPricing gets a reference to the given AzurePriceAndAvailabilityPrivateOfferPrice and assigns it to the Pricing field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetPricing(v AzurePriceAndAvailabilityPrivateOfferPrice) {
	o.Pricing = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetProduct(v string) {
	o.Product = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzurePriceAndAvailabilityPrivateOfferPlan) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

func (o AzurePriceAndAvailabilityPrivateOfferPlan) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzurePriceAndAvailabilityPrivateOfferPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.Pricing) {
		toSerialize["pricing"] = o.Pricing
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableAzurePriceAndAvailabilityPrivateOfferPlan struct {
	value *AzurePriceAndAvailabilityPrivateOfferPlan
	isSet bool
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPlan) Get() *AzurePriceAndAvailabilityPrivateOfferPlan {
	return v.value
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPlan) Set(val *AzurePriceAndAvailabilityPrivateOfferPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzurePriceAndAvailabilityPrivateOfferPlan(val *AzurePriceAndAvailabilityPrivateOfferPlan) *NullableAzurePriceAndAvailabilityPrivateOfferPlan {
	return &NullableAzurePriceAndAvailabilityPrivateOfferPlan{value: val, isSet: true}
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


