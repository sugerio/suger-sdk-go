/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the CosellOppMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CosellOppMeta{}

// CosellOppMeta struct for CosellOppMeta
type CosellOppMeta struct {
	IsArchived           *bool             `json:"is_archived,omitempty"`
	IsDraft              *bool             `json:"is_draft,omitempty"`
	SalesforceReferralId *string           `json:"salesforce_referral_id,omitempty"`
	Status               *string           `json:"status,omitempty"`
	SyncRecord           *CosellSyncRecord `json:"sync_record,omitempty"`
}

// NewCosellOppMeta instantiates a new CosellOppMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCosellOppMeta() *CosellOppMeta {
	this := CosellOppMeta{}
	return &this
}

// NewCosellOppMetaWithDefaults instantiates a new CosellOppMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCosellOppMetaWithDefaults() *CosellOppMeta {
	this := CosellOppMeta{}
	return &this
}

// GetIsArchived returns the IsArchived field value if set, zero value otherwise.
func (o *CosellOppMeta) GetIsArchived() bool {
	if o == nil || IsNil(o.IsArchived) {
		var ret bool
		return ret
	}
	return *o.IsArchived
}

// GetIsArchivedOk returns a tuple with the IsArchived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CosellOppMeta) GetIsArchivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsArchived) {
		return nil, false
	}
	return o.IsArchived, true
}

// HasIsArchived returns a boolean if a field has been set.
func (o *CosellOppMeta) HasIsArchived() bool {
	if o != nil && !IsNil(o.IsArchived) {
		return true
	}

	return false
}

// SetIsArchived gets a reference to the given bool and assigns it to the IsArchived field.
func (o *CosellOppMeta) SetIsArchived(v bool) {
	o.IsArchived = &v
}

// GetIsDraft returns the IsDraft field value if set, zero value otherwise.
func (o *CosellOppMeta) GetIsDraft() bool {
	if o == nil || IsNil(o.IsDraft) {
		var ret bool
		return ret
	}
	return *o.IsDraft
}

// GetIsDraftOk returns a tuple with the IsDraft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CosellOppMeta) GetIsDraftOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDraft) {
		return nil, false
	}
	return o.IsDraft, true
}

// HasIsDraft returns a boolean if a field has been set.
func (o *CosellOppMeta) HasIsDraft() bool {
	if o != nil && !IsNil(o.IsDraft) {
		return true
	}

	return false
}

// SetIsDraft gets a reference to the given bool and assigns it to the IsDraft field.
func (o *CosellOppMeta) SetIsDraft(v bool) {
	o.IsDraft = &v
}

// GetSalesforceReferralId returns the SalesforceReferralId field value if set, zero value otherwise.
func (o *CosellOppMeta) GetSalesforceReferralId() string {
	if o == nil || IsNil(o.SalesforceReferralId) {
		var ret string
		return ret
	}
	return *o.SalesforceReferralId
}

// GetSalesforceReferralIdOk returns a tuple with the SalesforceReferralId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CosellOppMeta) GetSalesforceReferralIdOk() (*string, bool) {
	if o == nil || IsNil(o.SalesforceReferralId) {
		return nil, false
	}
	return o.SalesforceReferralId, true
}

// HasSalesforceReferralId returns a boolean if a field has been set.
func (o *CosellOppMeta) HasSalesforceReferralId() bool {
	if o != nil && !IsNil(o.SalesforceReferralId) {
		return true
	}

	return false
}

// SetSalesforceReferralId gets a reference to the given string and assigns it to the SalesforceReferralId field.
func (o *CosellOppMeta) SetSalesforceReferralId(v string) {
	o.SalesforceReferralId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CosellOppMeta) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CosellOppMeta) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CosellOppMeta) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CosellOppMeta) SetStatus(v string) {
	o.Status = &v
}

// GetSyncRecord returns the SyncRecord field value if set, zero value otherwise.
func (o *CosellOppMeta) GetSyncRecord() CosellSyncRecord {
	if o == nil || IsNil(o.SyncRecord) {
		var ret CosellSyncRecord
		return ret
	}
	return *o.SyncRecord
}

// GetSyncRecordOk returns a tuple with the SyncRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CosellOppMeta) GetSyncRecordOk() (*CosellSyncRecord, bool) {
	if o == nil || IsNil(o.SyncRecord) {
		return nil, false
	}
	return o.SyncRecord, true
}

// HasSyncRecord returns a boolean if a field has been set.
func (o *CosellOppMeta) HasSyncRecord() bool {
	if o != nil && !IsNil(o.SyncRecord) {
		return true
	}

	return false
}

// SetSyncRecord gets a reference to the given CosellSyncRecord and assigns it to the SyncRecord field.
func (o *CosellOppMeta) SetSyncRecord(v CosellSyncRecord) {
	o.SyncRecord = &v
}

func (o CosellOppMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CosellOppMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsArchived) {
		toSerialize["is_archived"] = o.IsArchived
	}
	if !IsNil(o.IsDraft) {
		toSerialize["is_draft"] = o.IsDraft
	}
	if !IsNil(o.SalesforceReferralId) {
		toSerialize["salesforce_referral_id"] = o.SalesforceReferralId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SyncRecord) {
		toSerialize["sync_record"] = o.SyncRecord
	}
	return toSerialize, nil
}

type NullableCosellOppMeta struct {
	value *CosellOppMeta
	isSet bool
}

func (v NullableCosellOppMeta) Get() *CosellOppMeta {
	return v.value
}

func (v *NullableCosellOppMeta) Set(val *CosellOppMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableCosellOppMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableCosellOppMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCosellOppMeta(val *CosellOppMeta) *NullableCosellOppMeta {
	return &NullableCosellOppMeta{value: val, isSet: true}
}

func (v NullableCosellOppMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCosellOppMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
