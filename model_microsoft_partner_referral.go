/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferral type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferral{}

// MicrosoftPartnerReferral struct for MicrosoftPartnerReferral
type MicrosoftPartnerReferral struct {
	AcceptedDateTime *string `json:"acceptedDateTime,omitempty"`
	CallToAction *string `json:"callToAction,omitempty"`
	CampaignId *string `json:"campaignId,omitempty"`
	ClosedDateTime *string `json:"closedDateTime,omitempty"`
	Consent *MicrosoftPartnerReferralConsent `json:"consent,omitempty"`
	CreatedDateTime *string `json:"createdDateTime,omitempty"`
	CreatedVia *string `json:"createdVia,omitempty"`
	CustomerProfile *MicrosoftPartnerReferralProfile `json:"customerProfile,omitempty"`
	DealSensitivity *string `json:"dealSensitivity,omitempty"`
	Details *MicrosoftPartnerReferralDetail `json:"details,omitempty"`
	Direction *string `json:"direction,omitempty"`
	ETag *string `json:"eTag,omitempty"`
	EngagementId *string `json:"engagementId,omitempty"`
	Exception map[string]interface{} `json:"exception,omitempty"`
	ExpirationDateTime *string `json:"expirationDateTime,omitempty"`
	Favorite *bool `json:"favorite,omitempty"`
	Id *string `json:"id,omitempty"`
	InviteContext *MicrosoftPartnerReferralInviteContext `json:"inviteContext,omitempty"`
	IsAutoRegistrationEnabled *bool `json:"isAutoRegistrationEnabled,omitempty"`
	IsSpam *bool `json:"isSpam,omitempty"`
	LastModifiedVia *string `json:"lastModifiedVia,omitempty"`
	Links *MicrosoftPartnerReferralLink `json:"links,omitempty"`
	MpnId *string `json:"mpnId,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	Qualification *MicrosoftPartnerReferralQualification `json:"qualification,omitempty"`
	Quality *string `json:"quality,omitempty"`
	ReferralProgram map[string]interface{} `json:"referralProgram,omitempty"`
	ReferralSource map[string]interface{} `json:"referralSource,omitempty"`
	RegistrationStatus *string `json:"registrationStatus,omitempty"`
	Registrations []map[string]interface{} `json:"registrations,omitempty"`
	SalesStage map[string]interface{} `json:"salesStage,omitempty"`
	Status *MicrosoftPartnerReferralStatus `json:"status,omitempty"`
	Substatus *MicrosoftPartnerReferralSubStatus `json:"substatus,omitempty"`
	Tags []map[string]interface{} `json:"tags,omitempty"`
	Target []MicrosoftPartnerReferralTarget `json:"target,omitempty"`
	Team []MicrosoftPartnerReferralPerson `json:"team,omitempty"`
	TrackingInfo *MicrosoftPartnerReferralTrackingInfo `json:"trackingInfo,omitempty"`
	Type *MicrosoftPartnerReferralType `json:"type,omitempty"`
	UpdatedDateTime *string `json:"updatedDateTime,omitempty"`
}

// NewMicrosoftPartnerReferral instantiates a new MicrosoftPartnerReferral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferral() *MicrosoftPartnerReferral {
	this := MicrosoftPartnerReferral{}
	return &this
}

// NewMicrosoftPartnerReferralWithDefaults instantiates a new MicrosoftPartnerReferral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralWithDefaults() *MicrosoftPartnerReferral {
	this := MicrosoftPartnerReferral{}
	return &this
}

// GetAcceptedDateTime returns the AcceptedDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetAcceptedDateTime() string {
	if o == nil || IsNil(o.AcceptedDateTime) {
		var ret string
		return ret
	}
	return *o.AcceptedDateTime
}

// GetAcceptedDateTimeOk returns a tuple with the AcceptedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetAcceptedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.AcceptedDateTime) {
		return nil, false
	}
	return o.AcceptedDateTime, true
}

// HasAcceptedDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasAcceptedDateTime() bool {
	if o != nil && !IsNil(o.AcceptedDateTime) {
		return true
	}

	return false
}

// SetAcceptedDateTime gets a reference to the given string and assigns it to the AcceptedDateTime field.
func (o *MicrosoftPartnerReferral) SetAcceptedDateTime(v string) {
	o.AcceptedDateTime = &v
}

// GetCallToAction returns the CallToAction field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetCallToAction() string {
	if o == nil || IsNil(o.CallToAction) {
		var ret string
		return ret
	}
	return *o.CallToAction
}

// GetCallToActionOk returns a tuple with the CallToAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetCallToActionOk() (*string, bool) {
	if o == nil || IsNil(o.CallToAction) {
		return nil, false
	}
	return o.CallToAction, true
}

// HasCallToAction returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasCallToAction() bool {
	if o != nil && !IsNil(o.CallToAction) {
		return true
	}

	return false
}

// SetCallToAction gets a reference to the given string and assigns it to the CallToAction field.
func (o *MicrosoftPartnerReferral) SetCallToAction(v string) {
	o.CallToAction = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetCampaignId() string {
	if o == nil || IsNil(o.CampaignId) {
		var ret string
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetCampaignIdOk() (*string, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given string and assigns it to the CampaignId field.
func (o *MicrosoftPartnerReferral) SetCampaignId(v string) {
	o.CampaignId = &v
}

// GetClosedDateTime returns the ClosedDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetClosedDateTime() string {
	if o == nil || IsNil(o.ClosedDateTime) {
		var ret string
		return ret
	}
	return *o.ClosedDateTime
}

// GetClosedDateTimeOk returns a tuple with the ClosedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetClosedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ClosedDateTime) {
		return nil, false
	}
	return o.ClosedDateTime, true
}

// HasClosedDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasClosedDateTime() bool {
	if o != nil && !IsNil(o.ClosedDateTime) {
		return true
	}

	return false
}

// SetClosedDateTime gets a reference to the given string and assigns it to the ClosedDateTime field.
func (o *MicrosoftPartnerReferral) SetClosedDateTime(v string) {
	o.ClosedDateTime = &v
}

// GetConsent returns the Consent field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetConsent() MicrosoftPartnerReferralConsent {
	if o == nil || IsNil(o.Consent) {
		var ret MicrosoftPartnerReferralConsent
		return ret
	}
	return *o.Consent
}

// GetConsentOk returns a tuple with the Consent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetConsentOk() (*MicrosoftPartnerReferralConsent, bool) {
	if o == nil || IsNil(o.Consent) {
		return nil, false
	}
	return o.Consent, true
}

// HasConsent returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasConsent() bool {
	if o != nil && !IsNil(o.Consent) {
		return true
	}

	return false
}

// SetConsent gets a reference to the given MicrosoftPartnerReferralConsent and assigns it to the Consent field.
func (o *MicrosoftPartnerReferral) SetConsent(v MicrosoftPartnerReferralConsent) {
	o.Consent = &v
}

// GetCreatedDateTime returns the CreatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetCreatedDateTime() string {
	if o == nil || IsNil(o.CreatedDateTime) {
		var ret string
		return ret
	}
	return *o.CreatedDateTime
}

// GetCreatedDateTimeOk returns a tuple with the CreatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetCreatedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDateTime) {
		return nil, false
	}
	return o.CreatedDateTime, true
}

// HasCreatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasCreatedDateTime() bool {
	if o != nil && !IsNil(o.CreatedDateTime) {
		return true
	}

	return false
}

// SetCreatedDateTime gets a reference to the given string and assigns it to the CreatedDateTime field.
func (o *MicrosoftPartnerReferral) SetCreatedDateTime(v string) {
	o.CreatedDateTime = &v
}

// GetCreatedVia returns the CreatedVia field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetCreatedVia() string {
	if o == nil || IsNil(o.CreatedVia) {
		var ret string
		return ret
	}
	return *o.CreatedVia
}

// GetCreatedViaOk returns a tuple with the CreatedVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetCreatedViaOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedVia) {
		return nil, false
	}
	return o.CreatedVia, true
}

// HasCreatedVia returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasCreatedVia() bool {
	if o != nil && !IsNil(o.CreatedVia) {
		return true
	}

	return false
}

// SetCreatedVia gets a reference to the given string and assigns it to the CreatedVia field.
func (o *MicrosoftPartnerReferral) SetCreatedVia(v string) {
	o.CreatedVia = &v
}

// GetCustomerProfile returns the CustomerProfile field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetCustomerProfile() MicrosoftPartnerReferralProfile {
	if o == nil || IsNil(o.CustomerProfile) {
		var ret MicrosoftPartnerReferralProfile
		return ret
	}
	return *o.CustomerProfile
}

// GetCustomerProfileOk returns a tuple with the CustomerProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetCustomerProfileOk() (*MicrosoftPartnerReferralProfile, bool) {
	if o == nil || IsNil(o.CustomerProfile) {
		return nil, false
	}
	return o.CustomerProfile, true
}

// HasCustomerProfile returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasCustomerProfile() bool {
	if o != nil && !IsNil(o.CustomerProfile) {
		return true
	}

	return false
}

// SetCustomerProfile gets a reference to the given MicrosoftPartnerReferralProfile and assigns it to the CustomerProfile field.
func (o *MicrosoftPartnerReferral) SetCustomerProfile(v MicrosoftPartnerReferralProfile) {
	o.CustomerProfile = &v
}

// GetDealSensitivity returns the DealSensitivity field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetDealSensitivity() string {
	if o == nil || IsNil(o.DealSensitivity) {
		var ret string
		return ret
	}
	return *o.DealSensitivity
}

// GetDealSensitivityOk returns a tuple with the DealSensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetDealSensitivityOk() (*string, bool) {
	if o == nil || IsNil(o.DealSensitivity) {
		return nil, false
	}
	return o.DealSensitivity, true
}

// HasDealSensitivity returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasDealSensitivity() bool {
	if o != nil && !IsNil(o.DealSensitivity) {
		return true
	}

	return false
}

// SetDealSensitivity gets a reference to the given string and assigns it to the DealSensitivity field.
func (o *MicrosoftPartnerReferral) SetDealSensitivity(v string) {
	o.DealSensitivity = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetDetails() MicrosoftPartnerReferralDetail {
	if o == nil || IsNil(o.Details) {
		var ret MicrosoftPartnerReferralDetail
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetDetailsOk() (*MicrosoftPartnerReferralDetail, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given MicrosoftPartnerReferralDetail and assigns it to the Details field.
func (o *MicrosoftPartnerReferral) SetDetails(v MicrosoftPartnerReferralDetail) {
	o.Details = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *MicrosoftPartnerReferral) SetDirection(v string) {
	o.Direction = &v
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *MicrosoftPartnerReferral) SetETag(v string) {
	o.ETag = &v
}

// GetEngagementId returns the EngagementId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetEngagementId() string {
	if o == nil || IsNil(o.EngagementId) {
		var ret string
		return ret
	}
	return *o.EngagementId
}

// GetEngagementIdOk returns a tuple with the EngagementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetEngagementIdOk() (*string, bool) {
	if o == nil || IsNil(o.EngagementId) {
		return nil, false
	}
	return o.EngagementId, true
}

// HasEngagementId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasEngagementId() bool {
	if o != nil && !IsNil(o.EngagementId) {
		return true
	}

	return false
}

// SetEngagementId gets a reference to the given string and assigns it to the EngagementId field.
func (o *MicrosoftPartnerReferral) SetEngagementId(v string) {
	o.EngagementId = &v
}

// GetException returns the Exception field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetException() map[string]interface{} {
	if o == nil || IsNil(o.Exception) {
		var ret map[string]interface{}
		return ret
	}
	return o.Exception
}

// GetExceptionOk returns a tuple with the Exception field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetExceptionOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Exception) {
		return map[string]interface{}{}, false
	}
	return o.Exception, true
}

// HasException returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasException() bool {
	if o != nil && !IsNil(o.Exception) {
		return true
	}

	return false
}

// SetException gets a reference to the given map[string]interface{} and assigns it to the Exception field.
func (o *MicrosoftPartnerReferral) SetException(v map[string]interface{}) {
	o.Exception = v
}

// GetExpirationDateTime returns the ExpirationDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetExpirationDateTime() string {
	if o == nil || IsNil(o.ExpirationDateTime) {
		var ret string
		return ret
	}
	return *o.ExpirationDateTime
}

// GetExpirationDateTimeOk returns a tuple with the ExpirationDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetExpirationDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpirationDateTime) {
		return nil, false
	}
	return o.ExpirationDateTime, true
}

// HasExpirationDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasExpirationDateTime() bool {
	if o != nil && !IsNil(o.ExpirationDateTime) {
		return true
	}

	return false
}

// SetExpirationDateTime gets a reference to the given string and assigns it to the ExpirationDateTime field.
func (o *MicrosoftPartnerReferral) SetExpirationDateTime(v string) {
	o.ExpirationDateTime = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetFavorite() bool {
	if o == nil || IsNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetFavoriteOk() (*bool, bool) {
	if o == nil || IsNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasFavorite() bool {
	if o != nil && !IsNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *MicrosoftPartnerReferral) SetFavorite(v bool) {
	o.Favorite = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftPartnerReferral) SetId(v string) {
	o.Id = &v
}

// GetInviteContext returns the InviteContext field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetInviteContext() MicrosoftPartnerReferralInviteContext {
	if o == nil || IsNil(o.InviteContext) {
		var ret MicrosoftPartnerReferralInviteContext
		return ret
	}
	return *o.InviteContext
}

// GetInviteContextOk returns a tuple with the InviteContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetInviteContextOk() (*MicrosoftPartnerReferralInviteContext, bool) {
	if o == nil || IsNil(o.InviteContext) {
		return nil, false
	}
	return o.InviteContext, true
}

// HasInviteContext returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasInviteContext() bool {
	if o != nil && !IsNil(o.InviteContext) {
		return true
	}

	return false
}

// SetInviteContext gets a reference to the given MicrosoftPartnerReferralInviteContext and assigns it to the InviteContext field.
func (o *MicrosoftPartnerReferral) SetInviteContext(v MicrosoftPartnerReferralInviteContext) {
	o.InviteContext = &v
}

// GetIsAutoRegistrationEnabled returns the IsAutoRegistrationEnabled field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetIsAutoRegistrationEnabled() bool {
	if o == nil || IsNil(o.IsAutoRegistrationEnabled) {
		var ret bool
		return ret
	}
	return *o.IsAutoRegistrationEnabled
}

// GetIsAutoRegistrationEnabledOk returns a tuple with the IsAutoRegistrationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetIsAutoRegistrationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoRegistrationEnabled) {
		return nil, false
	}
	return o.IsAutoRegistrationEnabled, true
}

// HasIsAutoRegistrationEnabled returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasIsAutoRegistrationEnabled() bool {
	if o != nil && !IsNil(o.IsAutoRegistrationEnabled) {
		return true
	}

	return false
}

// SetIsAutoRegistrationEnabled gets a reference to the given bool and assigns it to the IsAutoRegistrationEnabled field.
func (o *MicrosoftPartnerReferral) SetIsAutoRegistrationEnabled(v bool) {
	o.IsAutoRegistrationEnabled = &v
}

// GetIsSpam returns the IsSpam field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetIsSpam() bool {
	if o == nil || IsNil(o.IsSpam) {
		var ret bool
		return ret
	}
	return *o.IsSpam
}

// GetIsSpamOk returns a tuple with the IsSpam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetIsSpamOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpam) {
		return nil, false
	}
	return o.IsSpam, true
}

// HasIsSpam returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasIsSpam() bool {
	if o != nil && !IsNil(o.IsSpam) {
		return true
	}

	return false
}

// SetIsSpam gets a reference to the given bool and assigns it to the IsSpam field.
func (o *MicrosoftPartnerReferral) SetIsSpam(v bool) {
	o.IsSpam = &v
}

// GetLastModifiedVia returns the LastModifiedVia field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetLastModifiedVia() string {
	if o == nil || IsNil(o.LastModifiedVia) {
		var ret string
		return ret
	}
	return *o.LastModifiedVia
}

// GetLastModifiedViaOk returns a tuple with the LastModifiedVia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetLastModifiedViaOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedVia) {
		return nil, false
	}
	return o.LastModifiedVia, true
}

// HasLastModifiedVia returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasLastModifiedVia() bool {
	if o != nil && !IsNil(o.LastModifiedVia) {
		return true
	}

	return false
}

// SetLastModifiedVia gets a reference to the given string and assigns it to the LastModifiedVia field.
func (o *MicrosoftPartnerReferral) SetLastModifiedVia(v string) {
	o.LastModifiedVia = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetLinks() MicrosoftPartnerReferralLink {
	if o == nil || IsNil(o.Links) {
		var ret MicrosoftPartnerReferralLink
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetLinksOk() (*MicrosoftPartnerReferralLink, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given MicrosoftPartnerReferralLink and assigns it to the Links field.
func (o *MicrosoftPartnerReferral) SetLinks(v MicrosoftPartnerReferralLink) {
	o.Links = &v
}

// GetMpnId returns the MpnId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetMpnId() string {
	if o == nil || IsNil(o.MpnId) {
		var ret string
		return ret
	}
	return *o.MpnId
}

// GetMpnIdOk returns a tuple with the MpnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetMpnIdOk() (*string, bool) {
	if o == nil || IsNil(o.MpnId) {
		return nil, false
	}
	return o.MpnId, true
}

// HasMpnId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasMpnId() bool {
	if o != nil && !IsNil(o.MpnId) {
		return true
	}

	return false
}

// SetMpnId gets a reference to the given string and assigns it to the MpnId field.
func (o *MicrosoftPartnerReferral) SetMpnId(v string) {
	o.MpnId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftPartnerReferral) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *MicrosoftPartnerReferral) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *MicrosoftPartnerReferral) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetQualification returns the Qualification field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetQualification() MicrosoftPartnerReferralQualification {
	if o == nil || IsNil(o.Qualification) {
		var ret MicrosoftPartnerReferralQualification
		return ret
	}
	return *o.Qualification
}

// GetQualificationOk returns a tuple with the Qualification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetQualificationOk() (*MicrosoftPartnerReferralQualification, bool) {
	if o == nil || IsNil(o.Qualification) {
		return nil, false
	}
	return o.Qualification, true
}

// HasQualification returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasQualification() bool {
	if o != nil && !IsNil(o.Qualification) {
		return true
	}

	return false
}

// SetQualification gets a reference to the given MicrosoftPartnerReferralQualification and assigns it to the Qualification field.
func (o *MicrosoftPartnerReferral) SetQualification(v MicrosoftPartnerReferralQualification) {
	o.Qualification = &v
}

// GetQuality returns the Quality field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetQuality() string {
	if o == nil || IsNil(o.Quality) {
		var ret string
		return ret
	}
	return *o.Quality
}

// GetQualityOk returns a tuple with the Quality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetQualityOk() (*string, bool) {
	if o == nil || IsNil(o.Quality) {
		return nil, false
	}
	return o.Quality, true
}

// HasQuality returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasQuality() bool {
	if o != nil && !IsNil(o.Quality) {
		return true
	}

	return false
}

// SetQuality gets a reference to the given string and assigns it to the Quality field.
func (o *MicrosoftPartnerReferral) SetQuality(v string) {
	o.Quality = &v
}

// GetReferralProgram returns the ReferralProgram field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetReferralProgram() map[string]interface{} {
	if o == nil || IsNil(o.ReferralProgram) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReferralProgram
}

// GetReferralProgramOk returns a tuple with the ReferralProgram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetReferralProgramOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReferralProgram) {
		return map[string]interface{}{}, false
	}
	return o.ReferralProgram, true
}

// HasReferralProgram returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasReferralProgram() bool {
	if o != nil && !IsNil(o.ReferralProgram) {
		return true
	}

	return false
}

// SetReferralProgram gets a reference to the given map[string]interface{} and assigns it to the ReferralProgram field.
func (o *MicrosoftPartnerReferral) SetReferralProgram(v map[string]interface{}) {
	o.ReferralProgram = v
}

// GetReferralSource returns the ReferralSource field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetReferralSource() map[string]interface{} {
	if o == nil || IsNil(o.ReferralSource) {
		var ret map[string]interface{}
		return ret
	}
	return o.ReferralSource
}

// GetReferralSourceOk returns a tuple with the ReferralSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetReferralSourceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ReferralSource) {
		return map[string]interface{}{}, false
	}
	return o.ReferralSource, true
}

// HasReferralSource returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasReferralSource() bool {
	if o != nil && !IsNil(o.ReferralSource) {
		return true
	}

	return false
}

// SetReferralSource gets a reference to the given map[string]interface{} and assigns it to the ReferralSource field.
func (o *MicrosoftPartnerReferral) SetReferralSource(v map[string]interface{}) {
	o.ReferralSource = v
}

// GetRegistrationStatus returns the RegistrationStatus field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetRegistrationStatus() string {
	if o == nil || IsNil(o.RegistrationStatus) {
		var ret string
		return ret
	}
	return *o.RegistrationStatus
}

// GetRegistrationStatusOk returns a tuple with the RegistrationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetRegistrationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationStatus) {
		return nil, false
	}
	return o.RegistrationStatus, true
}

// HasRegistrationStatus returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasRegistrationStatus() bool {
	if o != nil && !IsNil(o.RegistrationStatus) {
		return true
	}

	return false
}

// SetRegistrationStatus gets a reference to the given string and assigns it to the RegistrationStatus field.
func (o *MicrosoftPartnerReferral) SetRegistrationStatus(v string) {
	o.RegistrationStatus = &v
}

// GetRegistrations returns the Registrations field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetRegistrations() []map[string]interface{} {
	if o == nil || IsNil(o.Registrations) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Registrations
}

// GetRegistrationsOk returns a tuple with the Registrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetRegistrationsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Registrations) {
		return nil, false
	}
	return o.Registrations, true
}

// HasRegistrations returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasRegistrations() bool {
	if o != nil && !IsNil(o.Registrations) {
		return true
	}

	return false
}

// SetRegistrations gets a reference to the given []map[string]interface{} and assigns it to the Registrations field.
func (o *MicrosoftPartnerReferral) SetRegistrations(v []map[string]interface{}) {
	o.Registrations = v
}

// GetSalesStage returns the SalesStage field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetSalesStage() map[string]interface{} {
	if o == nil || IsNil(o.SalesStage) {
		var ret map[string]interface{}
		return ret
	}
	return o.SalesStage
}

// GetSalesStageOk returns a tuple with the SalesStage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetSalesStageOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SalesStage) {
		return map[string]interface{}{}, false
	}
	return o.SalesStage, true
}

// HasSalesStage returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasSalesStage() bool {
	if o != nil && !IsNil(o.SalesStage) {
		return true
	}

	return false
}

// SetSalesStage gets a reference to the given map[string]interface{} and assigns it to the SalesStage field.
func (o *MicrosoftPartnerReferral) SetSalesStage(v map[string]interface{}) {
	o.SalesStage = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetStatus() MicrosoftPartnerReferralStatus {
	if o == nil || IsNil(o.Status) {
		var ret MicrosoftPartnerReferralStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetStatusOk() (*MicrosoftPartnerReferralStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given MicrosoftPartnerReferralStatus and assigns it to the Status field.
func (o *MicrosoftPartnerReferral) SetStatus(v MicrosoftPartnerReferralStatus) {
	o.Status = &v
}

// GetSubstatus returns the Substatus field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetSubstatus() MicrosoftPartnerReferralSubStatus {
	if o == nil || IsNil(o.Substatus) {
		var ret MicrosoftPartnerReferralSubStatus
		return ret
	}
	return *o.Substatus
}

// GetSubstatusOk returns a tuple with the Substatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetSubstatusOk() (*MicrosoftPartnerReferralSubStatus, bool) {
	if o == nil || IsNil(o.Substatus) {
		return nil, false
	}
	return o.Substatus, true
}

// HasSubstatus returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasSubstatus() bool {
	if o != nil && !IsNil(o.Substatus) {
		return true
	}

	return false
}

// SetSubstatus gets a reference to the given MicrosoftPartnerReferralSubStatus and assigns it to the Substatus field.
func (o *MicrosoftPartnerReferral) SetSubstatus(v MicrosoftPartnerReferralSubStatus) {
	o.Substatus = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetTags() []map[string]interface{} {
	if o == nil || IsNil(o.Tags) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetTagsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []map[string]interface{} and assigns it to the Tags field.
func (o *MicrosoftPartnerReferral) SetTags(v []map[string]interface{}) {
	o.Tags = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetTarget() []MicrosoftPartnerReferralTarget {
	if o == nil || IsNil(o.Target) {
		var ret []MicrosoftPartnerReferralTarget
		return ret
	}
	return o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetTargetOk() ([]MicrosoftPartnerReferralTarget, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given []MicrosoftPartnerReferralTarget and assigns it to the Target field.
func (o *MicrosoftPartnerReferral) SetTarget(v []MicrosoftPartnerReferralTarget) {
	o.Target = v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetTeam() []MicrosoftPartnerReferralPerson {
	if o == nil || IsNil(o.Team) {
		var ret []MicrosoftPartnerReferralPerson
		return ret
	}
	return o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetTeamOk() ([]MicrosoftPartnerReferralPerson, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given []MicrosoftPartnerReferralPerson and assigns it to the Team field.
func (o *MicrosoftPartnerReferral) SetTeam(v []MicrosoftPartnerReferralPerson) {
	o.Team = v
}

// GetTrackingInfo returns the TrackingInfo field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetTrackingInfo() MicrosoftPartnerReferralTrackingInfo {
	if o == nil || IsNil(o.TrackingInfo) {
		var ret MicrosoftPartnerReferralTrackingInfo
		return ret
	}
	return *o.TrackingInfo
}

// GetTrackingInfoOk returns a tuple with the TrackingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetTrackingInfoOk() (*MicrosoftPartnerReferralTrackingInfo, bool) {
	if o == nil || IsNil(o.TrackingInfo) {
		return nil, false
	}
	return o.TrackingInfo, true
}

// HasTrackingInfo returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasTrackingInfo() bool {
	if o != nil && !IsNil(o.TrackingInfo) {
		return true
	}

	return false
}

// SetTrackingInfo gets a reference to the given MicrosoftPartnerReferralTrackingInfo and assigns it to the TrackingInfo field.
func (o *MicrosoftPartnerReferral) SetTrackingInfo(v MicrosoftPartnerReferralTrackingInfo) {
	o.TrackingInfo = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetType() MicrosoftPartnerReferralType {
	if o == nil || IsNil(o.Type) {
		var ret MicrosoftPartnerReferralType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetTypeOk() (*MicrosoftPartnerReferralType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given MicrosoftPartnerReferralType and assigns it to the Type field.
func (o *MicrosoftPartnerReferral) SetType(v MicrosoftPartnerReferralType) {
	o.Type = &v
}

// GetUpdatedDateTime returns the UpdatedDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferral) GetUpdatedDateTime() string {
	if o == nil || IsNil(o.UpdatedDateTime) {
		var ret string
		return ret
	}
	return *o.UpdatedDateTime
}

// GetUpdatedDateTimeOk returns a tuple with the UpdatedDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferral) GetUpdatedDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedDateTime) {
		return nil, false
	}
	return o.UpdatedDateTime, true
}

// HasUpdatedDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferral) HasUpdatedDateTime() bool {
	if o != nil && !IsNil(o.UpdatedDateTime) {
		return true
	}

	return false
}

// SetUpdatedDateTime gets a reference to the given string and assigns it to the UpdatedDateTime field.
func (o *MicrosoftPartnerReferral) SetUpdatedDateTime(v string) {
	o.UpdatedDateTime = &v
}

func (o MicrosoftPartnerReferral) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferral) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcceptedDateTime) {
		toSerialize["acceptedDateTime"] = o.AcceptedDateTime
	}
	if !IsNil(o.CallToAction) {
		toSerialize["callToAction"] = o.CallToAction
	}
	if !IsNil(o.CampaignId) {
		toSerialize["campaignId"] = o.CampaignId
	}
	if !IsNil(o.ClosedDateTime) {
		toSerialize["closedDateTime"] = o.ClosedDateTime
	}
	if !IsNil(o.Consent) {
		toSerialize["consent"] = o.Consent
	}
	if !IsNil(o.CreatedDateTime) {
		toSerialize["createdDateTime"] = o.CreatedDateTime
	}
	if !IsNil(o.CreatedVia) {
		toSerialize["createdVia"] = o.CreatedVia
	}
	if !IsNil(o.CustomerProfile) {
		toSerialize["customerProfile"] = o.CustomerProfile
	}
	if !IsNil(o.DealSensitivity) {
		toSerialize["dealSensitivity"] = o.DealSensitivity
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.ETag) {
		toSerialize["eTag"] = o.ETag
	}
	if !IsNil(o.EngagementId) {
		toSerialize["engagementId"] = o.EngagementId
	}
	if !IsNil(o.Exception) {
		toSerialize["exception"] = o.Exception
	}
	if !IsNil(o.ExpirationDateTime) {
		toSerialize["expirationDateTime"] = o.ExpirationDateTime
	}
	if !IsNil(o.Favorite) {
		toSerialize["favorite"] = o.Favorite
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InviteContext) {
		toSerialize["inviteContext"] = o.InviteContext
	}
	if !IsNil(o.IsAutoRegistrationEnabled) {
		toSerialize["isAutoRegistrationEnabled"] = o.IsAutoRegistrationEnabled
	}
	if !IsNil(o.IsSpam) {
		toSerialize["isSpam"] = o.IsSpam
	}
	if !IsNil(o.LastModifiedVia) {
		toSerialize["lastModifiedVia"] = o.LastModifiedVia
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.MpnId) {
		toSerialize["mpnId"] = o.MpnId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.Qualification) {
		toSerialize["qualification"] = o.Qualification
	}
	if !IsNil(o.Quality) {
		toSerialize["quality"] = o.Quality
	}
	if !IsNil(o.ReferralProgram) {
		toSerialize["referralProgram"] = o.ReferralProgram
	}
	if !IsNil(o.ReferralSource) {
		toSerialize["referralSource"] = o.ReferralSource
	}
	if !IsNil(o.RegistrationStatus) {
		toSerialize["registrationStatus"] = o.RegistrationStatus
	}
	if !IsNil(o.Registrations) {
		toSerialize["registrations"] = o.Registrations
	}
	if !IsNil(o.SalesStage) {
		toSerialize["salesStage"] = o.SalesStage
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Substatus) {
		toSerialize["substatus"] = o.Substatus
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	if !IsNil(o.TrackingInfo) {
		toSerialize["trackingInfo"] = o.TrackingInfo
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdatedDateTime) {
		toSerialize["updatedDateTime"] = o.UpdatedDateTime
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferral struct {
	value *MicrosoftPartnerReferral
	isSet bool
}

func (v NullableMicrosoftPartnerReferral) Get() *MicrosoftPartnerReferral {
	return v.value
}

func (v *NullableMicrosoftPartnerReferral) Set(val *MicrosoftPartnerReferral) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferral) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferral(val *MicrosoftPartnerReferral) *NullableMicrosoftPartnerReferral {
	return &NullableMicrosoftPartnerReferral{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


