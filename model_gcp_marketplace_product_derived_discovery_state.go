/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductDerivedDiscoveryState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductDerivedDiscoveryState{}

// GcpMarketplaceProductDerivedDiscoveryState struct for GcpMarketplaceProductDerivedDiscoveryState
type GcpMarketplaceProductDerivedDiscoveryState struct {
	AccessState *GcpMarketplaceProductAccessState `json:"accessState,omitempty"`
	SearchState *string `json:"searchState,omitempty"`
}

// NewGcpMarketplaceProductDerivedDiscoveryState instantiates a new GcpMarketplaceProductDerivedDiscoveryState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductDerivedDiscoveryState() *GcpMarketplaceProductDerivedDiscoveryState {
	this := GcpMarketplaceProductDerivedDiscoveryState{}
	return &this
}

// NewGcpMarketplaceProductDerivedDiscoveryStateWithDefaults instantiates a new GcpMarketplaceProductDerivedDiscoveryState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductDerivedDiscoveryStateWithDefaults() *GcpMarketplaceProductDerivedDiscoveryState {
	this := GcpMarketplaceProductDerivedDiscoveryState{}
	return &this
}

// GetAccessState returns the AccessState field value if set, zero value otherwise.
func (o *GcpMarketplaceProductDerivedDiscoveryState) GetAccessState() GcpMarketplaceProductAccessState {
	if o == nil || IsNil(o.AccessState) {
		var ret GcpMarketplaceProductAccessState
		return ret
	}
	return *o.AccessState
}

// GetAccessStateOk returns a tuple with the AccessState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductDerivedDiscoveryState) GetAccessStateOk() (*GcpMarketplaceProductAccessState, bool) {
	if o == nil || IsNil(o.AccessState) {
		return nil, false
	}
	return o.AccessState, true
}

// HasAccessState returns a boolean if a field has been set.
func (o *GcpMarketplaceProductDerivedDiscoveryState) HasAccessState() bool {
	if o != nil && !IsNil(o.AccessState) {
		return true
	}

	return false
}

// SetAccessState gets a reference to the given GcpMarketplaceProductAccessState and assigns it to the AccessState field.
func (o *GcpMarketplaceProductDerivedDiscoveryState) SetAccessState(v GcpMarketplaceProductAccessState) {
	o.AccessState = &v
}

// GetSearchState returns the SearchState field value if set, zero value otherwise.
func (o *GcpMarketplaceProductDerivedDiscoveryState) GetSearchState() string {
	if o == nil || IsNil(o.SearchState) {
		var ret string
		return ret
	}
	return *o.SearchState
}

// GetSearchStateOk returns a tuple with the SearchState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductDerivedDiscoveryState) GetSearchStateOk() (*string, bool) {
	if o == nil || IsNil(o.SearchState) {
		return nil, false
	}
	return o.SearchState, true
}

// HasSearchState returns a boolean if a field has been set.
func (o *GcpMarketplaceProductDerivedDiscoveryState) HasSearchState() bool {
	if o != nil && !IsNil(o.SearchState) {
		return true
	}

	return false
}

// SetSearchState gets a reference to the given string and assigns it to the SearchState field.
func (o *GcpMarketplaceProductDerivedDiscoveryState) SetSearchState(v string) {
	o.SearchState = &v
}

func (o GcpMarketplaceProductDerivedDiscoveryState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductDerivedDiscoveryState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessState) {
		toSerialize["accessState"] = o.AccessState
	}
	if !IsNil(o.SearchState) {
		toSerialize["searchState"] = o.SearchState
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductDerivedDiscoveryState struct {
	value *GcpMarketplaceProductDerivedDiscoveryState
	isSet bool
}

func (v NullableGcpMarketplaceProductDerivedDiscoveryState) Get() *GcpMarketplaceProductDerivedDiscoveryState {
	return v.value
}

func (v *NullableGcpMarketplaceProductDerivedDiscoveryState) Set(val *GcpMarketplaceProductDerivedDiscoveryState) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductDerivedDiscoveryState) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductDerivedDiscoveryState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductDerivedDiscoveryState(val *GcpMarketplaceProductDerivedDiscoveryState) *NullableGcpMarketplaceProductDerivedDiscoveryState {
	return &NullableGcpMarketplaceProductDerivedDiscoveryState{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductDerivedDiscoveryState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductDerivedDiscoveryState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


