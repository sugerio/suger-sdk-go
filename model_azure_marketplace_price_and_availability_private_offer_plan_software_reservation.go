/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation{}

// AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation struct for AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation
type AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation struct {
	PaymentSchedule     *AzureMarketplaceTerm    `json:"paymentSchedule,omitempty"`
	ReservationDuration *AzureMarketplaceTerm    `json:"reservationDuration,omitempty"`
	VmPrices            *AzureMarketplaceVmPrice `json:"vmPrices,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation instantiates a new AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation() *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation {
	this := AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservationWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservationWithDefaults() *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation {
	this := AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation{}
	return &this
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetPaymentSchedule() AzureMarketplaceTerm {
	if o == nil || IsNil(o.PaymentSchedule) {
		var ret AzureMarketplaceTerm
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetPaymentScheduleOk() (*AzureMarketplaceTerm, bool) {
	if o == nil || IsNil(o.PaymentSchedule) {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) HasPaymentSchedule() bool {
	if o != nil && !IsNil(o.PaymentSchedule) {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given AzureMarketplaceTerm and assigns it to the PaymentSchedule field.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) SetPaymentSchedule(v AzureMarketplaceTerm) {
	o.PaymentSchedule = &v
}

// GetReservationDuration returns the ReservationDuration field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetReservationDuration() AzureMarketplaceTerm {
	if o == nil || IsNil(o.ReservationDuration) {
		var ret AzureMarketplaceTerm
		return ret
	}
	return *o.ReservationDuration
}

// GetReservationDurationOk returns a tuple with the ReservationDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetReservationDurationOk() (*AzureMarketplaceTerm, bool) {
	if o == nil || IsNil(o.ReservationDuration) {
		return nil, false
	}
	return o.ReservationDuration, true
}

// HasReservationDuration returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) HasReservationDuration() bool {
	if o != nil && !IsNil(o.ReservationDuration) {
		return true
	}

	return false
}

// SetReservationDuration gets a reference to the given AzureMarketplaceTerm and assigns it to the ReservationDuration field.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) SetReservationDuration(v AzureMarketplaceTerm) {
	o.ReservationDuration = &v
}

// GetVmPrices returns the VmPrices field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetVmPrices() AzureMarketplaceVmPrice {
	if o == nil || IsNil(o.VmPrices) {
		var ret AzureMarketplaceVmPrice
		return ret
	}
	return *o.VmPrices
}

// GetVmPricesOk returns a tuple with the VmPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) GetVmPricesOk() (*AzureMarketplaceVmPrice, bool) {
	if o == nil || IsNil(o.VmPrices) {
		return nil, false
	}
	return o.VmPrices, true
}

// HasVmPrices returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) HasVmPrices() bool {
	if o != nil && !IsNil(o.VmPrices) {
		return true
	}

	return false
}

// SetVmPrices gets a reference to the given AzureMarketplaceVmPrice and assigns it to the VmPrices field.
func (o *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) SetVmPrices(v AzureMarketplaceVmPrice) {
	o.VmPrices = &v
}

func (o AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentSchedule) {
		toSerialize["paymentSchedule"] = o.PaymentSchedule
	}
	if !IsNil(o.ReservationDuration) {
		toSerialize["reservationDuration"] = o.ReservationDuration
	}
	if !IsNil(o.VmPrices) {
		toSerialize["vmPrices"] = o.VmPrices
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation struct {
	value *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) Get() *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) Set(val *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation(val *AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) *NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation {
	return &NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
