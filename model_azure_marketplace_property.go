/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureMarketplaceProperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceProperty{}

// AzureMarketplaceProperty struct for AzureMarketplaceProperty
type AzureMarketplaceProperty struct {
	Schema                    *string                                 `json:"$schema,omitempty"`
	AppVersion                *string                                 `json:"appVersion,omitempty"`
	Categories                *map[string][]string                    `json:"categories,omitempty"`
	CloudIndustries           *map[string][]string                    `json:"cloudIndustries,omitempty"`
	CustomAmendments          []AzureMarketplaceCustomAmendment       `json:"customAmendments,omitempty"`
	Id                        *string                                 `json:"id,omitempty"`
	Industries                *map[string][]string                    `json:"industries,omitempty"`
	Kind                      *string                                 `json:"kind,omitempty"`
	LifecycleState            *AzureMarketplaceResourceLifecycleState `json:"lifecycleState,omitempty"`
	Product                   *string                                 `json:"product,omitempty"`
	ResourceName              *string                                 `json:"resourceName,omitempty"`
	StandardContractAmendment *string                                 `json:"standardContractAmendment,omitempty"`
	TermsConditions           *string                                 `json:"termsConditions,omitempty"`
	TermsOfUse                *string                                 `json:"termsOfUse,omitempty"`
	TermsOfUseUrl             *string                                 `json:"termsOfUseUrl,omitempty"`
	Validations               []AzureMarketplaceValidation            `json:"validations,omitempty"`
}

// NewAzureMarketplaceProperty instantiates a new AzureMarketplaceProperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceProperty() *AzureMarketplaceProperty {
	this := AzureMarketplaceProperty{}
	return &this
}

// NewAzureMarketplacePropertyWithDefaults instantiates a new AzureMarketplaceProperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePropertyWithDefaults() *AzureMarketplaceProperty {
	this := AzureMarketplaceProperty{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplaceProperty) SetSchema(v string) {
	o.Schema = &v
}

// GetAppVersion returns the AppVersion field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetAppVersion() string {
	if o == nil || IsNil(o.AppVersion) {
		var ret string
		return ret
	}
	return *o.AppVersion
}

// GetAppVersionOk returns a tuple with the AppVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetAppVersionOk() (*string, bool) {
	if o == nil || IsNil(o.AppVersion) {
		return nil, false
	}
	return o.AppVersion, true
}

// HasAppVersion returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasAppVersion() bool {
	if o != nil && !IsNil(o.AppVersion) {
		return true
	}

	return false
}

// SetAppVersion gets a reference to the given string and assigns it to the AppVersion field.
func (o *AzureMarketplaceProperty) SetAppVersion(v string) {
	o.AppVersion = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetCategories() map[string][]string {
	if o == nil || IsNil(o.Categories) {
		var ret map[string][]string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetCategoriesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given map[string][]string and assigns it to the Categories field.
func (o *AzureMarketplaceProperty) SetCategories(v map[string][]string) {
	o.Categories = &v
}

// GetCloudIndustries returns the CloudIndustries field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetCloudIndustries() map[string][]string {
	if o == nil || IsNil(o.CloudIndustries) {
		var ret map[string][]string
		return ret
	}
	return *o.CloudIndustries
}

// GetCloudIndustriesOk returns a tuple with the CloudIndustries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetCloudIndustriesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.CloudIndustries) {
		return nil, false
	}
	return o.CloudIndustries, true
}

// HasCloudIndustries returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasCloudIndustries() bool {
	if o != nil && !IsNil(o.CloudIndustries) {
		return true
	}

	return false
}

// SetCloudIndustries gets a reference to the given map[string][]string and assigns it to the CloudIndustries field.
func (o *AzureMarketplaceProperty) SetCloudIndustries(v map[string][]string) {
	o.CloudIndustries = &v
}

// GetCustomAmendments returns the CustomAmendments field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetCustomAmendments() []AzureMarketplaceCustomAmendment {
	if o == nil || IsNil(o.CustomAmendments) {
		var ret []AzureMarketplaceCustomAmendment
		return ret
	}
	return o.CustomAmendments
}

// GetCustomAmendmentsOk returns a tuple with the CustomAmendments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetCustomAmendmentsOk() ([]AzureMarketplaceCustomAmendment, bool) {
	if o == nil || IsNil(o.CustomAmendments) {
		return nil, false
	}
	return o.CustomAmendments, true
}

// HasCustomAmendments returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasCustomAmendments() bool {
	if o != nil && !IsNil(o.CustomAmendments) {
		return true
	}

	return false
}

// SetCustomAmendments gets a reference to the given []AzureMarketplaceCustomAmendment and assigns it to the CustomAmendments field.
func (o *AzureMarketplaceProperty) SetCustomAmendments(v []AzureMarketplaceCustomAmendment) {
	o.CustomAmendments = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplaceProperty) SetId(v string) {
	o.Id = &v
}

// GetIndustries returns the Industries field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetIndustries() map[string][]string {
	if o == nil || IsNil(o.Industries) {
		var ret map[string][]string
		return ret
	}
	return *o.Industries
}

// GetIndustriesOk returns a tuple with the Industries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetIndustriesOk() (*map[string][]string, bool) {
	if o == nil || IsNil(o.Industries) {
		return nil, false
	}
	return o.Industries, true
}

// HasIndustries returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasIndustries() bool {
	if o != nil && !IsNil(o.Industries) {
		return true
	}

	return false
}

// SetIndustries gets a reference to the given map[string][]string and assigns it to the Industries field.
func (o *AzureMarketplaceProperty) SetIndustries(v map[string][]string) {
	o.Industries = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *AzureMarketplaceProperty) SetKind(v string) {
	o.Kind = &v
}

// GetLifecycleState returns the LifecycleState field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetLifecycleState() AzureMarketplaceResourceLifecycleState {
	if o == nil || IsNil(o.LifecycleState) {
		var ret AzureMarketplaceResourceLifecycleState
		return ret
	}
	return *o.LifecycleState
}

// GetLifecycleStateOk returns a tuple with the LifecycleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetLifecycleStateOk() (*AzureMarketplaceResourceLifecycleState, bool) {
	if o == nil || IsNil(o.LifecycleState) {
		return nil, false
	}
	return o.LifecycleState, true
}

// HasLifecycleState returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasLifecycleState() bool {
	if o != nil && !IsNil(o.LifecycleState) {
		return true
	}

	return false
}

// SetLifecycleState gets a reference to the given AzureMarketplaceResourceLifecycleState and assigns it to the LifecycleState field.
func (o *AzureMarketplaceProperty) SetLifecycleState(v AzureMarketplaceResourceLifecycleState) {
	o.LifecycleState = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzureMarketplaceProperty) SetProduct(v string) {
	o.Product = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzureMarketplaceProperty) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetStandardContractAmendment returns the StandardContractAmendment field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetStandardContractAmendment() string {
	if o == nil || IsNil(o.StandardContractAmendment) {
		var ret string
		return ret
	}
	return *o.StandardContractAmendment
}

// GetStandardContractAmendmentOk returns a tuple with the StandardContractAmendment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetStandardContractAmendmentOk() (*string, bool) {
	if o == nil || IsNil(o.StandardContractAmendment) {
		return nil, false
	}
	return o.StandardContractAmendment, true
}

// HasStandardContractAmendment returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasStandardContractAmendment() bool {
	if o != nil && !IsNil(o.StandardContractAmendment) {
		return true
	}

	return false
}

// SetStandardContractAmendment gets a reference to the given string and assigns it to the StandardContractAmendment field.
func (o *AzureMarketplaceProperty) SetStandardContractAmendment(v string) {
	o.StandardContractAmendment = &v
}

// GetTermsConditions returns the TermsConditions field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetTermsConditions() string {
	if o == nil || IsNil(o.TermsConditions) {
		var ret string
		return ret
	}
	return *o.TermsConditions
}

// GetTermsConditionsOk returns a tuple with the TermsConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetTermsConditionsOk() (*string, bool) {
	if o == nil || IsNil(o.TermsConditions) {
		return nil, false
	}
	return o.TermsConditions, true
}

// HasTermsConditions returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasTermsConditions() bool {
	if o != nil && !IsNil(o.TermsConditions) {
		return true
	}

	return false
}

// SetTermsConditions gets a reference to the given string and assigns it to the TermsConditions field.
func (o *AzureMarketplaceProperty) SetTermsConditions(v string) {
	o.TermsConditions = &v
}

// GetTermsOfUse returns the TermsOfUse field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetTermsOfUse() string {
	if o == nil || IsNil(o.TermsOfUse) {
		var ret string
		return ret
	}
	return *o.TermsOfUse
}

// GetTermsOfUseOk returns a tuple with the TermsOfUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetTermsOfUseOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfUse) {
		return nil, false
	}
	return o.TermsOfUse, true
}

// HasTermsOfUse returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasTermsOfUse() bool {
	if o != nil && !IsNil(o.TermsOfUse) {
		return true
	}

	return false
}

// SetTermsOfUse gets a reference to the given string and assigns it to the TermsOfUse field.
func (o *AzureMarketplaceProperty) SetTermsOfUse(v string) {
	o.TermsOfUse = &v
}

// GetTermsOfUseUrl returns the TermsOfUseUrl field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetTermsOfUseUrl() string {
	if o == nil || IsNil(o.TermsOfUseUrl) {
		var ret string
		return ret
	}
	return *o.TermsOfUseUrl
}

// GetTermsOfUseUrlOk returns a tuple with the TermsOfUseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetTermsOfUseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfUseUrl) {
		return nil, false
	}
	return o.TermsOfUseUrl, true
}

// HasTermsOfUseUrl returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasTermsOfUseUrl() bool {
	if o != nil && !IsNil(o.TermsOfUseUrl) {
		return true
	}

	return false
}

// SetTermsOfUseUrl gets a reference to the given string and assigns it to the TermsOfUseUrl field.
func (o *AzureMarketplaceProperty) SetTermsOfUseUrl(v string) {
	o.TermsOfUseUrl = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzureMarketplaceProperty) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceProperty) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzureMarketplaceProperty) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzureMarketplaceProperty) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

func (o AzureMarketplaceProperty) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceProperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.AppVersion) {
		toSerialize["appVersion"] = o.AppVersion
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.CloudIndustries) {
		toSerialize["cloudIndustries"] = o.CloudIndustries
	}
	if !IsNil(o.CustomAmendments) {
		toSerialize["customAmendments"] = o.CustomAmendments
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Industries) {
		toSerialize["industries"] = o.Industries
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.LifecycleState) {
		toSerialize["lifecycleState"] = o.LifecycleState
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.StandardContractAmendment) {
		toSerialize["standardContractAmendment"] = o.StandardContractAmendment
	}
	if !IsNil(o.TermsConditions) {
		toSerialize["termsConditions"] = o.TermsConditions
	}
	if !IsNil(o.TermsOfUse) {
		toSerialize["termsOfUse"] = o.TermsOfUse
	}
	if !IsNil(o.TermsOfUseUrl) {
		toSerialize["termsOfUseUrl"] = o.TermsOfUseUrl
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceProperty struct {
	value *AzureMarketplaceProperty
	isSet bool
}

func (v NullableAzureMarketplaceProperty) Get() *AzureMarketplaceProperty {
	return v.value
}

func (v *NullableAzureMarketplaceProperty) Set(val *AzureMarketplaceProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceProperty(val *AzureMarketplaceProperty) *NullableAzureMarketplaceProperty {
	return &NullableAzureMarketplaceProperty{value: val, isSet: true}
}

func (v NullableAzureMarketplaceProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
