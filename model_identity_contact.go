/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IdentityContact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityContact{}

// IdentityContact struct for IdentityContact
type IdentityContact struct {
	CreationTime *string `json:"creationTime,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	// This is generated by Suger. When you create a new contact, do not provide.
	Id *string `json:"id,omitempty"`
	Info *IdentityConctactInfo `json:"info,omitempty"`
	LastUpdateTime *string `json:"lastUpdateTime,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationID *string `json:"organizationID,omitempty"`
}

// NewIdentityContact instantiates a new IdentityContact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityContact() *IdentityContact {
	this := IdentityContact{}
	return &this
}

// NewIdentityContactWithDefaults instantiates a new IdentityContact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityContactWithDefaults() *IdentityContact {
	this := IdentityContact{}
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *IdentityContact) GetCreationTime() string {
	if o == nil || IsNil(o.CreationTime) {
		var ret string
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetCreationTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *IdentityContact) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given string and assigns it to the CreationTime field.
func (o *IdentityContact) SetCreationTime(v string) {
	o.CreationTime = &v
}

// GetEmailAddress returns the EmailAddress field value if set, zero value otherwise.
func (o *IdentityContact) GetEmailAddress() string {
	if o == nil || IsNil(o.EmailAddress) {
		var ret string
		return ret
	}
	return *o.EmailAddress
}

// GetEmailAddressOk returns a tuple with the EmailAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetEmailAddressOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddress) {
		return nil, false
	}
	return o.EmailAddress, true
}

// HasEmailAddress returns a boolean if a field has been set.
func (o *IdentityContact) HasEmailAddress() bool {
	if o != nil && !IsNil(o.EmailAddress) {
		return true
	}

	return false
}

// SetEmailAddress gets a reference to the given string and assigns it to the EmailAddress field.
func (o *IdentityContact) SetEmailAddress(v string) {
	o.EmailAddress = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdentityContact) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdentityContact) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IdentityContact) SetId(v string) {
	o.Id = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *IdentityContact) GetInfo() IdentityConctactInfo {
	if o == nil || IsNil(o.Info) {
		var ret IdentityConctactInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetInfoOk() (*IdentityConctactInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *IdentityContact) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given IdentityConctactInfo and assigns it to the Info field.
func (o *IdentityContact) SetInfo(v IdentityConctactInfo) {
	o.Info = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *IdentityContact) GetLastUpdateTime() string {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret string
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetLastUpdateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *IdentityContact) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given string and assigns it to the LastUpdateTime field.
func (o *IdentityContact) SetLastUpdateTime(v string) {
	o.LastUpdateTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdentityContact) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdentityContact) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdentityContact) SetName(v string) {
	o.Name = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *IdentityContact) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityContact) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *IdentityContact) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *IdentityContact) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

func (o IdentityContact) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityContact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !IsNil(o.EmailAddress) {
		toSerialize["emailAddress"] = o.EmailAddress
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	return toSerialize, nil
}

type NullableIdentityContact struct {
	value *IdentityContact
	isSet bool
}

func (v NullableIdentityContact) Get() *IdentityContact {
	return v.value
}

func (v *NullableIdentityContact) Set(val *IdentityContact) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityContact) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityContact(val *IdentityContact) *NullableIdentityContact {
	return &NullableIdentityContact{value: val, isSet: true}
}

func (v NullableIdentityContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


