/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the ListCosellOppReferralsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListCosellOppReferralsResponse{}

// ListCosellOppReferralsResponse struct for ListCosellOppReferralsResponse
type ListCosellOppReferralsResponse struct {
	CosellOppReferrals []CosellOppReferral `json:"cosellOppReferrals,omitempty"`
	// If it is nil, it means there is no more records.
	NextOffset *int32 `json:"nextOffset,omitempty"`
	// Only available when the request is made with offset=0.
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewListCosellOppReferralsResponse instantiates a new ListCosellOppReferralsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListCosellOppReferralsResponse() *ListCosellOppReferralsResponse {
	this := ListCosellOppReferralsResponse{}
	return &this
}

// NewListCosellOppReferralsResponseWithDefaults instantiates a new ListCosellOppReferralsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListCosellOppReferralsResponseWithDefaults() *ListCosellOppReferralsResponse {
	this := ListCosellOppReferralsResponse{}
	return &this
}

// GetCosellOppReferrals returns the CosellOppReferrals field value if set, zero value otherwise.
func (o *ListCosellOppReferralsResponse) GetCosellOppReferrals() []CosellOppReferral {
	if o == nil || IsNil(o.CosellOppReferrals) {
		var ret []CosellOppReferral
		return ret
	}
	return o.CosellOppReferrals
}

// GetCosellOppReferralsOk returns a tuple with the CosellOppReferrals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCosellOppReferralsResponse) GetCosellOppReferralsOk() ([]CosellOppReferral, bool) {
	if o == nil || IsNil(o.CosellOppReferrals) {
		return nil, false
	}
	return o.CosellOppReferrals, true
}

// HasCosellOppReferrals returns a boolean if a field has been set.
func (o *ListCosellOppReferralsResponse) HasCosellOppReferrals() bool {
	if o != nil && !IsNil(o.CosellOppReferrals) {
		return true
	}

	return false
}

// SetCosellOppReferrals gets a reference to the given []CosellOppReferral and assigns it to the CosellOppReferrals field.
func (o *ListCosellOppReferralsResponse) SetCosellOppReferrals(v []CosellOppReferral) {
	o.CosellOppReferrals = v
}

// GetNextOffset returns the NextOffset field value if set, zero value otherwise.
func (o *ListCosellOppReferralsResponse) GetNextOffset() int32 {
	if o == nil || IsNil(o.NextOffset) {
		var ret int32
		return ret
	}
	return *o.NextOffset
}

// GetNextOffsetOk returns a tuple with the NextOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCosellOppReferralsResponse) GetNextOffsetOk() (*int32, bool) {
	if o == nil || IsNil(o.NextOffset) {
		return nil, false
	}
	return o.NextOffset, true
}

// HasNextOffset returns a boolean if a field has been set.
func (o *ListCosellOppReferralsResponse) HasNextOffset() bool {
	if o != nil && !IsNil(o.NextOffset) {
		return true
	}

	return false
}

// SetNextOffset gets a reference to the given int32 and assigns it to the NextOffset field.
func (o *ListCosellOppReferralsResponse) SetNextOffset(v int32) {
	o.NextOffset = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *ListCosellOppReferralsResponse) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListCosellOppReferralsResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *ListCosellOppReferralsResponse) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *ListCosellOppReferralsResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o ListCosellOppReferralsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListCosellOppReferralsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CosellOppReferrals) {
		toSerialize["cosellOppReferrals"] = o.CosellOppReferrals
	}
	if !IsNil(o.NextOffset) {
		toSerialize["nextOffset"] = o.NextOffset
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableListCosellOppReferralsResponse struct {
	value *ListCosellOppReferralsResponse
	isSet bool
}

func (v NullableListCosellOppReferralsResponse) Get() *ListCosellOppReferralsResponse {
	return v.value
}

func (v *NullableListCosellOppReferralsResponse) Set(val *ListCosellOppReferralsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListCosellOppReferralsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListCosellOppReferralsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListCosellOppReferralsResponse(val *ListCosellOppReferralsResponse) *NullableListCosellOppReferralsResponse {
	return &NullableListCosellOppReferralsResponse{value: val, isSet: true}
}

func (v NullableListCosellOppReferralsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListCosellOppReferralsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
