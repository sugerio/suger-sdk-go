/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StripeRefundDestinationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripeRefundDestinationDetails{}

// StripeRefundDestinationDetails struct for StripeRefundDestinationDetails
type StripeRefundDestinationDetails struct {
	Card *StripeRefundDestinationDetailsCard `json:"card,omitempty"`
	// The type of transaction-specific details of the payment method used in the refund (e.g., `card`). An additional hash is included on `destination_details` with a name matching this value. It contains information specific to the refund transaction.
	Type           *string                                       `json:"type,omitempty"`
	UsBankTransfer *StripeRefundDestinationDetailsUSBankTransfer `json:"us_bank_transfer,omitempty"`
}

// NewStripeRefundDestinationDetails instantiates a new StripeRefundDestinationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeRefundDestinationDetails() *StripeRefundDestinationDetails {
	this := StripeRefundDestinationDetails{}
	return &this
}

// NewStripeRefundDestinationDetailsWithDefaults instantiates a new StripeRefundDestinationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeRefundDestinationDetailsWithDefaults() *StripeRefundDestinationDetails {
	this := StripeRefundDestinationDetails{}
	return &this
}

// GetCard returns the Card field value if set, zero value otherwise.
func (o *StripeRefundDestinationDetails) GetCard() StripeRefundDestinationDetailsCard {
	if o == nil || IsNil(o.Card) {
		var ret StripeRefundDestinationDetailsCard
		return ret
	}
	return *o.Card
}

// GetCardOk returns a tuple with the Card field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeRefundDestinationDetails) GetCardOk() (*StripeRefundDestinationDetailsCard, bool) {
	if o == nil || IsNil(o.Card) {
		return nil, false
	}
	return o.Card, true
}

// HasCard returns a boolean if a field has been set.
func (o *StripeRefundDestinationDetails) HasCard() bool {
	if o != nil && !IsNil(o.Card) {
		return true
	}

	return false
}

// SetCard gets a reference to the given StripeRefundDestinationDetailsCard and assigns it to the Card field.
func (o *StripeRefundDestinationDetails) SetCard(v StripeRefundDestinationDetailsCard) {
	o.Card = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *StripeRefundDestinationDetails) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeRefundDestinationDetails) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *StripeRefundDestinationDetails) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *StripeRefundDestinationDetails) SetType(v string) {
	o.Type = &v
}

// GetUsBankTransfer returns the UsBankTransfer field value if set, zero value otherwise.
func (o *StripeRefundDestinationDetails) GetUsBankTransfer() StripeRefundDestinationDetailsUSBankTransfer {
	if o == nil || IsNil(o.UsBankTransfer) {
		var ret StripeRefundDestinationDetailsUSBankTransfer
		return ret
	}
	return *o.UsBankTransfer
}

// GetUsBankTransferOk returns a tuple with the UsBankTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripeRefundDestinationDetails) GetUsBankTransferOk() (*StripeRefundDestinationDetailsUSBankTransfer, bool) {
	if o == nil || IsNil(o.UsBankTransfer) {
		return nil, false
	}
	return o.UsBankTransfer, true
}

// HasUsBankTransfer returns a boolean if a field has been set.
func (o *StripeRefundDestinationDetails) HasUsBankTransfer() bool {
	if o != nil && !IsNil(o.UsBankTransfer) {
		return true
	}

	return false
}

// SetUsBankTransfer gets a reference to the given StripeRefundDestinationDetailsUSBankTransfer and assigns it to the UsBankTransfer field.
func (o *StripeRefundDestinationDetails) SetUsBankTransfer(v StripeRefundDestinationDetailsUSBankTransfer) {
	o.UsBankTransfer = &v
}

func (o StripeRefundDestinationDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripeRefundDestinationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Card) {
		toSerialize["card"] = o.Card
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UsBankTransfer) {
		toSerialize["us_bank_transfer"] = o.UsBankTransfer
	}
	return toSerialize, nil
}

type NullableStripeRefundDestinationDetails struct {
	value *StripeRefundDestinationDetails
	isSet bool
}

func (v NullableStripeRefundDestinationDetails) Get() *StripeRefundDestinationDetails {
	return v.value
}

func (v *NullableStripeRefundDestinationDetails) Set(val *StripeRefundDestinationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeRefundDestinationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeRefundDestinationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeRefundDestinationDetails(val *StripeRefundDestinationDetails) *NullableStripeRefundDestinationDetails {
	return &NullableStripeRefundDestinationDetails{value: val, isSet: true}
}

func (v NullableStripeRefundDestinationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeRefundDestinationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
