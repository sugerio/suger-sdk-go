/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceResellerPrivateOfferPlanState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceResellerPrivateOfferPlanState{}

// GcpMarketplaceResellerPrivateOfferPlanState struct for GcpMarketplaceResellerPrivateOfferPlanState
type GcpMarketplaceResellerPrivateOfferPlanState struct {
	CancellationReason map[string]interface{}                           `json:"cancellationReason,omitempty"`
	Comment            *string                                          `json:"comment,omitempty"`
	RejectionReason    map[string]interface{}                           `json:"rejectionReason,omitempty"`
	StateType          *GcpMarketplaceResellerPrivateOfferPlanStateType `json:"stateType,omitempty"`
}

// NewGcpMarketplaceResellerPrivateOfferPlanState instantiates a new GcpMarketplaceResellerPrivateOfferPlanState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceResellerPrivateOfferPlanState() *GcpMarketplaceResellerPrivateOfferPlanState {
	this := GcpMarketplaceResellerPrivateOfferPlanState{}
	return &this
}

// NewGcpMarketplaceResellerPrivateOfferPlanStateWithDefaults instantiates a new GcpMarketplaceResellerPrivateOfferPlanState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceResellerPrivateOfferPlanStateWithDefaults() *GcpMarketplaceResellerPrivateOfferPlanState {
	this := GcpMarketplaceResellerPrivateOfferPlanState{}
	return &this
}

// GetCancellationReason returns the CancellationReason field value if set, zero value otherwise.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetCancellationReason() map[string]interface{} {
	if o == nil || IsNil(o.CancellationReason) {
		var ret map[string]interface{}
		return ret
	}
	return o.CancellationReason
}

// GetCancellationReasonOk returns a tuple with the CancellationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetCancellationReasonOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CancellationReason) {
		return map[string]interface{}{}, false
	}
	return o.CancellationReason, true
}

// HasCancellationReason returns a boolean if a field has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) HasCancellationReason() bool {
	if o != nil && !IsNil(o.CancellationReason) {
		return true
	}

	return false
}

// SetCancellationReason gets a reference to the given map[string]interface{} and assigns it to the CancellationReason field.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) SetCancellationReason(v map[string]interface{}) {
	o.CancellationReason = v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) SetComment(v string) {
	o.Comment = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetRejectionReason() map[string]interface{} {
	if o == nil || IsNil(o.RejectionReason) {
		var ret map[string]interface{}
		return ret
	}
	return o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetRejectionReasonOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RejectionReason) {
		return map[string]interface{}{}, false
	}
	return o.RejectionReason, true
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) HasRejectionReason() bool {
	if o != nil && !IsNil(o.RejectionReason) {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given map[string]interface{} and assigns it to the RejectionReason field.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) SetRejectionReason(v map[string]interface{}) {
	o.RejectionReason = v
}

// GetStateType returns the StateType field value if set, zero value otherwise.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetStateType() GcpMarketplaceResellerPrivateOfferPlanStateType {
	if o == nil || IsNil(o.StateType) {
		var ret GcpMarketplaceResellerPrivateOfferPlanStateType
		return ret
	}
	return *o.StateType
}

// GetStateTypeOk returns a tuple with the StateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) GetStateTypeOk() (*GcpMarketplaceResellerPrivateOfferPlanStateType, bool) {
	if o == nil || IsNil(o.StateType) {
		return nil, false
	}
	return o.StateType, true
}

// HasStateType returns a boolean if a field has been set.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) HasStateType() bool {
	if o != nil && !IsNil(o.StateType) {
		return true
	}

	return false
}

// SetStateType gets a reference to the given GcpMarketplaceResellerPrivateOfferPlanStateType and assigns it to the StateType field.
func (o *GcpMarketplaceResellerPrivateOfferPlanState) SetStateType(v GcpMarketplaceResellerPrivateOfferPlanStateType) {
	o.StateType = &v
}

func (o GcpMarketplaceResellerPrivateOfferPlanState) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceResellerPrivateOfferPlanState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CancellationReason) {
		toSerialize["cancellationReason"] = o.CancellationReason
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.RejectionReason) {
		toSerialize["rejectionReason"] = o.RejectionReason
	}
	if !IsNil(o.StateType) {
		toSerialize["stateType"] = o.StateType
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceResellerPrivateOfferPlanState struct {
	value *GcpMarketplaceResellerPrivateOfferPlanState
	isSet bool
}

func (v NullableGcpMarketplaceResellerPrivateOfferPlanState) Get() *GcpMarketplaceResellerPrivateOfferPlanState {
	return v.value
}

func (v *NullableGcpMarketplaceResellerPrivateOfferPlanState) Set(val *GcpMarketplaceResellerPrivateOfferPlanState) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceResellerPrivateOfferPlanState) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceResellerPrivateOfferPlanState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceResellerPrivateOfferPlanState(val *GcpMarketplaceResellerPrivateOfferPlanState) *NullableGcpMarketplaceResellerPrivateOfferPlanState {
	return &NullableGcpMarketplaceResellerPrivateOfferPlanState{value: val, isSet: true}
}

func (v NullableGcpMarketplaceResellerPrivateOfferPlanState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceResellerPrivateOfferPlanState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
