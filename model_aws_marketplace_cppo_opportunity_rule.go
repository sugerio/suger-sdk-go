/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCppoOpportunityRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoOpportunityRule{}

// AwsMarketplaceCppoOpportunityRule struct for AwsMarketplaceCppoOpportunityRule
type AwsMarketplaceCppoOpportunityRule struct {
	AvailabilityEndDate *string `json:"AvailabilityEndDate,omitempty"`
	// Output only.
	Id *string `json:"Id,omitempty"`
	// Negative targeting defines the criteria which any customer's profile should fulfill to be restricted to access the offer.
	NegativeTargeting *AwsMarketplaceCppoOpportunityNegativeTargeting `json:"NegativeTargeting,omitempty"`
	OffersMaxQuantity *int32                                          `json:"OffersMaxQuantity,omitempty"`
	// Positive targeting defines the criteria which any buyer's profile should fulfill in order to be allowed to access the offer.
	PositiveTargeting *AwsMarketplaceCppoOpportunityPositiveTargeting `json:"PositiveTargeting,omitempty"`
	ResellerAccountId *string                                         `json:"ResellerAccountId,omitempty"`
	ResellerLegalName *string                                         `json:"ResellerLegalName,omitempty"`
	Type              *AwsMarketplaceCppoOpportunityRuleType          `json:"Type,omitempty"`
	Usage             *string                                         `json:"Usage,omitempty"`
}

// NewAwsMarketplaceCppoOpportunityRule instantiates a new AwsMarketplaceCppoOpportunityRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoOpportunityRule() *AwsMarketplaceCppoOpportunityRule {
	this := AwsMarketplaceCppoOpportunityRule{}
	return &this
}

// NewAwsMarketplaceCppoOpportunityRuleWithDefaults instantiates a new AwsMarketplaceCppoOpportunityRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoOpportunityRuleWithDefaults() *AwsMarketplaceCppoOpportunityRule {
	this := AwsMarketplaceCppoOpportunityRule{}
	return &this
}

// GetAvailabilityEndDate returns the AvailabilityEndDate field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetAvailabilityEndDate() string {
	if o == nil || IsNil(o.AvailabilityEndDate) {
		var ret string
		return ret
	}
	return *o.AvailabilityEndDate
}

// GetAvailabilityEndDateOk returns a tuple with the AvailabilityEndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetAvailabilityEndDateOk() (*string, bool) {
	if o == nil || IsNil(o.AvailabilityEndDate) {
		return nil, false
	}
	return o.AvailabilityEndDate, true
}

// HasAvailabilityEndDate returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasAvailabilityEndDate() bool {
	if o != nil && !IsNil(o.AvailabilityEndDate) {
		return true
	}

	return false
}

// SetAvailabilityEndDate gets a reference to the given string and assigns it to the AvailabilityEndDate field.
func (o *AwsMarketplaceCppoOpportunityRule) SetAvailabilityEndDate(v string) {
	o.AvailabilityEndDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AwsMarketplaceCppoOpportunityRule) SetId(v string) {
	o.Id = &v
}

// GetNegativeTargeting returns the NegativeTargeting field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetNegativeTargeting() AwsMarketplaceCppoOpportunityNegativeTargeting {
	if o == nil || IsNil(o.NegativeTargeting) {
		var ret AwsMarketplaceCppoOpportunityNegativeTargeting
		return ret
	}
	return *o.NegativeTargeting
}

// GetNegativeTargetingOk returns a tuple with the NegativeTargeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetNegativeTargetingOk() (*AwsMarketplaceCppoOpportunityNegativeTargeting, bool) {
	if o == nil || IsNil(o.NegativeTargeting) {
		return nil, false
	}
	return o.NegativeTargeting, true
}

// HasNegativeTargeting returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasNegativeTargeting() bool {
	if o != nil && !IsNil(o.NegativeTargeting) {
		return true
	}

	return false
}

// SetNegativeTargeting gets a reference to the given AwsMarketplaceCppoOpportunityNegativeTargeting and assigns it to the NegativeTargeting field.
func (o *AwsMarketplaceCppoOpportunityRule) SetNegativeTargeting(v AwsMarketplaceCppoOpportunityNegativeTargeting) {
	o.NegativeTargeting = &v
}

// GetOffersMaxQuantity returns the OffersMaxQuantity field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetOffersMaxQuantity() int32 {
	if o == nil || IsNil(o.OffersMaxQuantity) {
		var ret int32
		return ret
	}
	return *o.OffersMaxQuantity
}

// GetOffersMaxQuantityOk returns a tuple with the OffersMaxQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetOffersMaxQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.OffersMaxQuantity) {
		return nil, false
	}
	return o.OffersMaxQuantity, true
}

// HasOffersMaxQuantity returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasOffersMaxQuantity() bool {
	if o != nil && !IsNil(o.OffersMaxQuantity) {
		return true
	}

	return false
}

// SetOffersMaxQuantity gets a reference to the given int32 and assigns it to the OffersMaxQuantity field.
func (o *AwsMarketplaceCppoOpportunityRule) SetOffersMaxQuantity(v int32) {
	o.OffersMaxQuantity = &v
}

// GetPositiveTargeting returns the PositiveTargeting field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetPositiveTargeting() AwsMarketplaceCppoOpportunityPositiveTargeting {
	if o == nil || IsNil(o.PositiveTargeting) {
		var ret AwsMarketplaceCppoOpportunityPositiveTargeting
		return ret
	}
	return *o.PositiveTargeting
}

// GetPositiveTargetingOk returns a tuple with the PositiveTargeting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetPositiveTargetingOk() (*AwsMarketplaceCppoOpportunityPositiveTargeting, bool) {
	if o == nil || IsNil(o.PositiveTargeting) {
		return nil, false
	}
	return o.PositiveTargeting, true
}

// HasPositiveTargeting returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasPositiveTargeting() bool {
	if o != nil && !IsNil(o.PositiveTargeting) {
		return true
	}

	return false
}

// SetPositiveTargeting gets a reference to the given AwsMarketplaceCppoOpportunityPositiveTargeting and assigns it to the PositiveTargeting field.
func (o *AwsMarketplaceCppoOpportunityRule) SetPositiveTargeting(v AwsMarketplaceCppoOpportunityPositiveTargeting) {
	o.PositiveTargeting = &v
}

// GetResellerAccountId returns the ResellerAccountId field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetResellerAccountId() string {
	if o == nil || IsNil(o.ResellerAccountId) {
		var ret string
		return ret
	}
	return *o.ResellerAccountId
}

// GetResellerAccountIdOk returns a tuple with the ResellerAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetResellerAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResellerAccountId) {
		return nil, false
	}
	return o.ResellerAccountId, true
}

// HasResellerAccountId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasResellerAccountId() bool {
	if o != nil && !IsNil(o.ResellerAccountId) {
		return true
	}

	return false
}

// SetResellerAccountId gets a reference to the given string and assigns it to the ResellerAccountId field.
func (o *AwsMarketplaceCppoOpportunityRule) SetResellerAccountId(v string) {
	o.ResellerAccountId = &v
}

// GetResellerLegalName returns the ResellerLegalName field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetResellerLegalName() string {
	if o == nil || IsNil(o.ResellerLegalName) {
		var ret string
		return ret
	}
	return *o.ResellerLegalName
}

// GetResellerLegalNameOk returns a tuple with the ResellerLegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetResellerLegalNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResellerLegalName) {
		return nil, false
	}
	return o.ResellerLegalName, true
}

// HasResellerLegalName returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasResellerLegalName() bool {
	if o != nil && !IsNil(o.ResellerLegalName) {
		return true
	}

	return false
}

// SetResellerLegalName gets a reference to the given string and assigns it to the ResellerLegalName field.
func (o *AwsMarketplaceCppoOpportunityRule) SetResellerLegalName(v string) {
	o.ResellerLegalName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetType() AwsMarketplaceCppoOpportunityRuleType {
	if o == nil || IsNil(o.Type) {
		var ret AwsMarketplaceCppoOpportunityRuleType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetTypeOk() (*AwsMarketplaceCppoOpportunityRuleType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given AwsMarketplaceCppoOpportunityRuleType and assigns it to the Type field.
func (o *AwsMarketplaceCppoOpportunityRule) SetType(v AwsMarketplaceCppoOpportunityRuleType) {
	o.Type = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityRule) GetUsage() string {
	if o == nil || IsNil(o.Usage) {
		var ret string
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityRule) GetUsageOk() (*string, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityRule) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given string and assigns it to the Usage field.
func (o *AwsMarketplaceCppoOpportunityRule) SetUsage(v string) {
	o.Usage = &v
}

func (o AwsMarketplaceCppoOpportunityRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoOpportunityRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailabilityEndDate) {
		toSerialize["AvailabilityEndDate"] = o.AvailabilityEndDate
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.NegativeTargeting) {
		toSerialize["NegativeTargeting"] = o.NegativeTargeting
	}
	if !IsNil(o.OffersMaxQuantity) {
		toSerialize["OffersMaxQuantity"] = o.OffersMaxQuantity
	}
	if !IsNil(o.PositiveTargeting) {
		toSerialize["PositiveTargeting"] = o.PositiveTargeting
	}
	if !IsNil(o.ResellerAccountId) {
		toSerialize["ResellerAccountId"] = o.ResellerAccountId
	}
	if !IsNil(o.ResellerLegalName) {
		toSerialize["ResellerLegalName"] = o.ResellerLegalName
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Usage) {
		toSerialize["Usage"] = o.Usage
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoOpportunityRule struct {
	value *AwsMarketplaceCppoOpportunityRule
	isSet bool
}

func (v NullableAwsMarketplaceCppoOpportunityRule) Get() *AwsMarketplaceCppoOpportunityRule {
	return v.value
}

func (v *NullableAwsMarketplaceCppoOpportunityRule) Set(val *AwsMarketplaceCppoOpportunityRule) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoOpportunityRule) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoOpportunityRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoOpportunityRule(val *AwsMarketplaceCppoOpportunityRule) *NullableAwsMarketplaceCppoOpportunityRule {
	return &NullableAwsMarketplaceCppoOpportunityRule{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoOpportunityRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoOpportunityRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
