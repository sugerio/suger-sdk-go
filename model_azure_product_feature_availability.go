/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureProductFeatureAvailability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProductFeatureAvailability{}

// AzureProductFeatureAvailability struct for AzureProductFeatureAvailability
type AzureProductFeatureAvailability struct {
	CustomMeters   []AzureProductVariantCustomMeter   `json:"customMeters,omitempty"`
	Id             *string                            `json:"id,omitempty"`
	IsHidden       *bool                              `json:"isHidden,omitempty"`
	MarketStates   []AzureMarketState                 `json:"marketStates,omitempty"`
	Markets        []AzureMarket                      `json:"markets,omitempty"`
	PriceSchedules []AzureProductVariantPriceSchedule `json:"priceSchedules,omitempty"`
	Properties     []AzureTypeValue                   `json:"properties,omitempty"`
	// ResourceType = FeatureAvailability
	ResourceType          *string                   `json:"resourceType,omitempty"`
	SubscriptionAudiences []AzureAudience           `json:"subscriptionAudiences,omitempty"`
	TenantAudiences       []AzureAudience           `json:"tenantAudiences,omitempty"`
	Trial                 *AzureProductVariantTrial `json:"trial,omitempty"`
	Visibility            *string                   `json:"visibility,omitempty"`
}

// NewAzureProductFeatureAvailability instantiates a new AzureProductFeatureAvailability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProductFeatureAvailability() *AzureProductFeatureAvailability {
	this := AzureProductFeatureAvailability{}
	return &this
}

// NewAzureProductFeatureAvailabilityWithDefaults instantiates a new AzureProductFeatureAvailability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductFeatureAvailabilityWithDefaults() *AzureProductFeatureAvailability {
	this := AzureProductFeatureAvailability{}
	return &this
}

// GetCustomMeters returns the CustomMeters field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetCustomMeters() []AzureProductVariantCustomMeter {
	if o == nil || IsNil(o.CustomMeters) {
		var ret []AzureProductVariantCustomMeter
		return ret
	}
	return o.CustomMeters
}

// GetCustomMetersOk returns a tuple with the CustomMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetCustomMetersOk() ([]AzureProductVariantCustomMeter, bool) {
	if o == nil || IsNil(o.CustomMeters) {
		return nil, false
	}
	return o.CustomMeters, true
}

// HasCustomMeters returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasCustomMeters() bool {
	if o != nil && !IsNil(o.CustomMeters) {
		return true
	}

	return false
}

// SetCustomMeters gets a reference to the given []AzureProductVariantCustomMeter and assigns it to the CustomMeters field.
func (o *AzureProductFeatureAvailability) SetCustomMeters(v []AzureProductVariantCustomMeter) {
	o.CustomMeters = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureProductFeatureAvailability) SetId(v string) {
	o.Id = &v
}

// GetIsHidden returns the IsHidden field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetIsHidden() bool {
	if o == nil || IsNil(o.IsHidden) {
		var ret bool
		return ret
	}
	return *o.IsHidden
}

// GetIsHiddenOk returns a tuple with the IsHidden field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetIsHiddenOk() (*bool, bool) {
	if o == nil || IsNil(o.IsHidden) {
		return nil, false
	}
	return o.IsHidden, true
}

// HasIsHidden returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasIsHidden() bool {
	if o != nil && !IsNil(o.IsHidden) {
		return true
	}

	return false
}

// SetIsHidden gets a reference to the given bool and assigns it to the IsHidden field.
func (o *AzureProductFeatureAvailability) SetIsHidden(v bool) {
	o.IsHidden = &v
}

// GetMarketStates returns the MarketStates field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetMarketStates() []AzureMarketState {
	if o == nil || IsNil(o.MarketStates) {
		var ret []AzureMarketState
		return ret
	}
	return o.MarketStates
}

// GetMarketStatesOk returns a tuple with the MarketStates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetMarketStatesOk() ([]AzureMarketState, bool) {
	if o == nil || IsNil(o.MarketStates) {
		return nil, false
	}
	return o.MarketStates, true
}

// HasMarketStates returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasMarketStates() bool {
	if o != nil && !IsNil(o.MarketStates) {
		return true
	}

	return false
}

// SetMarketStates gets a reference to the given []AzureMarketState and assigns it to the MarketStates field.
func (o *AzureProductFeatureAvailability) SetMarketStates(v []AzureMarketState) {
	o.MarketStates = v
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetMarkets() []AzureMarket {
	if o == nil || IsNil(o.Markets) {
		var ret []AzureMarket
		return ret
	}
	return o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetMarketsOk() ([]AzureMarket, bool) {
	if o == nil || IsNil(o.Markets) {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasMarkets() bool {
	if o != nil && !IsNil(o.Markets) {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given []AzureMarket and assigns it to the Markets field.
func (o *AzureProductFeatureAvailability) SetMarkets(v []AzureMarket) {
	o.Markets = v
}

// GetPriceSchedules returns the PriceSchedules field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetPriceSchedules() []AzureProductVariantPriceSchedule {
	if o == nil || IsNil(o.PriceSchedules) {
		var ret []AzureProductVariantPriceSchedule
		return ret
	}
	return o.PriceSchedules
}

// GetPriceSchedulesOk returns a tuple with the PriceSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetPriceSchedulesOk() ([]AzureProductVariantPriceSchedule, bool) {
	if o == nil || IsNil(o.PriceSchedules) {
		return nil, false
	}
	return o.PriceSchedules, true
}

// HasPriceSchedules returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasPriceSchedules() bool {
	if o != nil && !IsNil(o.PriceSchedules) {
		return true
	}

	return false
}

// SetPriceSchedules gets a reference to the given []AzureProductVariantPriceSchedule and assigns it to the PriceSchedules field.
func (o *AzureProductFeatureAvailability) SetPriceSchedules(v []AzureProductVariantPriceSchedule) {
	o.PriceSchedules = v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetProperties() []AzureTypeValue {
	if o == nil || IsNil(o.Properties) {
		var ret []AzureTypeValue
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetPropertiesOk() ([]AzureTypeValue, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []AzureTypeValue and assigns it to the Properties field.
func (o *AzureProductFeatureAvailability) SetProperties(v []AzureTypeValue) {
	o.Properties = v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AzureProductFeatureAvailability) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSubscriptionAudiences returns the SubscriptionAudiences field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetSubscriptionAudiences() []AzureAudience {
	if o == nil || IsNil(o.SubscriptionAudiences) {
		var ret []AzureAudience
		return ret
	}
	return o.SubscriptionAudiences
}

// GetSubscriptionAudiencesOk returns a tuple with the SubscriptionAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetSubscriptionAudiencesOk() ([]AzureAudience, bool) {
	if o == nil || IsNil(o.SubscriptionAudiences) {
		return nil, false
	}
	return o.SubscriptionAudiences, true
}

// HasSubscriptionAudiences returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasSubscriptionAudiences() bool {
	if o != nil && !IsNil(o.SubscriptionAudiences) {
		return true
	}

	return false
}

// SetSubscriptionAudiences gets a reference to the given []AzureAudience and assigns it to the SubscriptionAudiences field.
func (o *AzureProductFeatureAvailability) SetSubscriptionAudiences(v []AzureAudience) {
	o.SubscriptionAudiences = v
}

// GetTenantAudiences returns the TenantAudiences field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetTenantAudiences() []AzureAudience {
	if o == nil || IsNil(o.TenantAudiences) {
		var ret []AzureAudience
		return ret
	}
	return o.TenantAudiences
}

// GetTenantAudiencesOk returns a tuple with the TenantAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetTenantAudiencesOk() ([]AzureAudience, bool) {
	if o == nil || IsNil(o.TenantAudiences) {
		return nil, false
	}
	return o.TenantAudiences, true
}

// HasTenantAudiences returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasTenantAudiences() bool {
	if o != nil && !IsNil(o.TenantAudiences) {
		return true
	}

	return false
}

// SetTenantAudiences gets a reference to the given []AzureAudience and assigns it to the TenantAudiences field.
func (o *AzureProductFeatureAvailability) SetTenantAudiences(v []AzureAudience) {
	o.TenantAudiences = v
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetTrial() AzureProductVariantTrial {
	if o == nil || IsNil(o.Trial) {
		var ret AzureProductVariantTrial
		return ret
	}
	return *o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetTrialOk() (*AzureProductVariantTrial, bool) {
	if o == nil || IsNil(o.Trial) {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasTrial() bool {
	if o != nil && !IsNil(o.Trial) {
		return true
	}

	return false
}

// SetTrial gets a reference to the given AzureProductVariantTrial and assigns it to the Trial field.
func (o *AzureProductFeatureAvailability) SetTrial(v AzureProductVariantTrial) {
	o.Trial = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AzureProductFeatureAvailability) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductFeatureAvailability) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AzureProductFeatureAvailability) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AzureProductFeatureAvailability) SetVisibility(v string) {
	o.Visibility = &v
}

func (o AzureProductFeatureAvailability) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProductFeatureAvailability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomMeters) {
		toSerialize["customMeters"] = o.CustomMeters
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsHidden) {
		toSerialize["isHidden"] = o.IsHidden
	}
	if !IsNil(o.MarketStates) {
		toSerialize["marketStates"] = o.MarketStates
	}
	if !IsNil(o.Markets) {
		toSerialize["markets"] = o.Markets
	}
	if !IsNil(o.PriceSchedules) {
		toSerialize["priceSchedules"] = o.PriceSchedules
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.SubscriptionAudiences) {
		toSerialize["subscriptionAudiences"] = o.SubscriptionAudiences
	}
	if !IsNil(o.TenantAudiences) {
		toSerialize["tenantAudiences"] = o.TenantAudiences
	}
	if !IsNil(o.Trial) {
		toSerialize["trial"] = o.Trial
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableAzureProductFeatureAvailability struct {
	value *AzureProductFeatureAvailability
	isSet bool
}

func (v NullableAzureProductFeatureAvailability) Get() *AzureProductFeatureAvailability {
	return v.value
}

func (v *NullableAzureProductFeatureAvailability) Set(val *AzureProductFeatureAvailability) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProductFeatureAvailability) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProductFeatureAvailability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProductFeatureAvailability(val *AzureProductFeatureAvailability) *NullableAzureProductFeatureAvailability {
	return &NullableAzureProductFeatureAvailability{value: val, isSet: true}
}

func (v NullableAzureProductFeatureAvailability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProductFeatureAvailability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
