/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCatalogPricingTermRateCardConstraints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCatalogPricingTermRateCardConstraints{}

// AwsMarketplaceCatalogPricingTermRateCardConstraints struct for AwsMarketplaceCatalogPricingTermRateCardConstraints
type AwsMarketplaceCatalogPricingTermRateCardConstraints struct {
	// Determines if buyers are allowed to select multiple dimensions in the rate card. Possible values are \"Allowed\" and \"Disallowed\". Default value is \"Allowed\".
	MultipleDimensionSelection *string `json:"MultipleDimensionSelection,omitempty"`
	// Determines if acceptors are allowed to configure quantity for each dimension in rate card. Possible values are \"Allowed\" and \"Disallowed\". Default value is \"Allowed\".
	QuantityConfiguration *string `json:"QuantityConfiguration,omitempty"`
}

// NewAwsMarketplaceCatalogPricingTermRateCardConstraints instantiates a new AwsMarketplaceCatalogPricingTermRateCardConstraints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCatalogPricingTermRateCardConstraints() *AwsMarketplaceCatalogPricingTermRateCardConstraints {
	this := AwsMarketplaceCatalogPricingTermRateCardConstraints{}
	return &this
}

// NewAwsMarketplaceCatalogPricingTermRateCardConstraintsWithDefaults instantiates a new AwsMarketplaceCatalogPricingTermRateCardConstraints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCatalogPricingTermRateCardConstraintsWithDefaults() *AwsMarketplaceCatalogPricingTermRateCardConstraints {
	this := AwsMarketplaceCatalogPricingTermRateCardConstraints{}
	return &this
}

// GetMultipleDimensionSelection returns the MultipleDimensionSelection field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) GetMultipleDimensionSelection() string {
	if o == nil || IsNil(o.MultipleDimensionSelection) {
		var ret string
		return ret
	}
	return *o.MultipleDimensionSelection
}

// GetMultipleDimensionSelectionOk returns a tuple with the MultipleDimensionSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) GetMultipleDimensionSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.MultipleDimensionSelection) {
		return nil, false
	}
	return o.MultipleDimensionSelection, true
}

// HasMultipleDimensionSelection returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) HasMultipleDimensionSelection() bool {
	if o != nil && !IsNil(o.MultipleDimensionSelection) {
		return true
	}

	return false
}

// SetMultipleDimensionSelection gets a reference to the given string and assigns it to the MultipleDimensionSelection field.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) SetMultipleDimensionSelection(v string) {
	o.MultipleDimensionSelection = &v
}

// GetQuantityConfiguration returns the QuantityConfiguration field value if set, zero value otherwise.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) GetQuantityConfiguration() string {
	if o == nil || IsNil(o.QuantityConfiguration) {
		var ret string
		return ret
	}
	return *o.QuantityConfiguration
}

// GetQuantityConfigurationOk returns a tuple with the QuantityConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) GetQuantityConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.QuantityConfiguration) {
		return nil, false
	}
	return o.QuantityConfiguration, true
}

// HasQuantityConfiguration returns a boolean if a field has been set.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) HasQuantityConfiguration() bool {
	if o != nil && !IsNil(o.QuantityConfiguration) {
		return true
	}

	return false
}

// SetQuantityConfiguration gets a reference to the given string and assigns it to the QuantityConfiguration field.
func (o *AwsMarketplaceCatalogPricingTermRateCardConstraints) SetQuantityConfiguration(v string) {
	o.QuantityConfiguration = &v
}

func (o AwsMarketplaceCatalogPricingTermRateCardConstraints) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCatalogPricingTermRateCardConstraints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultipleDimensionSelection) {
		toSerialize["MultipleDimensionSelection"] = o.MultipleDimensionSelection
	}
	if !IsNil(o.QuantityConfiguration) {
		toSerialize["QuantityConfiguration"] = o.QuantityConfiguration
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCatalogPricingTermRateCardConstraints struct {
	value *AwsMarketplaceCatalogPricingTermRateCardConstraints
	isSet bool
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) Get() *AwsMarketplaceCatalogPricingTermRateCardConstraints {
	return v.value
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) Set(val *AwsMarketplaceCatalogPricingTermRateCardConstraints) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCatalogPricingTermRateCardConstraints(val *AwsMarketplaceCatalogPricingTermRateCardConstraints) *NullableAwsMarketplaceCatalogPricingTermRateCardConstraints {
	return &NullableAwsMarketplaceCatalogPricingTermRateCardConstraints{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCatalogPricingTermRateCardConstraints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
