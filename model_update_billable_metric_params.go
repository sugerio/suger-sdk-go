/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the UpdateBillableMetricParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBillableMetricParams{}

// UpdateBillableMetricParams struct for UpdateBillableMetricParams
type UpdateBillableMetricParams struct {
	Description *string               `json:"description,omitempty"`
	Name        *string               `json:"name,omitempty"`
	Status      *BillableMetricStatus `json:"status,omitempty"`
}

// NewUpdateBillableMetricParams instantiates a new UpdateBillableMetricParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBillableMetricParams() *UpdateBillableMetricParams {
	this := UpdateBillableMetricParams{}
	return &this
}

// NewUpdateBillableMetricParamsWithDefaults instantiates a new UpdateBillableMetricParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBillableMetricParamsWithDefaults() *UpdateBillableMetricParams {
	this := UpdateBillableMetricParams{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateBillableMetricParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBillableMetricParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateBillableMetricParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateBillableMetricParams) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateBillableMetricParams) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBillableMetricParams) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateBillableMetricParams) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateBillableMetricParams) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateBillableMetricParams) GetStatus() BillableMetricStatus {
	if o == nil || IsNil(o.Status) {
		var ret BillableMetricStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBillableMetricParams) GetStatusOk() (*BillableMetricStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateBillableMetricParams) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BillableMetricStatus and assigns it to the Status field.
func (o *UpdateBillableMetricParams) SetStatus(v BillableMetricStatus) {
	o.Status = &v
}

func (o UpdateBillableMetricParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBillableMetricParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableUpdateBillableMetricParams struct {
	value *UpdateBillableMetricParams
	isSet bool
}

func (v NullableUpdateBillableMetricParams) Get() *UpdateBillableMetricParams {
	return v.value
}

func (v *NullableUpdateBillableMetricParams) Set(val *UpdateBillableMetricParams) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBillableMetricParams) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBillableMetricParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBillableMetricParams(val *UpdateBillableMetricParams) *NullableUpdateBillableMetricParams {
	return &NullableUpdateBillableMetricParams{value: val, isSet: true}
}

func (v NullableUpdateBillableMetricParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBillableMetricParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
