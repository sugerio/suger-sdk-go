/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplaceMeteringBatchUsageEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceMeteringBatchUsageEvent{}

// AzureMarketplaceMeteringBatchUsageEvent struct for AzureMarketplaceMeteringBatchUsageEvent
type AzureMarketplaceMeteringBatchUsageEvent struct {
	Request []AzureMarketplaceMeteringUsageEvent `json:"request,omitempty"`
}

// NewAzureMarketplaceMeteringBatchUsageEvent instantiates a new AzureMarketplaceMeteringBatchUsageEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceMeteringBatchUsageEvent() *AzureMarketplaceMeteringBatchUsageEvent {
	this := AzureMarketplaceMeteringBatchUsageEvent{}
	return &this
}

// NewAzureMarketplaceMeteringBatchUsageEventWithDefaults instantiates a new AzureMarketplaceMeteringBatchUsageEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceMeteringBatchUsageEventWithDefaults() *AzureMarketplaceMeteringBatchUsageEvent {
	this := AzureMarketplaceMeteringBatchUsageEvent{}
	return &this
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *AzureMarketplaceMeteringBatchUsageEvent) GetRequest() []AzureMarketplaceMeteringUsageEvent {
	if o == nil || IsNil(o.Request) {
		var ret []AzureMarketplaceMeteringUsageEvent
		return ret
	}
	return o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceMeteringBatchUsageEvent) GetRequestOk() ([]AzureMarketplaceMeteringUsageEvent, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *AzureMarketplaceMeteringBatchUsageEvent) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given []AzureMarketplaceMeteringUsageEvent and assigns it to the Request field.
func (o *AzureMarketplaceMeteringBatchUsageEvent) SetRequest(v []AzureMarketplaceMeteringUsageEvent) {
	o.Request = v
}

func (o AzureMarketplaceMeteringBatchUsageEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceMeteringBatchUsageEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceMeteringBatchUsageEvent struct {
	value *AzureMarketplaceMeteringBatchUsageEvent
	isSet bool
}

func (v NullableAzureMarketplaceMeteringBatchUsageEvent) Get() *AzureMarketplaceMeteringBatchUsageEvent {
	return v.value
}

func (v *NullableAzureMarketplaceMeteringBatchUsageEvent) Set(val *AzureMarketplaceMeteringBatchUsageEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceMeteringBatchUsageEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceMeteringBatchUsageEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceMeteringBatchUsageEvent(val *AzureMarketplaceMeteringBatchUsageEvent) *NullableAzureMarketplaceMeteringBatchUsageEvent {
	return &NullableAzureMarketplaceMeteringBatchUsageEvent{value: val, isSet: true}
}

func (v NullableAzureMarketplaceMeteringBatchUsageEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceMeteringBatchUsageEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
