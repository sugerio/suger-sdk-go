/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceMeteringBatchMeterUsageInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceMeteringBatchMeterUsageInput{}

// AwsMarketplaceMeteringBatchMeterUsageInput struct for AwsMarketplaceMeteringBatchMeterUsageInput
type AwsMarketplaceMeteringBatchMeterUsageInput struct {
	// Product code is used to uniquely identify a product in AWS Marketplace. The product code should be the same as the one used during the publishing of a new product.
	ProductCode *string `json:"ProductCode,omitempty"`
	// The set of UsageRecords to submit. BatchMeterUsage accepts up to 25 UsageRecords at a time.
	UsageRecords []AwsMarketplaceMeteringUsageRecord `json:"UsageRecords,omitempty"`
}

// NewAwsMarketplaceMeteringBatchMeterUsageInput instantiates a new AwsMarketplaceMeteringBatchMeterUsageInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceMeteringBatchMeterUsageInput() *AwsMarketplaceMeteringBatchMeterUsageInput {
	this := AwsMarketplaceMeteringBatchMeterUsageInput{}
	return &this
}

// NewAwsMarketplaceMeteringBatchMeterUsageInputWithDefaults instantiates a new AwsMarketplaceMeteringBatchMeterUsageInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceMeteringBatchMeterUsageInputWithDefaults() *AwsMarketplaceMeteringBatchMeterUsageInput {
	this := AwsMarketplaceMeteringBatchMeterUsageInput{}
	return &this
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetUsageRecords returns the UsageRecords field value if set, zero value otherwise.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) GetUsageRecords() []AwsMarketplaceMeteringUsageRecord {
	if o == nil || IsNil(o.UsageRecords) {
		var ret []AwsMarketplaceMeteringUsageRecord
		return ret
	}
	return o.UsageRecords
}

// GetUsageRecordsOk returns a tuple with the UsageRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) GetUsageRecordsOk() ([]AwsMarketplaceMeteringUsageRecord, bool) {
	if o == nil || IsNil(o.UsageRecords) {
		return nil, false
	}
	return o.UsageRecords, true
}

// HasUsageRecords returns a boolean if a field has been set.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) HasUsageRecords() bool {
	if o != nil && !IsNil(o.UsageRecords) {
		return true
	}

	return false
}

// SetUsageRecords gets a reference to the given []AwsMarketplaceMeteringUsageRecord and assigns it to the UsageRecords field.
func (o *AwsMarketplaceMeteringBatchMeterUsageInput) SetUsageRecords(v []AwsMarketplaceMeteringUsageRecord) {
	o.UsageRecords = v
}

func (o AwsMarketplaceMeteringBatchMeterUsageInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceMeteringBatchMeterUsageInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductCode) {
		toSerialize["ProductCode"] = o.ProductCode
	}
	if !IsNil(o.UsageRecords) {
		toSerialize["UsageRecords"] = o.UsageRecords
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceMeteringBatchMeterUsageInput struct {
	value *AwsMarketplaceMeteringBatchMeterUsageInput
	isSet bool
}

func (v NullableAwsMarketplaceMeteringBatchMeterUsageInput) Get() *AwsMarketplaceMeteringBatchMeterUsageInput {
	return v.value
}

func (v *NullableAwsMarketplaceMeteringBatchMeterUsageInput) Set(val *AwsMarketplaceMeteringBatchMeterUsageInput) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceMeteringBatchMeterUsageInput) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceMeteringBatchMeterUsageInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceMeteringBatchMeterUsageInput(val *AwsMarketplaceMeteringBatchMeterUsageInput) *NullableAwsMarketplaceMeteringBatchMeterUsageInput {
	return &NullableAwsMarketplaceMeteringBatchMeterUsageInput{value: val, isSet: true}
}

func (v NullableAwsMarketplaceMeteringBatchMeterUsageInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceMeteringBatchMeterUsageInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
