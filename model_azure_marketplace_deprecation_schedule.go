/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureMarketplaceDeprecationSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceDeprecationSchedule{}

// AzureMarketplaceDeprecationSchedule struct for AzureMarketplaceDeprecationSchedule
type AzureMarketplaceDeprecationSchedule struct {
	Schema      *string                                         `json:"$schema,omitempty"`
	Alternative *AzureMarketplaceDeprecationScheduleAlternative `json:"alternative,omitempty"`
	// format: date-time
	Date *string `json:"date,omitempty"`
	// format: duration
	DateOffset *string `json:"dateOffset,omitempty"`
	Reason     *string `json:"reason,omitempty"`
}

// NewAzureMarketplaceDeprecationSchedule instantiates a new AzureMarketplaceDeprecationSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceDeprecationSchedule() *AzureMarketplaceDeprecationSchedule {
	this := AzureMarketplaceDeprecationSchedule{}
	return &this
}

// NewAzureMarketplaceDeprecationScheduleWithDefaults instantiates a new AzureMarketplaceDeprecationSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceDeprecationScheduleWithDefaults() *AzureMarketplaceDeprecationSchedule {
	this := AzureMarketplaceDeprecationSchedule{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationSchedule) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationSchedule) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationSchedule) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplaceDeprecationSchedule) SetSchema(v string) {
	o.Schema = &v
}

// GetAlternative returns the Alternative field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationSchedule) GetAlternative() AzureMarketplaceDeprecationScheduleAlternative {
	if o == nil || IsNil(o.Alternative) {
		var ret AzureMarketplaceDeprecationScheduleAlternative
		return ret
	}
	return *o.Alternative
}

// GetAlternativeOk returns a tuple with the Alternative field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationSchedule) GetAlternativeOk() (*AzureMarketplaceDeprecationScheduleAlternative, bool) {
	if o == nil || IsNil(o.Alternative) {
		return nil, false
	}
	return o.Alternative, true
}

// HasAlternative returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationSchedule) HasAlternative() bool {
	if o != nil && !IsNil(o.Alternative) {
		return true
	}

	return false
}

// SetAlternative gets a reference to the given AzureMarketplaceDeprecationScheduleAlternative and assigns it to the Alternative field.
func (o *AzureMarketplaceDeprecationSchedule) SetAlternative(v AzureMarketplaceDeprecationScheduleAlternative) {
	o.Alternative = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationSchedule) GetDate() string {
	if o == nil || IsNil(o.Date) {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationSchedule) GetDateOk() (*string, bool) {
	if o == nil || IsNil(o.Date) {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationSchedule) HasDate() bool {
	if o != nil && !IsNil(o.Date) {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *AzureMarketplaceDeprecationSchedule) SetDate(v string) {
	o.Date = &v
}

// GetDateOffset returns the DateOffset field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationSchedule) GetDateOffset() string {
	if o == nil || IsNil(o.DateOffset) {
		var ret string
		return ret
	}
	return *o.DateOffset
}

// GetDateOffsetOk returns a tuple with the DateOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationSchedule) GetDateOffsetOk() (*string, bool) {
	if o == nil || IsNil(o.DateOffset) {
		return nil, false
	}
	return o.DateOffset, true
}

// HasDateOffset returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationSchedule) HasDateOffset() bool {
	if o != nil && !IsNil(o.DateOffset) {
		return true
	}

	return false
}

// SetDateOffset gets a reference to the given string and assigns it to the DateOffset field.
func (o *AzureMarketplaceDeprecationSchedule) SetDateOffset(v string) {
	o.DateOffset = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationSchedule) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationSchedule) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationSchedule) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *AzureMarketplaceDeprecationSchedule) SetReason(v string) {
	o.Reason = &v
}

func (o AzureMarketplaceDeprecationSchedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceDeprecationSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Alternative) {
		toSerialize["alternative"] = o.Alternative
	}
	if !IsNil(o.Date) {
		toSerialize["date"] = o.Date
	}
	if !IsNil(o.DateOffset) {
		toSerialize["dateOffset"] = o.DateOffset
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceDeprecationSchedule struct {
	value *AzureMarketplaceDeprecationSchedule
	isSet bool
}

func (v NullableAzureMarketplaceDeprecationSchedule) Get() *AzureMarketplaceDeprecationSchedule {
	return v.value
}

func (v *NullableAzureMarketplaceDeprecationSchedule) Set(val *AzureMarketplaceDeprecationSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceDeprecationSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceDeprecationSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceDeprecationSchedule(val *AzureMarketplaceDeprecationSchedule) *NullableAzureMarketplaceDeprecationSchedule {
	return &NullableAzureMarketplaceDeprecationSchedule{value: val, isSet: true}
}

func (v NullableAzureMarketplaceDeprecationSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceDeprecationSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
