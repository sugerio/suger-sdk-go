/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCppoPriceTermDetailedView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoPriceTermDetailedView{}

// AwsMarketplaceCppoPriceTermDetailedView struct for AwsMarketplaceCppoPriceTermDetailedView
type AwsMarketplaceCppoPriceTermDetailedView struct {
	// For Usage metering dimensions
	AdditionalConsumptionUnitColumnNames []string `json:"additionalConsumptionUnitColumnNames,omitempty"`
	// For Usage metering dimensions
	AdditionalConsumptionUnitEntries []AwsMarketplaceCppoPriceTermEntry `json:"additionalConsumptionUnitEntries,omitempty"`
	// For Commit dimensions
	ConsumptionUnitColumnNames []string `json:"consumptionUnitColumnNames,omitempty"`
	// For Commit dimensions
	ConsumptionUnitEntries []AwsMarketplaceCppoPriceTermEntry `json:"consumptionUnitEntries,omitempty"`
}

// NewAwsMarketplaceCppoPriceTermDetailedView instantiates a new AwsMarketplaceCppoPriceTermDetailedView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoPriceTermDetailedView() *AwsMarketplaceCppoPriceTermDetailedView {
	this := AwsMarketplaceCppoPriceTermDetailedView{}
	return &this
}

// NewAwsMarketplaceCppoPriceTermDetailedViewWithDefaults instantiates a new AwsMarketplaceCppoPriceTermDetailedView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoPriceTermDetailedViewWithDefaults() *AwsMarketplaceCppoPriceTermDetailedView {
	this := AwsMarketplaceCppoPriceTermDetailedView{}
	return &this
}

// GetAdditionalConsumptionUnitColumnNames returns the AdditionalConsumptionUnitColumnNames field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetAdditionalConsumptionUnitColumnNames() []string {
	if o == nil || IsNil(o.AdditionalConsumptionUnitColumnNames) {
		var ret []string
		return ret
	}
	return o.AdditionalConsumptionUnitColumnNames
}

// GetAdditionalConsumptionUnitColumnNamesOk returns a tuple with the AdditionalConsumptionUnitColumnNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetAdditionalConsumptionUnitColumnNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalConsumptionUnitColumnNames) {
		return nil, false
	}
	return o.AdditionalConsumptionUnitColumnNames, true
}

// HasAdditionalConsumptionUnitColumnNames returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) HasAdditionalConsumptionUnitColumnNames() bool {
	if o != nil && !IsNil(o.AdditionalConsumptionUnitColumnNames) {
		return true
	}

	return false
}

// SetAdditionalConsumptionUnitColumnNames gets a reference to the given []string and assigns it to the AdditionalConsumptionUnitColumnNames field.
func (o *AwsMarketplaceCppoPriceTermDetailedView) SetAdditionalConsumptionUnitColumnNames(v []string) {
	o.AdditionalConsumptionUnitColumnNames = v
}

// GetAdditionalConsumptionUnitEntries returns the AdditionalConsumptionUnitEntries field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetAdditionalConsumptionUnitEntries() []AwsMarketplaceCppoPriceTermEntry {
	if o == nil || IsNil(o.AdditionalConsumptionUnitEntries) {
		var ret []AwsMarketplaceCppoPriceTermEntry
		return ret
	}
	return o.AdditionalConsumptionUnitEntries
}

// GetAdditionalConsumptionUnitEntriesOk returns a tuple with the AdditionalConsumptionUnitEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetAdditionalConsumptionUnitEntriesOk() ([]AwsMarketplaceCppoPriceTermEntry, bool) {
	if o == nil || IsNil(o.AdditionalConsumptionUnitEntries) {
		return nil, false
	}
	return o.AdditionalConsumptionUnitEntries, true
}

// HasAdditionalConsumptionUnitEntries returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) HasAdditionalConsumptionUnitEntries() bool {
	if o != nil && !IsNil(o.AdditionalConsumptionUnitEntries) {
		return true
	}

	return false
}

// SetAdditionalConsumptionUnitEntries gets a reference to the given []AwsMarketplaceCppoPriceTermEntry and assigns it to the AdditionalConsumptionUnitEntries field.
func (o *AwsMarketplaceCppoPriceTermDetailedView) SetAdditionalConsumptionUnitEntries(v []AwsMarketplaceCppoPriceTermEntry) {
	o.AdditionalConsumptionUnitEntries = v
}

// GetConsumptionUnitColumnNames returns the ConsumptionUnitColumnNames field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetConsumptionUnitColumnNames() []string {
	if o == nil || IsNil(o.ConsumptionUnitColumnNames) {
		var ret []string
		return ret
	}
	return o.ConsumptionUnitColumnNames
}

// GetConsumptionUnitColumnNamesOk returns a tuple with the ConsumptionUnitColumnNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetConsumptionUnitColumnNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ConsumptionUnitColumnNames) {
		return nil, false
	}
	return o.ConsumptionUnitColumnNames, true
}

// HasConsumptionUnitColumnNames returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) HasConsumptionUnitColumnNames() bool {
	if o != nil && !IsNil(o.ConsumptionUnitColumnNames) {
		return true
	}

	return false
}

// SetConsumptionUnitColumnNames gets a reference to the given []string and assigns it to the ConsumptionUnitColumnNames field.
func (o *AwsMarketplaceCppoPriceTermDetailedView) SetConsumptionUnitColumnNames(v []string) {
	o.ConsumptionUnitColumnNames = v
}

// GetConsumptionUnitEntries returns the ConsumptionUnitEntries field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetConsumptionUnitEntries() []AwsMarketplaceCppoPriceTermEntry {
	if o == nil || IsNil(o.ConsumptionUnitEntries) {
		var ret []AwsMarketplaceCppoPriceTermEntry
		return ret
	}
	return o.ConsumptionUnitEntries
}

// GetConsumptionUnitEntriesOk returns a tuple with the ConsumptionUnitEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) GetConsumptionUnitEntriesOk() ([]AwsMarketplaceCppoPriceTermEntry, bool) {
	if o == nil || IsNil(o.ConsumptionUnitEntries) {
		return nil, false
	}
	return o.ConsumptionUnitEntries, true
}

// HasConsumptionUnitEntries returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPriceTermDetailedView) HasConsumptionUnitEntries() bool {
	if o != nil && !IsNil(o.ConsumptionUnitEntries) {
		return true
	}

	return false
}

// SetConsumptionUnitEntries gets a reference to the given []AwsMarketplaceCppoPriceTermEntry and assigns it to the ConsumptionUnitEntries field.
func (o *AwsMarketplaceCppoPriceTermDetailedView) SetConsumptionUnitEntries(v []AwsMarketplaceCppoPriceTermEntry) {
	o.ConsumptionUnitEntries = v
}

func (o AwsMarketplaceCppoPriceTermDetailedView) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoPriceTermDetailedView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalConsumptionUnitColumnNames) {
		toSerialize["additionalConsumptionUnitColumnNames"] = o.AdditionalConsumptionUnitColumnNames
	}
	if !IsNil(o.AdditionalConsumptionUnitEntries) {
		toSerialize["additionalConsumptionUnitEntries"] = o.AdditionalConsumptionUnitEntries
	}
	if !IsNil(o.ConsumptionUnitColumnNames) {
		toSerialize["consumptionUnitColumnNames"] = o.ConsumptionUnitColumnNames
	}
	if !IsNil(o.ConsumptionUnitEntries) {
		toSerialize["consumptionUnitEntries"] = o.ConsumptionUnitEntries
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoPriceTermDetailedView struct {
	value *AwsMarketplaceCppoPriceTermDetailedView
	isSet bool
}

func (v NullableAwsMarketplaceCppoPriceTermDetailedView) Get() *AwsMarketplaceCppoPriceTermDetailedView {
	return v.value
}

func (v *NullableAwsMarketplaceCppoPriceTermDetailedView) Set(val *AwsMarketplaceCppoPriceTermDetailedView) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoPriceTermDetailedView) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoPriceTermDetailedView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoPriceTermDetailedView(val *AwsMarketplaceCppoPriceTermDetailedView) *NullableAwsMarketplaceCppoPriceTermDetailedView {
	return &NullableAwsMarketplaceCppoPriceTermDetailedView{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoPriceTermDetailedView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoPriceTermDetailedView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
