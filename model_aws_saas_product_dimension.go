/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsSaasProductDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsSaasProductDimension{}

// AwsSaasProductDimension struct for AwsSaasProductDimension
type AwsSaasProductDimension struct {
	Description *string  `json:"Description,omitempty"`
	Key         *string  `json:"Key,omitempty"`
	Name        *string  `json:"Name,omitempty"`
	Types       []string `json:"Types,omitempty"`
	Unit        *string  `json:"Unit,omitempty"`
}

// NewAwsSaasProductDimension instantiates a new AwsSaasProductDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsSaasProductDimension() *AwsSaasProductDimension {
	this := AwsSaasProductDimension{}
	return &this
}

// NewAwsSaasProductDimensionWithDefaults instantiates a new AwsSaasProductDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsSaasProductDimensionWithDefaults() *AwsSaasProductDimension {
	this := AwsSaasProductDimension{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsSaasProductDimension) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProductDimension) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsSaasProductDimension) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsSaasProductDimension) SetDescription(v string) {
	o.Description = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *AwsSaasProductDimension) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProductDimension) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *AwsSaasProductDimension) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *AwsSaasProductDimension) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AwsSaasProductDimension) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProductDimension) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AwsSaasProductDimension) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AwsSaasProductDimension) SetName(v string) {
	o.Name = &v
}

// GetTypes returns the Types field value if set, zero value otherwise.
func (o *AwsSaasProductDimension) GetTypes() []string {
	if o == nil || IsNil(o.Types) {
		var ret []string
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProductDimension) GetTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *AwsSaasProductDimension) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []string and assigns it to the Types field.
func (o *AwsSaasProductDimension) SetTypes(v []string) {
	o.Types = v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *AwsSaasProductDimension) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsSaasProductDimension) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *AwsSaasProductDimension) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *AwsSaasProductDimension) SetUnit(v string) {
	o.Unit = &v
}

func (o AwsSaasProductDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsSaasProductDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Key) {
		toSerialize["Key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.Types) {
		toSerialize["Types"] = o.Types
	}
	if !IsNil(o.Unit) {
		toSerialize["Unit"] = o.Unit
	}
	return toSerialize, nil
}

type NullableAwsSaasProductDimension struct {
	value *AwsSaasProductDimension
	isSet bool
}

func (v NullableAwsSaasProductDimension) Get() *AwsSaasProductDimension {
	return v.value
}

func (v *NullableAwsSaasProductDimension) Set(val *AwsSaasProductDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsSaasProductDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsSaasProductDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsSaasProductDimension(val *AwsSaasProductDimension) *NullableAwsSaasProductDimension {
	return &NullableAwsSaasProductDimension{value: val, isSet: true}
}

func (v NullableAwsSaasProductDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsSaasProductDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
