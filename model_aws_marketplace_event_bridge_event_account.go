/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsMarketplaceEventBridgeEventAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceEventBridgeEventAccount{}

// AwsMarketplaceEventBridgeEventAccount struct for AwsMarketplaceEventBridgeEventAccount
type AwsMarketplaceEventBridgeEventAccount struct {
	AccountId *string `json:"accountId,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewAwsMarketplaceEventBridgeEventAccount instantiates a new AwsMarketplaceEventBridgeEventAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceEventBridgeEventAccount() *AwsMarketplaceEventBridgeEventAccount {
	this := AwsMarketplaceEventBridgeEventAccount{}
	return &this
}

// NewAwsMarketplaceEventBridgeEventAccountWithDefaults instantiates a new AwsMarketplaceEventBridgeEventAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceEventBridgeEventAccountWithDefaults() *AwsMarketplaceEventBridgeEventAccount {
	this := AwsMarketplaceEventBridgeEventAccount{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AwsMarketplaceEventBridgeEventAccount) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceEventBridgeEventAccount) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AwsMarketplaceEventBridgeEventAccount) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AwsMarketplaceEventBridgeEventAccount) SetAccountId(v string) {
	o.AccountId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AwsMarketplaceEventBridgeEventAccount) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceEventBridgeEventAccount) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AwsMarketplaceEventBridgeEventAccount) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AwsMarketplaceEventBridgeEventAccount) SetName(v string) {
	o.Name = &v
}

func (o AwsMarketplaceEventBridgeEventAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceEventBridgeEventAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceEventBridgeEventAccount struct {
	value *AwsMarketplaceEventBridgeEventAccount
	isSet bool
}

func (v NullableAwsMarketplaceEventBridgeEventAccount) Get() *AwsMarketplaceEventBridgeEventAccount {
	return v.value
}

func (v *NullableAwsMarketplaceEventBridgeEventAccount) Set(val *AwsMarketplaceEventBridgeEventAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceEventBridgeEventAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceEventBridgeEventAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceEventBridgeEventAccount(val *AwsMarketplaceEventBridgeEventAccount) *NullableAwsMarketplaceEventBridgeEventAccount {
	return &NullableAwsMarketplaceEventBridgeEventAccount{value: val, isSet: true}
}

func (v NullableAwsMarketplaceEventBridgeEventAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceEventBridgeEventAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


