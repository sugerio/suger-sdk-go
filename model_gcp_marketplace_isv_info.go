/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceIsvInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceIsvInfo{}

// GcpMarketplaceIsvInfo struct for GcpMarketplaceIsvInfo
type GcpMarketplaceIsvInfo struct {
	ContactEmail                     *string `json:"contactEmail,omitempty"`
	ContactName                      *string `json:"contactName,omitempty"`
	PartnerAdvantageAccountLegalName *string `json:"partnerAdvantageAccountLegalName,omitempty"`
	PartnerAdvantageId               *string `json:"partnerAdvantageId,omitempty"`
}

// NewGcpMarketplaceIsvInfo instantiates a new GcpMarketplaceIsvInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceIsvInfo() *GcpMarketplaceIsvInfo {
	this := GcpMarketplaceIsvInfo{}
	return &this
}

// NewGcpMarketplaceIsvInfoWithDefaults instantiates a new GcpMarketplaceIsvInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceIsvInfoWithDefaults() *GcpMarketplaceIsvInfo {
	this := GcpMarketplaceIsvInfo{}
	return &this
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *GcpMarketplaceIsvInfo) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceIsvInfo) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *GcpMarketplaceIsvInfo) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *GcpMarketplaceIsvInfo) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetContactName returns the ContactName field value if set, zero value otherwise.
func (o *GcpMarketplaceIsvInfo) GetContactName() string {
	if o == nil || IsNil(o.ContactName) {
		var ret string
		return ret
	}
	return *o.ContactName
}

// GetContactNameOk returns a tuple with the ContactName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceIsvInfo) GetContactNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactName) {
		return nil, false
	}
	return o.ContactName, true
}

// HasContactName returns a boolean if a field has been set.
func (o *GcpMarketplaceIsvInfo) HasContactName() bool {
	if o != nil && !IsNil(o.ContactName) {
		return true
	}

	return false
}

// SetContactName gets a reference to the given string and assigns it to the ContactName field.
func (o *GcpMarketplaceIsvInfo) SetContactName(v string) {
	o.ContactName = &v
}

// GetPartnerAdvantageAccountLegalName returns the PartnerAdvantageAccountLegalName field value if set, zero value otherwise.
func (o *GcpMarketplaceIsvInfo) GetPartnerAdvantageAccountLegalName() string {
	if o == nil || IsNil(o.PartnerAdvantageAccountLegalName) {
		var ret string
		return ret
	}
	return *o.PartnerAdvantageAccountLegalName
}

// GetPartnerAdvantageAccountLegalNameOk returns a tuple with the PartnerAdvantageAccountLegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceIsvInfo) GetPartnerAdvantageAccountLegalNameOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerAdvantageAccountLegalName) {
		return nil, false
	}
	return o.PartnerAdvantageAccountLegalName, true
}

// HasPartnerAdvantageAccountLegalName returns a boolean if a field has been set.
func (o *GcpMarketplaceIsvInfo) HasPartnerAdvantageAccountLegalName() bool {
	if o != nil && !IsNil(o.PartnerAdvantageAccountLegalName) {
		return true
	}

	return false
}

// SetPartnerAdvantageAccountLegalName gets a reference to the given string and assigns it to the PartnerAdvantageAccountLegalName field.
func (o *GcpMarketplaceIsvInfo) SetPartnerAdvantageAccountLegalName(v string) {
	o.PartnerAdvantageAccountLegalName = &v
}

// GetPartnerAdvantageId returns the PartnerAdvantageId field value if set, zero value otherwise.
func (o *GcpMarketplaceIsvInfo) GetPartnerAdvantageId() string {
	if o == nil || IsNil(o.PartnerAdvantageId) {
		var ret string
		return ret
	}
	return *o.PartnerAdvantageId
}

// GetPartnerAdvantageIdOk returns a tuple with the PartnerAdvantageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceIsvInfo) GetPartnerAdvantageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerAdvantageId) {
		return nil, false
	}
	return o.PartnerAdvantageId, true
}

// HasPartnerAdvantageId returns a boolean if a field has been set.
func (o *GcpMarketplaceIsvInfo) HasPartnerAdvantageId() bool {
	if o != nil && !IsNil(o.PartnerAdvantageId) {
		return true
	}

	return false
}

// SetPartnerAdvantageId gets a reference to the given string and assigns it to the PartnerAdvantageId field.
func (o *GcpMarketplaceIsvInfo) SetPartnerAdvantageId(v string) {
	o.PartnerAdvantageId = &v
}

func (o GcpMarketplaceIsvInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceIsvInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactEmail) {
		toSerialize["contactEmail"] = o.ContactEmail
	}
	if !IsNil(o.ContactName) {
		toSerialize["contactName"] = o.ContactName
	}
	if !IsNil(o.PartnerAdvantageAccountLegalName) {
		toSerialize["partnerAdvantageAccountLegalName"] = o.PartnerAdvantageAccountLegalName
	}
	if !IsNil(o.PartnerAdvantageId) {
		toSerialize["partnerAdvantageId"] = o.PartnerAdvantageId
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceIsvInfo struct {
	value *GcpMarketplaceIsvInfo
	isSet bool
}

func (v NullableGcpMarketplaceIsvInfo) Get() *GcpMarketplaceIsvInfo {
	return v.value
}

func (v *NullableGcpMarketplaceIsvInfo) Set(val *GcpMarketplaceIsvInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceIsvInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceIsvInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceIsvInfo(val *GcpMarketplaceIsvInfo) *NullableGcpMarketplaceIsvInfo {
	return &NullableGcpMarketplaceIsvInfo{value: val, isSet: true}
}

func (v NullableGcpMarketplaceIsvInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceIsvInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
