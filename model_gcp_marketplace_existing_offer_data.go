/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceExistingOfferData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceExistingOfferData{}

// GcpMarketplaceExistingOfferData struct for GcpMarketplaceExistingOfferData
type GcpMarketplaceExistingOfferData struct {
	Entitlement            *GcpMarketplaceEntitlement                `json:"entitlement,omitempty"`
	ExistingPriceModelType *GcpMarketplacePrivateOfferPriceModelType `json:"existingPriceModelType,omitempty"`
	HasEntitlementChanged  *bool                                     `json:"hasEntitlementChanged,omitempty"`
	PrivateOffer           *GcpMarketplaceExistingPrivateOffer       `json:"privateOffer,omitempty"`
	StandardOffer          map[string]interface{}                    `json:"standardOffer,omitempty"`
}

// NewGcpMarketplaceExistingOfferData instantiates a new GcpMarketplaceExistingOfferData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceExistingOfferData() *GcpMarketplaceExistingOfferData {
	this := GcpMarketplaceExistingOfferData{}
	return &this
}

// NewGcpMarketplaceExistingOfferDataWithDefaults instantiates a new GcpMarketplaceExistingOfferData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceExistingOfferDataWithDefaults() *GcpMarketplaceExistingOfferData {
	this := GcpMarketplaceExistingOfferData{}
	return &this
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingOfferData) GetEntitlement() GcpMarketplaceEntitlement {
	if o == nil || IsNil(o.Entitlement) {
		var ret GcpMarketplaceEntitlement
		return ret
	}
	return *o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingOfferData) GetEntitlementOk() (*GcpMarketplaceEntitlement, bool) {
	if o == nil || IsNil(o.Entitlement) {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingOfferData) HasEntitlement() bool {
	if o != nil && !IsNil(o.Entitlement) {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given GcpMarketplaceEntitlement and assigns it to the Entitlement field.
func (o *GcpMarketplaceExistingOfferData) SetEntitlement(v GcpMarketplaceEntitlement) {
	o.Entitlement = &v
}

// GetExistingPriceModelType returns the ExistingPriceModelType field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingOfferData) GetExistingPriceModelType() GcpMarketplacePrivateOfferPriceModelType {
	if o == nil || IsNil(o.ExistingPriceModelType) {
		var ret GcpMarketplacePrivateOfferPriceModelType
		return ret
	}
	return *o.ExistingPriceModelType
}

// GetExistingPriceModelTypeOk returns a tuple with the ExistingPriceModelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingOfferData) GetExistingPriceModelTypeOk() (*GcpMarketplacePrivateOfferPriceModelType, bool) {
	if o == nil || IsNil(o.ExistingPriceModelType) {
		return nil, false
	}
	return o.ExistingPriceModelType, true
}

// HasExistingPriceModelType returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingOfferData) HasExistingPriceModelType() bool {
	if o != nil && !IsNil(o.ExistingPriceModelType) {
		return true
	}

	return false
}

// SetExistingPriceModelType gets a reference to the given GcpMarketplacePrivateOfferPriceModelType and assigns it to the ExistingPriceModelType field.
func (o *GcpMarketplaceExistingOfferData) SetExistingPriceModelType(v GcpMarketplacePrivateOfferPriceModelType) {
	o.ExistingPriceModelType = &v
}

// GetHasEntitlementChanged returns the HasEntitlementChanged field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingOfferData) GetHasEntitlementChanged() bool {
	if o == nil || IsNil(o.HasEntitlementChanged) {
		var ret bool
		return ret
	}
	return *o.HasEntitlementChanged
}

// GetHasEntitlementChangedOk returns a tuple with the HasEntitlementChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingOfferData) GetHasEntitlementChangedOk() (*bool, bool) {
	if o == nil || IsNil(o.HasEntitlementChanged) {
		return nil, false
	}
	return o.HasEntitlementChanged, true
}

// HasHasEntitlementChanged returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingOfferData) HasHasEntitlementChanged() bool {
	if o != nil && !IsNil(o.HasEntitlementChanged) {
		return true
	}

	return false
}

// SetHasEntitlementChanged gets a reference to the given bool and assigns it to the HasEntitlementChanged field.
func (o *GcpMarketplaceExistingOfferData) SetHasEntitlementChanged(v bool) {
	o.HasEntitlementChanged = &v
}

// GetPrivateOffer returns the PrivateOffer field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingOfferData) GetPrivateOffer() GcpMarketplaceExistingPrivateOffer {
	if o == nil || IsNil(o.PrivateOffer) {
		var ret GcpMarketplaceExistingPrivateOffer
		return ret
	}
	return *o.PrivateOffer
}

// GetPrivateOfferOk returns a tuple with the PrivateOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingOfferData) GetPrivateOfferOk() (*GcpMarketplaceExistingPrivateOffer, bool) {
	if o == nil || IsNil(o.PrivateOffer) {
		return nil, false
	}
	return o.PrivateOffer, true
}

// HasPrivateOffer returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingOfferData) HasPrivateOffer() bool {
	if o != nil && !IsNil(o.PrivateOffer) {
		return true
	}

	return false
}

// SetPrivateOffer gets a reference to the given GcpMarketplaceExistingPrivateOffer and assigns it to the PrivateOffer field.
func (o *GcpMarketplaceExistingOfferData) SetPrivateOffer(v GcpMarketplaceExistingPrivateOffer) {
	o.PrivateOffer = &v
}

// GetStandardOffer returns the StandardOffer field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingOfferData) GetStandardOffer() map[string]interface{} {
	if o == nil || IsNil(o.StandardOffer) {
		var ret map[string]interface{}
		return ret
	}
	return o.StandardOffer
}

// GetStandardOfferOk returns a tuple with the StandardOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingOfferData) GetStandardOfferOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.StandardOffer) {
		return map[string]interface{}{}, false
	}
	return o.StandardOffer, true
}

// HasStandardOffer returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingOfferData) HasStandardOffer() bool {
	if o != nil && !IsNil(o.StandardOffer) {
		return true
	}

	return false
}

// SetStandardOffer gets a reference to the given map[string]interface{} and assigns it to the StandardOffer field.
func (o *GcpMarketplaceExistingOfferData) SetStandardOffer(v map[string]interface{}) {
	o.StandardOffer = v
}

func (o GcpMarketplaceExistingOfferData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceExistingOfferData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Entitlement) {
		toSerialize["entitlement"] = o.Entitlement
	}
	if !IsNil(o.ExistingPriceModelType) {
		toSerialize["existingPriceModelType"] = o.ExistingPriceModelType
	}
	if !IsNil(o.HasEntitlementChanged) {
		toSerialize["hasEntitlementChanged"] = o.HasEntitlementChanged
	}
	if !IsNil(o.PrivateOffer) {
		toSerialize["privateOffer"] = o.PrivateOffer
	}
	if !IsNil(o.StandardOffer) {
		toSerialize["standardOffer"] = o.StandardOffer
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceExistingOfferData struct {
	value *GcpMarketplaceExistingOfferData
	isSet bool
}

func (v NullableGcpMarketplaceExistingOfferData) Get() *GcpMarketplaceExistingOfferData {
	return v.value
}

func (v *NullableGcpMarketplaceExistingOfferData) Set(val *GcpMarketplaceExistingOfferData) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceExistingOfferData) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceExistingOfferData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceExistingOfferData(val *GcpMarketplaceExistingOfferData) *NullableGcpMarketplaceExistingOfferData {
	return &NullableGcpMarketplaceExistingOfferData{value: val, isSet: true}
}

func (v NullableGcpMarketplaceExistingOfferData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceExistingOfferData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
