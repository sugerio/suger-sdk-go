/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the StripePaymentIntent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripePaymentIntent{}

// StripePaymentIntent struct for StripePaymentIntent
type StripePaymentIntent struct {
	// Unique identifier for the object.
	Id *string `json:"id,omitempty"`
	// The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.
	LastPaymentError *StripeError `json:"last_payment_error,omitempty"`
	// Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
	Livemode *bool `json:"livemode,omitempty"`
	// Status of this PaymentIntent. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).
	Status *StripePaymentIntentStatus `json:"status,omitempty"`
}

// NewStripePaymentIntent instantiates a new StripePaymentIntent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripePaymentIntent() *StripePaymentIntent {
	this := StripePaymentIntent{}
	return &this
}

// NewStripePaymentIntentWithDefaults instantiates a new StripePaymentIntent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripePaymentIntentWithDefaults() *StripePaymentIntent {
	this := StripePaymentIntent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StripePaymentIntent) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentIntent) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StripePaymentIntent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StripePaymentIntent) SetId(v string) {
	o.Id = &v
}

// GetLastPaymentError returns the LastPaymentError field value if set, zero value otherwise.
func (o *StripePaymentIntent) GetLastPaymentError() StripeError {
	if o == nil || IsNil(o.LastPaymentError) {
		var ret StripeError
		return ret
	}
	return *o.LastPaymentError
}

// GetLastPaymentErrorOk returns a tuple with the LastPaymentError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentIntent) GetLastPaymentErrorOk() (*StripeError, bool) {
	if o == nil || IsNil(o.LastPaymentError) {
		return nil, false
	}
	return o.LastPaymentError, true
}

// HasLastPaymentError returns a boolean if a field has been set.
func (o *StripePaymentIntent) HasLastPaymentError() bool {
	if o != nil && !IsNil(o.LastPaymentError) {
		return true
	}

	return false
}

// SetLastPaymentError gets a reference to the given StripeError and assigns it to the LastPaymentError field.
func (o *StripePaymentIntent) SetLastPaymentError(v StripeError) {
	o.LastPaymentError = &v
}

// GetLivemode returns the Livemode field value if set, zero value otherwise.
func (o *StripePaymentIntent) GetLivemode() bool {
	if o == nil || IsNil(o.Livemode) {
		var ret bool
		return ret
	}
	return *o.Livemode
}

// GetLivemodeOk returns a tuple with the Livemode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentIntent) GetLivemodeOk() (*bool, bool) {
	if o == nil || IsNil(o.Livemode) {
		return nil, false
	}
	return o.Livemode, true
}

// HasLivemode returns a boolean if a field has been set.
func (o *StripePaymentIntent) HasLivemode() bool {
	if o != nil && !IsNil(o.Livemode) {
		return true
	}

	return false
}

// SetLivemode gets a reference to the given bool and assigns it to the Livemode field.
func (o *StripePaymentIntent) SetLivemode(v bool) {
	o.Livemode = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StripePaymentIntent) GetStatus() StripePaymentIntentStatus {
	if o == nil || IsNil(o.Status) {
		var ret StripePaymentIntentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentIntent) GetStatusOk() (*StripePaymentIntentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StripePaymentIntent) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StripePaymentIntentStatus and assigns it to the Status field.
func (o *StripePaymentIntent) SetStatus(v StripePaymentIntentStatus) {
	o.Status = &v
}

func (o StripePaymentIntent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripePaymentIntent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastPaymentError) {
		toSerialize["last_payment_error"] = o.LastPaymentError
	}
	if !IsNil(o.Livemode) {
		toSerialize["livemode"] = o.Livemode
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableStripePaymentIntent struct {
	value *StripePaymentIntent
	isSet bool
}

func (v NullableStripePaymentIntent) Get() *StripePaymentIntent {
	return v.value
}

func (v *NullableStripePaymentIntent) Set(val *StripePaymentIntent) {
	v.value = val
	v.isSet = true
}

func (v NullableStripePaymentIntent) IsSet() bool {
	return v.isSet
}

func (v *NullableStripePaymentIntent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripePaymentIntent(val *StripePaymentIntent) *NullableStripePaymentIntent {
	return &NullableStripePaymentIntent{value: val, isSet: true}
}

func (v NullableStripePaymentIntent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripePaymentIntent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
