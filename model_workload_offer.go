/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the WorkloadOffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadOffer{}

// WorkloadOffer struct for WorkloadOffer
type WorkloadOffer struct {
	BuyerID      *string    `json:"buyerID,omitempty"`
	ContactIds   []string   `json:"contactIds,omitempty"`
	CreatedBy    *string    `json:"createdBy,omitempty"`
	CreationTime *time.Time `json:"creationTime,omitempty"`
	// nullable
	EndTime *time.Time `json:"endTime,omitempty"`
	// nullable
	ExpireTime     *time.Time        `json:"expireTime,omitempty"`
	ExternalID     *string           `json:"externalID,omitempty"`
	Id             *string           `json:"id,omitempty"`
	Info           *OfferInfo        `json:"info,omitempty"`
	LastUpdateTime *time.Time        `json:"lastUpdateTime,omitempty"`
	LastUpdatedBy  *string           `json:"lastUpdatedBy,omitempty"`
	MetaInfo       *WorkloadMetaInfo `json:"metaInfo,omitempty"`
	Name           *string           `json:"name,omitempty"`
	OfferType      *OfferType        `json:"offerType,omitempty"`
	OrganizationID *string           `json:"organizationID,omitempty"`
	Partner        *Partner          `json:"partner,omitempty"`
	ProductID      *string           `json:"productID,omitempty"`
	Service        *PartnerService   `json:"service,omitempty"`
	Status         *OfferStatus      `json:"status,omitempty"`
}

// NewWorkloadOffer instantiates a new WorkloadOffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadOffer() *WorkloadOffer {
	this := WorkloadOffer{}
	return &this
}

// NewWorkloadOfferWithDefaults instantiates a new WorkloadOffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadOfferWithDefaults() *WorkloadOffer {
	this := WorkloadOffer{}
	return &this
}

// GetBuyerID returns the BuyerID field value if set, zero value otherwise.
func (o *WorkloadOffer) GetBuyerID() string {
	if o == nil || IsNil(o.BuyerID) {
		var ret string
		return ret
	}
	return *o.BuyerID
}

// GetBuyerIDOk returns a tuple with the BuyerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetBuyerIDOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerID) {
		return nil, false
	}
	return o.BuyerID, true
}

// HasBuyerID returns a boolean if a field has been set.
func (o *WorkloadOffer) HasBuyerID() bool {
	if o != nil && !IsNil(o.BuyerID) {
		return true
	}

	return false
}

// SetBuyerID gets a reference to the given string and assigns it to the BuyerID field.
func (o *WorkloadOffer) SetBuyerID(v string) {
	o.BuyerID = &v
}

// GetContactIds returns the ContactIds field value if set, zero value otherwise.
func (o *WorkloadOffer) GetContactIds() []string {
	if o == nil || IsNil(o.ContactIds) {
		var ret []string
		return ret
	}
	return o.ContactIds
}

// GetContactIdsOk returns a tuple with the ContactIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetContactIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ContactIds) {
		return nil, false
	}
	return o.ContactIds, true
}

// HasContactIds returns a boolean if a field has been set.
func (o *WorkloadOffer) HasContactIds() bool {
	if o != nil && !IsNil(o.ContactIds) {
		return true
	}

	return false
}

// SetContactIds gets a reference to the given []string and assigns it to the ContactIds field.
func (o *WorkloadOffer) SetContactIds(v []string) {
	o.ContactIds = v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkloadOffer) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkloadOffer) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *WorkloadOffer) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *WorkloadOffer) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *WorkloadOffer) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *WorkloadOffer) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *WorkloadOffer) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *WorkloadOffer) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *WorkloadOffer) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *WorkloadOffer) GetExpireTime() time.Time {
	if o == nil || IsNil(o.ExpireTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetExpireTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *WorkloadOffer) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given time.Time and assigns it to the ExpireTime field.
func (o *WorkloadOffer) SetExpireTime(v time.Time) {
	o.ExpireTime = &v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *WorkloadOffer) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *WorkloadOffer) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *WorkloadOffer) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkloadOffer) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkloadOffer) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkloadOffer) SetId(v string) {
	o.Id = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkloadOffer) GetInfo() OfferInfo {
	if o == nil || IsNil(o.Info) {
		var ret OfferInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetInfoOk() (*OfferInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkloadOffer) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given OfferInfo and assigns it to the Info field.
func (o *WorkloadOffer) SetInfo(v OfferInfo) {
	o.Info = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *WorkloadOffer) GetLastUpdateTime() time.Time {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetLastUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *WorkloadOffer) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given time.Time and assigns it to the LastUpdateTime field.
func (o *WorkloadOffer) SetLastUpdateTime(v time.Time) {
	o.LastUpdateTime = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *WorkloadOffer) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *WorkloadOffer) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *WorkloadOffer) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetMetaInfo returns the MetaInfo field value if set, zero value otherwise.
func (o *WorkloadOffer) GetMetaInfo() WorkloadMetaInfo {
	if o == nil || IsNil(o.MetaInfo) {
		var ret WorkloadMetaInfo
		return ret
	}
	return *o.MetaInfo
}

// GetMetaInfoOk returns a tuple with the MetaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetMetaInfoOk() (*WorkloadMetaInfo, bool) {
	if o == nil || IsNil(o.MetaInfo) {
		return nil, false
	}
	return o.MetaInfo, true
}

// HasMetaInfo returns a boolean if a field has been set.
func (o *WorkloadOffer) HasMetaInfo() bool {
	if o != nil && !IsNil(o.MetaInfo) {
		return true
	}

	return false
}

// SetMetaInfo gets a reference to the given WorkloadMetaInfo and assigns it to the MetaInfo field.
func (o *WorkloadOffer) SetMetaInfo(v WorkloadMetaInfo) {
	o.MetaInfo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkloadOffer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkloadOffer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkloadOffer) SetName(v string) {
	o.Name = &v
}

// GetOfferType returns the OfferType field value if set, zero value otherwise.
func (o *WorkloadOffer) GetOfferType() OfferType {
	if o == nil || IsNil(o.OfferType) {
		var ret OfferType
		return ret
	}
	return *o.OfferType
}

// GetOfferTypeOk returns a tuple with the OfferType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetOfferTypeOk() (*OfferType, bool) {
	if o == nil || IsNil(o.OfferType) {
		return nil, false
	}
	return o.OfferType, true
}

// HasOfferType returns a boolean if a field has been set.
func (o *WorkloadOffer) HasOfferType() bool {
	if o != nil && !IsNil(o.OfferType) {
		return true
	}

	return false
}

// SetOfferType gets a reference to the given OfferType and assigns it to the OfferType field.
func (o *WorkloadOffer) SetOfferType(v OfferType) {
	o.OfferType = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *WorkloadOffer) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *WorkloadOffer) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *WorkloadOffer) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *WorkloadOffer) GetPartner() Partner {
	if o == nil || IsNil(o.Partner) {
		var ret Partner
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetPartnerOk() (*Partner, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *WorkloadOffer) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given Partner and assigns it to the Partner field.
func (o *WorkloadOffer) SetPartner(v Partner) {
	o.Partner = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *WorkloadOffer) GetProductID() string {
	if o == nil || IsNil(o.ProductID) {
		var ret string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetProductIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *WorkloadOffer) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given string and assigns it to the ProductID field.
func (o *WorkloadOffer) SetProductID(v string) {
	o.ProductID = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *WorkloadOffer) GetService() PartnerService {
	if o == nil || IsNil(o.Service) {
		var ret PartnerService
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetServiceOk() (*PartnerService, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *WorkloadOffer) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given PartnerService and assigns it to the Service field.
func (o *WorkloadOffer) SetService(v PartnerService) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkloadOffer) GetStatus() OfferStatus {
	if o == nil || IsNil(o.Status) {
		var ret OfferStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadOffer) GetStatusOk() (*OfferStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkloadOffer) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OfferStatus and assigns it to the Status field.
func (o *WorkloadOffer) SetStatus(v OfferStatus) {
	o.Status = &v
}

func (o WorkloadOffer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadOffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyerID) {
		toSerialize["buyerID"] = o.BuyerID
	}
	if !IsNil(o.ContactIds) {
		toSerialize["contactIds"] = o.ContactIds
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.MetaInfo) {
		toSerialize["metaInfo"] = o.MetaInfo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OfferType) {
		toSerialize["offerType"] = o.OfferType
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	if !IsNil(o.ProductID) {
		toSerialize["productID"] = o.ProductID
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableWorkloadOffer struct {
	value *WorkloadOffer
	isSet bool
}

func (v NullableWorkloadOffer) Get() *WorkloadOffer {
	return v.value
}

func (v *NullableWorkloadOffer) Set(val *WorkloadOffer) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadOffer) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadOffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadOffer(val *WorkloadOffer) *NullableWorkloadOffer {
	return &NullableWorkloadOffer{value: val, isSet: true}
}

func (v NullableWorkloadOffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadOffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
