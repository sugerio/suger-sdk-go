/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AddEntitlementCreditResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddEntitlementCreditResponse{}

// AddEntitlementCreditResponse struct for AddEntitlementCreditResponse
type AddEntitlementCreditResponse struct {
	// The amount to be added to the credit amount.
	CreditAmountIncrement *float32 `json:"creditAmountIncrement,omitempty"`
	EntitlementID *string `json:"entitlementID,omitempty"`
	EntitlementTermID *string `json:"entitlementTermID,omitempty"`
	// The new credit amount after the increment.
	NewCreditAmount *float32 `json:"newCreditAmount,omitempty"`
	OrganizationID *string `json:"organizationID,omitempty"`
}

// NewAddEntitlementCreditResponse instantiates a new AddEntitlementCreditResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddEntitlementCreditResponse() *AddEntitlementCreditResponse {
	this := AddEntitlementCreditResponse{}
	return &this
}

// NewAddEntitlementCreditResponseWithDefaults instantiates a new AddEntitlementCreditResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddEntitlementCreditResponseWithDefaults() *AddEntitlementCreditResponse {
	this := AddEntitlementCreditResponse{}
	return &this
}

// GetCreditAmountIncrement returns the CreditAmountIncrement field value if set, zero value otherwise.
func (o *AddEntitlementCreditResponse) GetCreditAmountIncrement() float32 {
	if o == nil || IsNil(o.CreditAmountIncrement) {
		var ret float32
		return ret
	}
	return *o.CreditAmountIncrement
}

// GetCreditAmountIncrementOk returns a tuple with the CreditAmountIncrement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEntitlementCreditResponse) GetCreditAmountIncrementOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditAmountIncrement) {
		return nil, false
	}
	return o.CreditAmountIncrement, true
}

// HasCreditAmountIncrement returns a boolean if a field has been set.
func (o *AddEntitlementCreditResponse) HasCreditAmountIncrement() bool {
	if o != nil && !IsNil(o.CreditAmountIncrement) {
		return true
	}

	return false
}

// SetCreditAmountIncrement gets a reference to the given float32 and assigns it to the CreditAmountIncrement field.
func (o *AddEntitlementCreditResponse) SetCreditAmountIncrement(v float32) {
	o.CreditAmountIncrement = &v
}

// GetEntitlementID returns the EntitlementID field value if set, zero value otherwise.
func (o *AddEntitlementCreditResponse) GetEntitlementID() string {
	if o == nil || IsNil(o.EntitlementID) {
		var ret string
		return ret
	}
	return *o.EntitlementID
}

// GetEntitlementIDOk returns a tuple with the EntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEntitlementCreditResponse) GetEntitlementIDOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementID) {
		return nil, false
	}
	return o.EntitlementID, true
}

// HasEntitlementID returns a boolean if a field has been set.
func (o *AddEntitlementCreditResponse) HasEntitlementID() bool {
	if o != nil && !IsNil(o.EntitlementID) {
		return true
	}

	return false
}

// SetEntitlementID gets a reference to the given string and assigns it to the EntitlementID field.
func (o *AddEntitlementCreditResponse) SetEntitlementID(v string) {
	o.EntitlementID = &v
}

// GetEntitlementTermID returns the EntitlementTermID field value if set, zero value otherwise.
func (o *AddEntitlementCreditResponse) GetEntitlementTermID() string {
	if o == nil || IsNil(o.EntitlementTermID) {
		var ret string
		return ret
	}
	return *o.EntitlementTermID
}

// GetEntitlementTermIDOk returns a tuple with the EntitlementTermID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEntitlementCreditResponse) GetEntitlementTermIDOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementTermID) {
		return nil, false
	}
	return o.EntitlementTermID, true
}

// HasEntitlementTermID returns a boolean if a field has been set.
func (o *AddEntitlementCreditResponse) HasEntitlementTermID() bool {
	if o != nil && !IsNil(o.EntitlementTermID) {
		return true
	}

	return false
}

// SetEntitlementTermID gets a reference to the given string and assigns it to the EntitlementTermID field.
func (o *AddEntitlementCreditResponse) SetEntitlementTermID(v string) {
	o.EntitlementTermID = &v
}

// GetNewCreditAmount returns the NewCreditAmount field value if set, zero value otherwise.
func (o *AddEntitlementCreditResponse) GetNewCreditAmount() float32 {
	if o == nil || IsNil(o.NewCreditAmount) {
		var ret float32
		return ret
	}
	return *o.NewCreditAmount
}

// GetNewCreditAmountOk returns a tuple with the NewCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEntitlementCreditResponse) GetNewCreditAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.NewCreditAmount) {
		return nil, false
	}
	return o.NewCreditAmount, true
}

// HasNewCreditAmount returns a boolean if a field has been set.
func (o *AddEntitlementCreditResponse) HasNewCreditAmount() bool {
	if o != nil && !IsNil(o.NewCreditAmount) {
		return true
	}

	return false
}

// SetNewCreditAmount gets a reference to the given float32 and assigns it to the NewCreditAmount field.
func (o *AddEntitlementCreditResponse) SetNewCreditAmount(v float32) {
	o.NewCreditAmount = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *AddEntitlementCreditResponse) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddEntitlementCreditResponse) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *AddEntitlementCreditResponse) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *AddEntitlementCreditResponse) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

func (o AddEntitlementCreditResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddEntitlementCreditResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreditAmountIncrement) {
		toSerialize["creditAmountIncrement"] = o.CreditAmountIncrement
	}
	if !IsNil(o.EntitlementID) {
		toSerialize["entitlementID"] = o.EntitlementID
	}
	if !IsNil(o.EntitlementTermID) {
		toSerialize["entitlementTermID"] = o.EntitlementTermID
	}
	if !IsNil(o.NewCreditAmount) {
		toSerialize["newCreditAmount"] = o.NewCreditAmount
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	return toSerialize, nil
}

type NullableAddEntitlementCreditResponse struct {
	value *AddEntitlementCreditResponse
	isSet bool
}

func (v NullableAddEntitlementCreditResponse) Get() *AddEntitlementCreditResponse {
	return v.value
}

func (v *NullableAddEntitlementCreditResponse) Set(val *AddEntitlementCreditResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddEntitlementCreditResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddEntitlementCreditResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddEntitlementCreditResponse(val *AddEntitlementCreditResponse) *NullableAddEntitlementCreditResponse {
	return &NullableAddEntitlementCreditResponse{value: val, isSet: true}
}

func (v NullableAddEntitlementCreditResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddEntitlementCreditResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


