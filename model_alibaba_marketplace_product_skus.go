/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AlibabaMarketplaceProductSkus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlibabaMarketplaceProductSkus{}

// AlibabaMarketplaceProductSkus struct for AlibabaMarketplaceProductSkus
type AlibabaMarketplaceProductSkus struct {
	ProductSku []AlibabaMarketplaceProductSku `json:"ProductSku,omitempty"`
}

// NewAlibabaMarketplaceProductSkus instantiates a new AlibabaMarketplaceProductSkus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlibabaMarketplaceProductSkus() *AlibabaMarketplaceProductSkus {
	this := AlibabaMarketplaceProductSkus{}
	return &this
}

// NewAlibabaMarketplaceProductSkusWithDefaults instantiates a new AlibabaMarketplaceProductSkus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlibabaMarketplaceProductSkusWithDefaults() *AlibabaMarketplaceProductSkus {
	this := AlibabaMarketplaceProductSkus{}
	return &this
}

// GetProductSku returns the ProductSku field value if set, zero value otherwise.
func (o *AlibabaMarketplaceProductSkus) GetProductSku() []AlibabaMarketplaceProductSku {
	if o == nil || IsNil(o.ProductSku) {
		var ret []AlibabaMarketplaceProductSku
		return ret
	}
	return o.ProductSku
}

// GetProductSkuOk returns a tuple with the ProductSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlibabaMarketplaceProductSkus) GetProductSkuOk() ([]AlibabaMarketplaceProductSku, bool) {
	if o == nil || IsNil(o.ProductSku) {
		return nil, false
	}
	return o.ProductSku, true
}

// HasProductSku returns a boolean if a field has been set.
func (o *AlibabaMarketplaceProductSkus) HasProductSku() bool {
	if o != nil && !IsNil(o.ProductSku) {
		return true
	}

	return false
}

// SetProductSku gets a reference to the given []AlibabaMarketplaceProductSku and assigns it to the ProductSku field.
func (o *AlibabaMarketplaceProductSkus) SetProductSku(v []AlibabaMarketplaceProductSku) {
	o.ProductSku = v
}

func (o AlibabaMarketplaceProductSkus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlibabaMarketplaceProductSkus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProductSku) {
		toSerialize["ProductSku"] = o.ProductSku
	}
	return toSerialize, nil
}

type NullableAlibabaMarketplaceProductSkus struct {
	value *AlibabaMarketplaceProductSkus
	isSet bool
}

func (v NullableAlibabaMarketplaceProductSkus) Get() *AlibabaMarketplaceProductSkus {
	return v.value
}

func (v *NullableAlibabaMarketplaceProductSkus) Set(val *AlibabaMarketplaceProductSkus) {
	v.value = val
	v.isSet = true
}

func (v NullableAlibabaMarketplaceProductSkus) IsSet() bool {
	return v.isSet
}

func (v *NullableAlibabaMarketplaceProductSkus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlibabaMarketplaceProductSkus(val *AlibabaMarketplaceProductSkus) *NullableAlibabaMarketplaceProductSkus {
	return &NullableAlibabaMarketplaceProductSkus{value: val, isSet: true}
}

func (v NullableAlibabaMarketplaceProductSkus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlibabaMarketplaceProductSkus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
