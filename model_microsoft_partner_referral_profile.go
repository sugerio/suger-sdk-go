/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralProfile{}

// MicrosoftPartnerReferralProfile struct for MicrosoftPartnerReferralProfile
type MicrosoftPartnerReferralProfile struct {
	Activities map[string]interface{} `json:"activities,omitempty"`
	Address *MicrosoftPartnerReferralAddress `json:"address,omitempty"`
	Ids []MicrosoftPartnerReferralProfileId `json:"ids,omitempty"`
	IsMaccEligible *bool `json:"isMaccEligible,omitempty"`
	IsMatchingComplete *bool `json:"isMatchingComplete,omitempty"`
	Name *string `json:"name,omitempty"`
	Size *string `json:"size,omitempty"`
	Team []MicrosoftPartnerReferralPerson `json:"team,omitempty"`
}

// NewMicrosoftPartnerReferralProfile instantiates a new MicrosoftPartnerReferralProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralProfile() *MicrosoftPartnerReferralProfile {
	this := MicrosoftPartnerReferralProfile{}
	return &this
}

// NewMicrosoftPartnerReferralProfileWithDefaults instantiates a new MicrosoftPartnerReferralProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralProfileWithDefaults() *MicrosoftPartnerReferralProfile {
	this := MicrosoftPartnerReferralProfile{}
	return &this
}

// GetActivities returns the Activities field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetActivities() map[string]interface{} {
	if o == nil || IsNil(o.Activities) {
		var ret map[string]interface{}
		return ret
	}
	return o.Activities
}

// GetActivitiesOk returns a tuple with the Activities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetActivitiesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Activities) {
		return map[string]interface{}{}, false
	}
	return o.Activities, true
}

// HasActivities returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasActivities() bool {
	if o != nil && !IsNil(o.Activities) {
		return true
	}

	return false
}

// SetActivities gets a reference to the given map[string]interface{} and assigns it to the Activities field.
func (o *MicrosoftPartnerReferralProfile) SetActivities(v map[string]interface{}) {
	o.Activities = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetAddress() MicrosoftPartnerReferralAddress {
	if o == nil || IsNil(o.Address) {
		var ret MicrosoftPartnerReferralAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetAddressOk() (*MicrosoftPartnerReferralAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given MicrosoftPartnerReferralAddress and assigns it to the Address field.
func (o *MicrosoftPartnerReferralProfile) SetAddress(v MicrosoftPartnerReferralAddress) {
	o.Address = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetIds() []MicrosoftPartnerReferralProfileId {
	if o == nil || IsNil(o.Ids) {
		var ret []MicrosoftPartnerReferralProfileId
		return ret
	}
	return o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetIdsOk() ([]MicrosoftPartnerReferralProfileId, bool) {
	if o == nil || IsNil(o.Ids) {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasIds() bool {
	if o != nil && !IsNil(o.Ids) {
		return true
	}

	return false
}

// SetIds gets a reference to the given []MicrosoftPartnerReferralProfileId and assigns it to the Ids field.
func (o *MicrosoftPartnerReferralProfile) SetIds(v []MicrosoftPartnerReferralProfileId) {
	o.Ids = v
}

// GetIsMaccEligible returns the IsMaccEligible field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetIsMaccEligible() bool {
	if o == nil || IsNil(o.IsMaccEligible) {
		var ret bool
		return ret
	}
	return *o.IsMaccEligible
}

// GetIsMaccEligibleOk returns a tuple with the IsMaccEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetIsMaccEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMaccEligible) {
		return nil, false
	}
	return o.IsMaccEligible, true
}

// HasIsMaccEligible returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasIsMaccEligible() bool {
	if o != nil && !IsNil(o.IsMaccEligible) {
		return true
	}

	return false
}

// SetIsMaccEligible gets a reference to the given bool and assigns it to the IsMaccEligible field.
func (o *MicrosoftPartnerReferralProfile) SetIsMaccEligible(v bool) {
	o.IsMaccEligible = &v
}

// GetIsMatchingComplete returns the IsMatchingComplete field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetIsMatchingComplete() bool {
	if o == nil || IsNil(o.IsMatchingComplete) {
		var ret bool
		return ret
	}
	return *o.IsMatchingComplete
}

// GetIsMatchingCompleteOk returns a tuple with the IsMatchingComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetIsMatchingCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMatchingComplete) {
		return nil, false
	}
	return o.IsMatchingComplete, true
}

// HasIsMatchingComplete returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasIsMatchingComplete() bool {
	if o != nil && !IsNil(o.IsMatchingComplete) {
		return true
	}

	return false
}

// SetIsMatchingComplete gets a reference to the given bool and assigns it to the IsMatchingComplete field.
func (o *MicrosoftPartnerReferralProfile) SetIsMatchingComplete(v bool) {
	o.IsMatchingComplete = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftPartnerReferralProfile) SetName(v string) {
	o.Name = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *MicrosoftPartnerReferralProfile) SetSize(v string) {
	o.Size = &v
}

// GetTeam returns the Team field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralProfile) GetTeam() []MicrosoftPartnerReferralPerson {
	if o == nil || IsNil(o.Team) {
		var ret []MicrosoftPartnerReferralPerson
		return ret
	}
	return o.Team
}

// GetTeamOk returns a tuple with the Team field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralProfile) GetTeamOk() ([]MicrosoftPartnerReferralPerson, bool) {
	if o == nil || IsNil(o.Team) {
		return nil, false
	}
	return o.Team, true
}

// HasTeam returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralProfile) HasTeam() bool {
	if o != nil && !IsNil(o.Team) {
		return true
	}

	return false
}

// SetTeam gets a reference to the given []MicrosoftPartnerReferralPerson and assigns it to the Team field.
func (o *MicrosoftPartnerReferralProfile) SetTeam(v []MicrosoftPartnerReferralPerson) {
	o.Team = v
}

func (o MicrosoftPartnerReferralProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Activities) {
		toSerialize["activities"] = o.Activities
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Ids) {
		toSerialize["ids"] = o.Ids
	}
	if !IsNil(o.IsMaccEligible) {
		toSerialize["isMaccEligible"] = o.IsMaccEligible
	}
	if !IsNil(o.IsMatchingComplete) {
		toSerialize["isMatchingComplete"] = o.IsMatchingComplete
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Team) {
		toSerialize["team"] = o.Team
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralProfile struct {
	value *MicrosoftPartnerReferralProfile
	isSet bool
}

func (v NullableMicrosoftPartnerReferralProfile) Get() *MicrosoftPartnerReferralProfile {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralProfile) Set(val *MicrosoftPartnerReferralProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralProfile(val *MicrosoftPartnerReferralProfile) *NullableMicrosoftPartnerReferralProfile {
	return &NullableMicrosoftPartnerReferralProfile{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


