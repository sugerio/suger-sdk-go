/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductPurchaseSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductPurchaseSpec{}

// GcpMarketplaceProductPurchaseSpec struct for GcpMarketplaceProductPurchaseSpec
type GcpMarketplaceProductPurchaseSpec struct {
	Features []GcpMarketplaceProductFeature `json:"features,omitempty"`
	// GCP Marketplace Product Usage Metering Dimension/Metric
	Metrics []GcpMarketplaceProductMeteringMetric `json:"metrics,omitempty"`
	// GCP Marketplace Product Pricing Plans
	PurchaseOptionSpecs []GcpMarketplaceProductPurchaseOptionSpec `json:"purchaseOptionSpecs,omitempty"`
}

// NewGcpMarketplaceProductPurchaseSpec instantiates a new GcpMarketplaceProductPurchaseSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductPurchaseSpec() *GcpMarketplaceProductPurchaseSpec {
	this := GcpMarketplaceProductPurchaseSpec{}
	return &this
}

// NewGcpMarketplaceProductPurchaseSpecWithDefaults instantiates a new GcpMarketplaceProductPurchaseSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductPurchaseSpecWithDefaults() *GcpMarketplaceProductPurchaseSpec {
	this := GcpMarketplaceProductPurchaseSpec{}
	return &this
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPurchaseSpec) GetFeatures() []GcpMarketplaceProductFeature {
	if o == nil || IsNil(o.Features) {
		var ret []GcpMarketplaceProductFeature
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPurchaseSpec) GetFeaturesOk() ([]GcpMarketplaceProductFeature, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPurchaseSpec) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []GcpMarketplaceProductFeature and assigns it to the Features field.
func (o *GcpMarketplaceProductPurchaseSpec) SetFeatures(v []GcpMarketplaceProductFeature) {
	o.Features = v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPurchaseSpec) GetMetrics() []GcpMarketplaceProductMeteringMetric {
	if o == nil || IsNil(o.Metrics) {
		var ret []GcpMarketplaceProductMeteringMetric
		return ret
	}
	return o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPurchaseSpec) GetMetricsOk() ([]GcpMarketplaceProductMeteringMetric, bool) {
	if o == nil || IsNil(o.Metrics) {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPurchaseSpec) HasMetrics() bool {
	if o != nil && !IsNil(o.Metrics) {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given []GcpMarketplaceProductMeteringMetric and assigns it to the Metrics field.
func (o *GcpMarketplaceProductPurchaseSpec) SetMetrics(v []GcpMarketplaceProductMeteringMetric) {
	o.Metrics = v
}

// GetPurchaseOptionSpecs returns the PurchaseOptionSpecs field value if set, zero value otherwise.
func (o *GcpMarketplaceProductPurchaseSpec) GetPurchaseOptionSpecs() []GcpMarketplaceProductPurchaseOptionSpec {
	if o == nil || IsNil(o.PurchaseOptionSpecs) {
		var ret []GcpMarketplaceProductPurchaseOptionSpec
		return ret
	}
	return o.PurchaseOptionSpecs
}

// GetPurchaseOptionSpecsOk returns a tuple with the PurchaseOptionSpecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductPurchaseSpec) GetPurchaseOptionSpecsOk() ([]GcpMarketplaceProductPurchaseOptionSpec, bool) {
	if o == nil || IsNil(o.PurchaseOptionSpecs) {
		return nil, false
	}
	return o.PurchaseOptionSpecs, true
}

// HasPurchaseOptionSpecs returns a boolean if a field has been set.
func (o *GcpMarketplaceProductPurchaseSpec) HasPurchaseOptionSpecs() bool {
	if o != nil && !IsNil(o.PurchaseOptionSpecs) {
		return true
	}

	return false
}

// SetPurchaseOptionSpecs gets a reference to the given []GcpMarketplaceProductPurchaseOptionSpec and assigns it to the PurchaseOptionSpecs field.
func (o *GcpMarketplaceProductPurchaseSpec) SetPurchaseOptionSpecs(v []GcpMarketplaceProductPurchaseOptionSpec) {
	o.PurchaseOptionSpecs = v
}

func (o GcpMarketplaceProductPurchaseSpec) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductPurchaseSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Metrics) {
		toSerialize["metrics"] = o.Metrics
	}
	if !IsNil(o.PurchaseOptionSpecs) {
		toSerialize["purchaseOptionSpecs"] = o.PurchaseOptionSpecs
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductPurchaseSpec struct {
	value *GcpMarketplaceProductPurchaseSpec
	isSet bool
}

func (v NullableGcpMarketplaceProductPurchaseSpec) Get() *GcpMarketplaceProductPurchaseSpec {
	return v.value
}

func (v *NullableGcpMarketplaceProductPurchaseSpec) Set(val *GcpMarketplaceProductPurchaseSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductPurchaseSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductPurchaseSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductPurchaseSpec(val *GcpMarketplaceProductPurchaseSpec) *NullableGcpMarketplaceProductPurchaseSpec {
	return &NullableGcpMarketplaceProductPurchaseSpec{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductPurchaseSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductPurchaseSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
