/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrbExternalConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrbExternalConnection{}

// OrbExternalConnection struct for OrbExternalConnection
type OrbExternalConnection struct {
	ExternalConnectionName *string `json:"external_connection_name,omitempty"`
	ExternalEntityId *string `json:"external_entity_id,omitempty"`
}

// NewOrbExternalConnection instantiates a new OrbExternalConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrbExternalConnection() *OrbExternalConnection {
	this := OrbExternalConnection{}
	return &this
}

// NewOrbExternalConnectionWithDefaults instantiates a new OrbExternalConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrbExternalConnectionWithDefaults() *OrbExternalConnection {
	this := OrbExternalConnection{}
	return &this
}

// GetExternalConnectionName returns the ExternalConnectionName field value if set, zero value otherwise.
func (o *OrbExternalConnection) GetExternalConnectionName() string {
	if o == nil || IsNil(o.ExternalConnectionName) {
		var ret string
		return ret
	}
	return *o.ExternalConnectionName
}

// GetExternalConnectionNameOk returns a tuple with the ExternalConnectionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbExternalConnection) GetExternalConnectionNameOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalConnectionName) {
		return nil, false
	}
	return o.ExternalConnectionName, true
}

// HasExternalConnectionName returns a boolean if a field has been set.
func (o *OrbExternalConnection) HasExternalConnectionName() bool {
	if o != nil && !IsNil(o.ExternalConnectionName) {
		return true
	}

	return false
}

// SetExternalConnectionName gets a reference to the given string and assigns it to the ExternalConnectionName field.
func (o *OrbExternalConnection) SetExternalConnectionName(v string) {
	o.ExternalConnectionName = &v
}

// GetExternalEntityId returns the ExternalEntityId field value if set, zero value otherwise.
func (o *OrbExternalConnection) GetExternalEntityId() string {
	if o == nil || IsNil(o.ExternalEntityId) {
		var ret string
		return ret
	}
	return *o.ExternalEntityId
}

// GetExternalEntityIdOk returns a tuple with the ExternalEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbExternalConnection) GetExternalEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalEntityId) {
		return nil, false
	}
	return o.ExternalEntityId, true
}

// HasExternalEntityId returns a boolean if a field has been set.
func (o *OrbExternalConnection) HasExternalEntityId() bool {
	if o != nil && !IsNil(o.ExternalEntityId) {
		return true
	}

	return false
}

// SetExternalEntityId gets a reference to the given string and assigns it to the ExternalEntityId field.
func (o *OrbExternalConnection) SetExternalEntityId(v string) {
	o.ExternalEntityId = &v
}

func (o OrbExternalConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrbExternalConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalConnectionName) {
		toSerialize["external_connection_name"] = o.ExternalConnectionName
	}
	if !IsNil(o.ExternalEntityId) {
		toSerialize["external_entity_id"] = o.ExternalEntityId
	}
	return toSerialize, nil
}

type NullableOrbExternalConnection struct {
	value *OrbExternalConnection
	isSet bool
}

func (v NullableOrbExternalConnection) Get() *OrbExternalConnection {
	return v.value
}

func (v *NullableOrbExternalConnection) Set(val *OrbExternalConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableOrbExternalConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableOrbExternalConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrbExternalConnection(val *OrbExternalConnection) *NullableOrbExternalConnection {
	return &NullableOrbExternalConnection{value: val, isSet: true}
}

func (v NullableOrbExternalConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrbExternalConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


