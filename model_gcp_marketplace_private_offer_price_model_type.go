/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"fmt"
)

// GcpMarketplacePrivateOfferPriceModelType the model 'GcpMarketplacePrivateOfferPriceModelType'
type GcpMarketplacePrivateOfferPriceModelType string

// List of GcpMarketplacePrivateOfferPriceModelType
const (
	GcpMarketplacePrivateOfferPriceModelType_UNKNOWN                GcpMarketplacePrivateOfferPriceModelType = ""
	GcpMarketplacePrivateOfferPriceModelType_UNSPECIFIED            GcpMarketplacePrivateOfferPriceModelType = "PRICE_MODEL_TYPE_UNSPECIFIED"
	GcpMarketplacePrivateOfferPriceModelType_CUD                    GcpMarketplacePrivateOfferPriceModelType = "CUD"
	GcpMarketplacePrivateOfferPriceModelType_FIXED_FEE              GcpMarketplacePrivateOfferPriceModelType = "FIXED_FEE"
	GcpMarketplacePrivateOfferPriceModelType_FIXED_FEE_WITH_OVERAGE GcpMarketplacePrivateOfferPriceModelType = "FIXED_FEE_WITH_OVERAGE"
	GcpMarketplacePrivateOfferPriceModelType_PAYG                   GcpMarketplacePrivateOfferPriceModelType = "PAYG"
	GcpMarketplacePrivateOfferPriceModelType_PAYG_WITH_CUD          GcpMarketplacePrivateOfferPriceModelType = "PAYG_WITH_CUD"
)

// All allowed values of GcpMarketplacePrivateOfferPriceModelType enum
var AllowedGcpMarketplacePrivateOfferPriceModelTypeEnumValues = []GcpMarketplacePrivateOfferPriceModelType{
	"",
	"PRICE_MODEL_TYPE_UNSPECIFIED",
	"CUD",
	"FIXED_FEE",
	"FIXED_FEE_WITH_OVERAGE",
	"PAYG",
	"PAYG_WITH_CUD",
}

func (v *GcpMarketplacePrivateOfferPriceModelType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GcpMarketplacePrivateOfferPriceModelType(value)
	for _, existing := range AllowedGcpMarketplacePrivateOfferPriceModelTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GcpMarketplacePrivateOfferPriceModelType", value)
}

// NewGcpMarketplacePrivateOfferPriceModelTypeFromValue returns a pointer to a valid GcpMarketplacePrivateOfferPriceModelType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGcpMarketplacePrivateOfferPriceModelTypeFromValue(v string) (*GcpMarketplacePrivateOfferPriceModelType, error) {
	ev := GcpMarketplacePrivateOfferPriceModelType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GcpMarketplacePrivateOfferPriceModelType: valid values are %v", v, AllowedGcpMarketplacePrivateOfferPriceModelTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GcpMarketplacePrivateOfferPriceModelType) IsValid() bool {
	for _, existing := range AllowedGcpMarketplacePrivateOfferPriceModelTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to GcpMarketplacePrivateOfferPriceModelType value
func (v GcpMarketplacePrivateOfferPriceModelType) Ptr() *GcpMarketplacePrivateOfferPriceModelType {
	return &v
}

type NullableGcpMarketplacePrivateOfferPriceModelType struct {
	value *GcpMarketplacePrivateOfferPriceModelType
	isSet bool
}

func (v NullableGcpMarketplacePrivateOfferPriceModelType) Get() *GcpMarketplacePrivateOfferPriceModelType {
	return v.value
}

func (v *NullableGcpMarketplacePrivateOfferPriceModelType) Set(val *GcpMarketplacePrivateOfferPriceModelType) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplacePrivateOfferPriceModelType) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplacePrivateOfferPriceModelType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplacePrivateOfferPriceModelType(val *GcpMarketplacePrivateOfferPriceModelType) *NullableGcpMarketplacePrivateOfferPriceModelType {
	return &NullableGcpMarketplacePrivateOfferPriceModelType{value: val, isSet: true}
}

func (v NullableGcpMarketplacePrivateOfferPriceModelType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplacePrivateOfferPriceModelType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
