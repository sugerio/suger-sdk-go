/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the WorkloadProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadProduct{}

// WorkloadProduct struct for WorkloadProduct
type WorkloadProduct struct {
	CreatedBy      *string           `json:"createdBy,omitempty"`
	CreationTime   *time.Time        `json:"creationTime,omitempty"`
	ExternalID     *string           `json:"externalID,omitempty"`
	FulfillmentUrl *string           `json:"fulfillmentUrl,omitempty"`
	Id             *string           `json:"id,omitempty"`
	Info           *ProductInfo      `json:"info,omitempty"`
	LastUpdateTime *time.Time        `json:"lastUpdateTime,omitempty"`
	LastUpdatedBy  *string           `json:"lastUpdatedBy,omitempty"`
	MetaInfo       *WorkloadMetaInfo `json:"metaInfo,omitempty"`
	Name           *string           `json:"name,omitempty"`
	OrganizationID *string           `json:"organizationID,omitempty"`
	Partner        *Partner          `json:"partner,omitempty"`
	PartnerID      *string           `json:"partnerID,omitempty"`
	ProductType    *string           `json:"productType,omitempty"`
	Service        *PartnerService   `json:"service,omitempty"`
	Status         *string           `json:"status,omitempty"`
}

// NewWorkloadProduct instantiates a new WorkloadProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadProduct() *WorkloadProduct {
	this := WorkloadProduct{}
	return &this
}

// NewWorkloadProductWithDefaults instantiates a new WorkloadProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadProductWithDefaults() *WorkloadProduct {
	this := WorkloadProduct{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *WorkloadProduct) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *WorkloadProduct) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *WorkloadProduct) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *WorkloadProduct) GetCreationTime() time.Time {
	if o == nil || IsNil(o.CreationTime) {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationTime) {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *WorkloadProduct) HasCreationTime() bool {
	if o != nil && !IsNil(o.CreationTime) {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *WorkloadProduct) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *WorkloadProduct) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *WorkloadProduct) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *WorkloadProduct) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetFulfillmentUrl returns the FulfillmentUrl field value if set, zero value otherwise.
func (o *WorkloadProduct) GetFulfillmentUrl() string {
	if o == nil || IsNil(o.FulfillmentUrl) {
		var ret string
		return ret
	}
	return *o.FulfillmentUrl
}

// GetFulfillmentUrlOk returns a tuple with the FulfillmentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetFulfillmentUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FulfillmentUrl) {
		return nil, false
	}
	return o.FulfillmentUrl, true
}

// HasFulfillmentUrl returns a boolean if a field has been set.
func (o *WorkloadProduct) HasFulfillmentUrl() bool {
	if o != nil && !IsNil(o.FulfillmentUrl) {
		return true
	}

	return false
}

// SetFulfillmentUrl gets a reference to the given string and assigns it to the FulfillmentUrl field.
func (o *WorkloadProduct) SetFulfillmentUrl(v string) {
	o.FulfillmentUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkloadProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkloadProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkloadProduct) SetId(v string) {
	o.Id = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkloadProduct) GetInfo() ProductInfo {
	if o == nil || IsNil(o.Info) {
		var ret ProductInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetInfoOk() (*ProductInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkloadProduct) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given ProductInfo and assigns it to the Info field.
func (o *WorkloadProduct) SetInfo(v ProductInfo) {
	o.Info = &v
}

// GetLastUpdateTime returns the LastUpdateTime field value if set, zero value otherwise.
func (o *WorkloadProduct) GetLastUpdateTime() time.Time {
	if o == nil || IsNil(o.LastUpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdateTime
}

// GetLastUpdateTimeOk returns a tuple with the LastUpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetLastUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdateTime) {
		return nil, false
	}
	return o.LastUpdateTime, true
}

// HasLastUpdateTime returns a boolean if a field has been set.
func (o *WorkloadProduct) HasLastUpdateTime() bool {
	if o != nil && !IsNil(o.LastUpdateTime) {
		return true
	}

	return false
}

// SetLastUpdateTime gets a reference to the given time.Time and assigns it to the LastUpdateTime field.
func (o *WorkloadProduct) SetLastUpdateTime(v time.Time) {
	o.LastUpdateTime = &v
}

// GetLastUpdatedBy returns the LastUpdatedBy field value if set, zero value otherwise.
func (o *WorkloadProduct) GetLastUpdatedBy() string {
	if o == nil || IsNil(o.LastUpdatedBy) {
		var ret string
		return ret
	}
	return *o.LastUpdatedBy
}

// GetLastUpdatedByOk returns a tuple with the LastUpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetLastUpdatedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdatedBy) {
		return nil, false
	}
	return o.LastUpdatedBy, true
}

// HasLastUpdatedBy returns a boolean if a field has been set.
func (o *WorkloadProduct) HasLastUpdatedBy() bool {
	if o != nil && !IsNil(o.LastUpdatedBy) {
		return true
	}

	return false
}

// SetLastUpdatedBy gets a reference to the given string and assigns it to the LastUpdatedBy field.
func (o *WorkloadProduct) SetLastUpdatedBy(v string) {
	o.LastUpdatedBy = &v
}

// GetMetaInfo returns the MetaInfo field value if set, zero value otherwise.
func (o *WorkloadProduct) GetMetaInfo() WorkloadMetaInfo {
	if o == nil || IsNil(o.MetaInfo) {
		var ret WorkloadMetaInfo
		return ret
	}
	return *o.MetaInfo
}

// GetMetaInfoOk returns a tuple with the MetaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetMetaInfoOk() (*WorkloadMetaInfo, bool) {
	if o == nil || IsNil(o.MetaInfo) {
		return nil, false
	}
	return o.MetaInfo, true
}

// HasMetaInfo returns a boolean if a field has been set.
func (o *WorkloadProduct) HasMetaInfo() bool {
	if o != nil && !IsNil(o.MetaInfo) {
		return true
	}

	return false
}

// SetMetaInfo gets a reference to the given WorkloadMetaInfo and assigns it to the MetaInfo field.
func (o *WorkloadProduct) SetMetaInfo(v WorkloadMetaInfo) {
	o.MetaInfo = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WorkloadProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WorkloadProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WorkloadProduct) SetName(v string) {
	o.Name = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *WorkloadProduct) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *WorkloadProduct) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *WorkloadProduct) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *WorkloadProduct) GetPartner() Partner {
	if o == nil || IsNil(o.Partner) {
		var ret Partner
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetPartnerOk() (*Partner, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *WorkloadProduct) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given Partner and assigns it to the Partner field.
func (o *WorkloadProduct) SetPartner(v Partner) {
	o.Partner = &v
}

// GetPartnerID returns the PartnerID field value if set, zero value otherwise.
func (o *WorkloadProduct) GetPartnerID() string {
	if o == nil || IsNil(o.PartnerID) {
		var ret string
		return ret
	}
	return *o.PartnerID
}

// GetPartnerIDOk returns a tuple with the PartnerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetPartnerIDOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerID) {
		return nil, false
	}
	return o.PartnerID, true
}

// HasPartnerID returns a boolean if a field has been set.
func (o *WorkloadProduct) HasPartnerID() bool {
	if o != nil && !IsNil(o.PartnerID) {
		return true
	}

	return false
}

// SetPartnerID gets a reference to the given string and assigns it to the PartnerID field.
func (o *WorkloadProduct) SetPartnerID(v string) {
	o.PartnerID = &v
}

// GetProductType returns the ProductType field value if set, zero value otherwise.
func (o *WorkloadProduct) GetProductType() string {
	if o == nil || IsNil(o.ProductType) {
		var ret string
		return ret
	}
	return *o.ProductType
}

// GetProductTypeOk returns a tuple with the ProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetProductTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductType) {
		return nil, false
	}
	return o.ProductType, true
}

// HasProductType returns a boolean if a field has been set.
func (o *WorkloadProduct) HasProductType() bool {
	if o != nil && !IsNil(o.ProductType) {
		return true
	}

	return false
}

// SetProductType gets a reference to the given string and assigns it to the ProductType field.
func (o *WorkloadProduct) SetProductType(v string) {
	o.ProductType = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *WorkloadProduct) GetService() PartnerService {
	if o == nil || IsNil(o.Service) {
		var ret PartnerService
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetServiceOk() (*PartnerService, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *WorkloadProduct) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given PartnerService and assigns it to the Service field.
func (o *WorkloadProduct) SetService(v PartnerService) {
	o.Service = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WorkloadProduct) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadProduct) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WorkloadProduct) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *WorkloadProduct) SetStatus(v string) {
	o.Status = &v
}

func (o WorkloadProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreationTime) {
		toSerialize["creationTime"] = o.CreationTime
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.FulfillmentUrl) {
		toSerialize["fulfillmentUrl"] = o.FulfillmentUrl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.LastUpdateTime) {
		toSerialize["lastUpdateTime"] = o.LastUpdateTime
	}
	if !IsNil(o.LastUpdatedBy) {
		toSerialize["lastUpdatedBy"] = o.LastUpdatedBy
	}
	if !IsNil(o.MetaInfo) {
		toSerialize["metaInfo"] = o.MetaInfo
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	if !IsNil(o.PartnerID) {
		toSerialize["partnerID"] = o.PartnerID
	}
	if !IsNil(o.ProductType) {
		toSerialize["productType"] = o.ProductType
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableWorkloadProduct struct {
	value *WorkloadProduct
	isSet bool
}

func (v NullableWorkloadProduct) Get() *WorkloadProduct {
	return v.value
}

func (v *NullableWorkloadProduct) Set(val *WorkloadProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadProduct(val *WorkloadProduct) *NullableWorkloadProduct {
	return &NullableWorkloadProduct{value: val, isSet: true}
}

func (v NullableWorkloadProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
