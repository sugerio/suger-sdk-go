/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplaceDeprecationScheduleAlternative type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceDeprecationScheduleAlternative{}

// AzureMarketplaceDeprecationScheduleAlternative struct for AzureMarketplaceDeprecationScheduleAlternative
type AzureMarketplaceDeprecationScheduleAlternative struct {
	Plan    map[string]interface{} `json:"plan,omitempty"`
	Product map[string]interface{} `json:"product,omitempty"`
}

// NewAzureMarketplaceDeprecationScheduleAlternative instantiates a new AzureMarketplaceDeprecationScheduleAlternative object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceDeprecationScheduleAlternative() *AzureMarketplaceDeprecationScheduleAlternative {
	this := AzureMarketplaceDeprecationScheduleAlternative{}
	return &this
}

// NewAzureMarketplaceDeprecationScheduleAlternativeWithDefaults instantiates a new AzureMarketplaceDeprecationScheduleAlternative object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceDeprecationScheduleAlternativeWithDefaults() *AzureMarketplaceDeprecationScheduleAlternative {
	this := AzureMarketplaceDeprecationScheduleAlternative{}
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationScheduleAlternative) GetPlan() map[string]interface{} {
	if o == nil || IsNil(o.Plan) {
		var ret map[string]interface{}
		return ret
	}
	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationScheduleAlternative) GetPlanOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Plan) {
		return map[string]interface{}{}, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationScheduleAlternative) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given map[string]interface{} and assigns it to the Plan field.
func (o *AzureMarketplaceDeprecationScheduleAlternative) SetPlan(v map[string]interface{}) {
	o.Plan = v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureMarketplaceDeprecationScheduleAlternative) GetProduct() map[string]interface{} {
	if o == nil || IsNil(o.Product) {
		var ret map[string]interface{}
		return ret
	}
	return o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceDeprecationScheduleAlternative) GetProductOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Product) {
		return map[string]interface{}{}, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureMarketplaceDeprecationScheduleAlternative) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given map[string]interface{} and assigns it to the Product field.
func (o *AzureMarketplaceDeprecationScheduleAlternative) SetProduct(v map[string]interface{}) {
	o.Product = v
}

func (o AzureMarketplaceDeprecationScheduleAlternative) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceDeprecationScheduleAlternative) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceDeprecationScheduleAlternative struct {
	value *AzureMarketplaceDeprecationScheduleAlternative
	isSet bool
}

func (v NullableAzureMarketplaceDeprecationScheduleAlternative) Get() *AzureMarketplaceDeprecationScheduleAlternative {
	return v.value
}

func (v *NullableAzureMarketplaceDeprecationScheduleAlternative) Set(val *AzureMarketplaceDeprecationScheduleAlternative) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceDeprecationScheduleAlternative) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceDeprecationScheduleAlternative) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceDeprecationScheduleAlternative(val *AzureMarketplaceDeprecationScheduleAlternative) *NullableAzureMarketplaceDeprecationScheduleAlternative {
	return &NullableAzureMarketplaceDeprecationScheduleAlternative{value: val, isSet: true}
}

func (v NullableAzureMarketplaceDeprecationScheduleAlternative) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceDeprecationScheduleAlternative) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
