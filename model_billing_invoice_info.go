/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the BillingInvoiceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingInvoiceInfo{}

// BillingInvoiceInfo struct for BillingInvoiceInfo
type BillingInvoiceInfo struct {
	// Adjust charge fields The fixed fees to be added to the invoice.
	AddFixedFees []InvoiceAddFixedFee `json:"addFixedFees,omitempty"`
	AddonDetail  *BillingAddonRecord  `json:"addonDetail,omitempty"`
	// add or adjust discount for a specific dimension
	AdjustDiscountByDimensions []InvoiceAdjustDiscountByDimension `json:"adjustDiscountByDimensions,omitempty"`
	// add or adjust minimum spend for a specific dimension
	AdjustMinimumSpendByDimensions []InvoiceAdjustMinimumSpendByDimension `json:"adjustMinimumSpendByDimensions,omitempty"`
	// add or adjust overall discount calculate each dimension's discount first, then apply the overall discount
	AdjustOverallDiscount *InvoiceAdjustOverallDiscount `json:"adjustOverallDiscount,omitempty"`
	// add or adjust overall minimum spend calculate each dimension's minimum spend first, then apply the overall minimum spend
	AdjustOverallMinimumSpend *InvoiceAdjustOverallMinimumSpend   `json:"adjustOverallMinimumSpend,omitempty"`
	BillableDimensionDetails  []BillableDimensionPriceModelDetail `json:"billableDimensionDetails,omitempty"`
	// Recurring flat fee for the invoice. There should be only one type fee for each invoice, commits, or usage.
	CommitsRevenueDetails []CommitRevenueDetail `json:"commitsRevenueDetails,omitempty"`
	// The creation date of the invoice when the status of the invoice may be draft or issued. It may be different from the issue date.
	CreationDate *time.Time `json:"creationDate,omitempty"`
	Currency     *string    `json:"currency,omitempty"`
	Description  *string    `json:"description,omitempty"`
	// Due amount = SubtotalAmount + TaxAmount - AdjustOverallDiscount
	DueAmount *float32 `json:"dueAmount,omitempty"`
	// DueDate = IssueDate + NetTerm
	DueDate *time.Time `json:"dueDate,omitempty"`
	// Grace Period in number of days
	GracePeriodInDays *int32 `json:"gracePeriodInDays,omitempty"`
	// IssueDate, issue invoice automatically when CreationDate + GracePeriod, or issue invoice manually IssueDate >= CreationDate && IssueDate <= CreationDate + GracePeriod
	IssueDate *time.Time `json:"issueDate,omitempty"`
	Memo      *string    `json:"memo,omitempty"`
	// Net Terms period in number of days
	NetTermsInDays            *int32                           `json:"netTermsInDays,omitempty"`
	PaymentInstallmentsDetail *BillingPaymentInstallmentDetail `json:"paymentInstallmentsDetail,omitempty"`
	// Invoice receipt url, it only exists when there are transactions.
	ReceiptUrl *string `json:"receiptUrl,omitempty"`
	// SPA url with JWT.
	SpaUrl *string `json:"spaUrl,omitempty"`
	// Subtotal amount calculated from the user usage.
	SubtotalAmount *float32 `json:"subtotalAmount,omitempty"`
	TaxAmount      *float32 `json:"taxAmount,omitempty"`
	// Trial period in number of days
	TrialPeriodInDays *int32 `json:"trialPeriodInDays,omitempty"`
	// Billable dimension fees for the invoice.
	UsageDailyRevenues []BillableDimensionUsageDailyRevenue `json:"usageDailyRevenues,omitempty"`
}

// NewBillingInvoiceInfo instantiates a new BillingInvoiceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingInvoiceInfo() *BillingInvoiceInfo {
	this := BillingInvoiceInfo{}
	return &this
}

// NewBillingInvoiceInfoWithDefaults instantiates a new BillingInvoiceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingInvoiceInfoWithDefaults() *BillingInvoiceInfo {
	this := BillingInvoiceInfo{}
	return &this
}

// GetAddFixedFees returns the AddFixedFees field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAddFixedFees() []InvoiceAddFixedFee {
	if o == nil || IsNil(o.AddFixedFees) {
		var ret []InvoiceAddFixedFee
		return ret
	}
	return o.AddFixedFees
}

// GetAddFixedFeesOk returns a tuple with the AddFixedFees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAddFixedFeesOk() ([]InvoiceAddFixedFee, bool) {
	if o == nil || IsNil(o.AddFixedFees) {
		return nil, false
	}
	return o.AddFixedFees, true
}

// HasAddFixedFees returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAddFixedFees() bool {
	if o != nil && !IsNil(o.AddFixedFees) {
		return true
	}

	return false
}

// SetAddFixedFees gets a reference to the given []InvoiceAddFixedFee and assigns it to the AddFixedFees field.
func (o *BillingInvoiceInfo) SetAddFixedFees(v []InvoiceAddFixedFee) {
	o.AddFixedFees = v
}

// GetAddonDetail returns the AddonDetail field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAddonDetail() BillingAddonRecord {
	if o == nil || IsNil(o.AddonDetail) {
		var ret BillingAddonRecord
		return ret
	}
	return *o.AddonDetail
}

// GetAddonDetailOk returns a tuple with the AddonDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAddonDetailOk() (*BillingAddonRecord, bool) {
	if o == nil || IsNil(o.AddonDetail) {
		return nil, false
	}
	return o.AddonDetail, true
}

// HasAddonDetail returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAddonDetail() bool {
	if o != nil && !IsNil(o.AddonDetail) {
		return true
	}

	return false
}

// SetAddonDetail gets a reference to the given BillingAddonRecord and assigns it to the AddonDetail field.
func (o *BillingInvoiceInfo) SetAddonDetail(v BillingAddonRecord) {
	o.AddonDetail = &v
}

// GetAdjustDiscountByDimensions returns the AdjustDiscountByDimensions field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAdjustDiscountByDimensions() []InvoiceAdjustDiscountByDimension {
	if o == nil || IsNil(o.AdjustDiscountByDimensions) {
		var ret []InvoiceAdjustDiscountByDimension
		return ret
	}
	return o.AdjustDiscountByDimensions
}

// GetAdjustDiscountByDimensionsOk returns a tuple with the AdjustDiscountByDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAdjustDiscountByDimensionsOk() ([]InvoiceAdjustDiscountByDimension, bool) {
	if o == nil || IsNil(o.AdjustDiscountByDimensions) {
		return nil, false
	}
	return o.AdjustDiscountByDimensions, true
}

// HasAdjustDiscountByDimensions returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAdjustDiscountByDimensions() bool {
	if o != nil && !IsNil(o.AdjustDiscountByDimensions) {
		return true
	}

	return false
}

// SetAdjustDiscountByDimensions gets a reference to the given []InvoiceAdjustDiscountByDimension and assigns it to the AdjustDiscountByDimensions field.
func (o *BillingInvoiceInfo) SetAdjustDiscountByDimensions(v []InvoiceAdjustDiscountByDimension) {
	o.AdjustDiscountByDimensions = v
}

// GetAdjustMinimumSpendByDimensions returns the AdjustMinimumSpendByDimensions field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAdjustMinimumSpendByDimensions() []InvoiceAdjustMinimumSpendByDimension {
	if o == nil || IsNil(o.AdjustMinimumSpendByDimensions) {
		var ret []InvoiceAdjustMinimumSpendByDimension
		return ret
	}
	return o.AdjustMinimumSpendByDimensions
}

// GetAdjustMinimumSpendByDimensionsOk returns a tuple with the AdjustMinimumSpendByDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAdjustMinimumSpendByDimensionsOk() ([]InvoiceAdjustMinimumSpendByDimension, bool) {
	if o == nil || IsNil(o.AdjustMinimumSpendByDimensions) {
		return nil, false
	}
	return o.AdjustMinimumSpendByDimensions, true
}

// HasAdjustMinimumSpendByDimensions returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAdjustMinimumSpendByDimensions() bool {
	if o != nil && !IsNil(o.AdjustMinimumSpendByDimensions) {
		return true
	}

	return false
}

// SetAdjustMinimumSpendByDimensions gets a reference to the given []InvoiceAdjustMinimumSpendByDimension and assigns it to the AdjustMinimumSpendByDimensions field.
func (o *BillingInvoiceInfo) SetAdjustMinimumSpendByDimensions(v []InvoiceAdjustMinimumSpendByDimension) {
	o.AdjustMinimumSpendByDimensions = v
}

// GetAdjustOverallDiscount returns the AdjustOverallDiscount field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAdjustOverallDiscount() InvoiceAdjustOverallDiscount {
	if o == nil || IsNil(o.AdjustOverallDiscount) {
		var ret InvoiceAdjustOverallDiscount
		return ret
	}
	return *o.AdjustOverallDiscount
}

// GetAdjustOverallDiscountOk returns a tuple with the AdjustOverallDiscount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAdjustOverallDiscountOk() (*InvoiceAdjustOverallDiscount, bool) {
	if o == nil || IsNil(o.AdjustOverallDiscount) {
		return nil, false
	}
	return o.AdjustOverallDiscount, true
}

// HasAdjustOverallDiscount returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAdjustOverallDiscount() bool {
	if o != nil && !IsNil(o.AdjustOverallDiscount) {
		return true
	}

	return false
}

// SetAdjustOverallDiscount gets a reference to the given InvoiceAdjustOverallDiscount and assigns it to the AdjustOverallDiscount field.
func (o *BillingInvoiceInfo) SetAdjustOverallDiscount(v InvoiceAdjustOverallDiscount) {
	o.AdjustOverallDiscount = &v
}

// GetAdjustOverallMinimumSpend returns the AdjustOverallMinimumSpend field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetAdjustOverallMinimumSpend() InvoiceAdjustOverallMinimumSpend {
	if o == nil || IsNil(o.AdjustOverallMinimumSpend) {
		var ret InvoiceAdjustOverallMinimumSpend
		return ret
	}
	return *o.AdjustOverallMinimumSpend
}

// GetAdjustOverallMinimumSpendOk returns a tuple with the AdjustOverallMinimumSpend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetAdjustOverallMinimumSpendOk() (*InvoiceAdjustOverallMinimumSpend, bool) {
	if o == nil || IsNil(o.AdjustOverallMinimumSpend) {
		return nil, false
	}
	return o.AdjustOverallMinimumSpend, true
}

// HasAdjustOverallMinimumSpend returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasAdjustOverallMinimumSpend() bool {
	if o != nil && !IsNil(o.AdjustOverallMinimumSpend) {
		return true
	}

	return false
}

// SetAdjustOverallMinimumSpend gets a reference to the given InvoiceAdjustOverallMinimumSpend and assigns it to the AdjustOverallMinimumSpend field.
func (o *BillingInvoiceInfo) SetAdjustOverallMinimumSpend(v InvoiceAdjustOverallMinimumSpend) {
	o.AdjustOverallMinimumSpend = &v
}

// GetBillableDimensionDetails returns the BillableDimensionDetails field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetBillableDimensionDetails() []BillableDimensionPriceModelDetail {
	if o == nil || IsNil(o.BillableDimensionDetails) {
		var ret []BillableDimensionPriceModelDetail
		return ret
	}
	return o.BillableDimensionDetails
}

// GetBillableDimensionDetailsOk returns a tuple with the BillableDimensionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetBillableDimensionDetailsOk() ([]BillableDimensionPriceModelDetail, bool) {
	if o == nil || IsNil(o.BillableDimensionDetails) {
		return nil, false
	}
	return o.BillableDimensionDetails, true
}

// HasBillableDimensionDetails returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasBillableDimensionDetails() bool {
	if o != nil && !IsNil(o.BillableDimensionDetails) {
		return true
	}

	return false
}

// SetBillableDimensionDetails gets a reference to the given []BillableDimensionPriceModelDetail and assigns it to the BillableDimensionDetails field.
func (o *BillingInvoiceInfo) SetBillableDimensionDetails(v []BillableDimensionPriceModelDetail) {
	o.BillableDimensionDetails = v
}

// GetCommitsRevenueDetails returns the CommitsRevenueDetails field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetCommitsRevenueDetails() []CommitRevenueDetail {
	if o == nil || IsNil(o.CommitsRevenueDetails) {
		var ret []CommitRevenueDetail
		return ret
	}
	return o.CommitsRevenueDetails
}

// GetCommitsRevenueDetailsOk returns a tuple with the CommitsRevenueDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetCommitsRevenueDetailsOk() ([]CommitRevenueDetail, bool) {
	if o == nil || IsNil(o.CommitsRevenueDetails) {
		return nil, false
	}
	return o.CommitsRevenueDetails, true
}

// HasCommitsRevenueDetails returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasCommitsRevenueDetails() bool {
	if o != nil && !IsNil(o.CommitsRevenueDetails) {
		return true
	}

	return false
}

// SetCommitsRevenueDetails gets a reference to the given []CommitRevenueDetail and assigns it to the CommitsRevenueDetails field.
func (o *BillingInvoiceInfo) SetCommitsRevenueDetails(v []CommitRevenueDetail) {
	o.CommitsRevenueDetails = v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetCreationDate() time.Time {
	if o == nil || IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *BillingInvoiceInfo) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *BillingInvoiceInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingInvoiceInfo) SetDescription(v string) {
	o.Description = &v
}

// GetDueAmount returns the DueAmount field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetDueAmount() float32 {
	if o == nil || IsNil(o.DueAmount) {
		var ret float32
		return ret
	}
	return *o.DueAmount
}

// GetDueAmountOk returns a tuple with the DueAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetDueAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DueAmount) {
		return nil, false
	}
	return o.DueAmount, true
}

// HasDueAmount returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasDueAmount() bool {
	if o != nil && !IsNil(o.DueAmount) {
		return true
	}

	return false
}

// SetDueAmount gets a reference to the given float32 and assigns it to the DueAmount field.
func (o *BillingInvoiceInfo) SetDueAmount(v float32) {
	o.DueAmount = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetDueDate() time.Time {
	if o == nil || IsNil(o.DueDate) {
		var ret time.Time
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetDueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given time.Time and assigns it to the DueDate field.
func (o *BillingInvoiceInfo) SetDueDate(v time.Time) {
	o.DueDate = &v
}

// GetGracePeriodInDays returns the GracePeriodInDays field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetGracePeriodInDays() int32 {
	if o == nil || IsNil(o.GracePeriodInDays) {
		var ret int32
		return ret
	}
	return *o.GracePeriodInDays
}

// GetGracePeriodInDaysOk returns a tuple with the GracePeriodInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetGracePeriodInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.GracePeriodInDays) {
		return nil, false
	}
	return o.GracePeriodInDays, true
}

// HasGracePeriodInDays returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasGracePeriodInDays() bool {
	if o != nil && !IsNil(o.GracePeriodInDays) {
		return true
	}

	return false
}

// SetGracePeriodInDays gets a reference to the given int32 and assigns it to the GracePeriodInDays field.
func (o *BillingInvoiceInfo) SetGracePeriodInDays(v int32) {
	o.GracePeriodInDays = &v
}

// GetIssueDate returns the IssueDate field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetIssueDate() time.Time {
	if o == nil || IsNil(o.IssueDate) {
		var ret time.Time
		return ret
	}
	return *o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetIssueDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IssueDate) {
		return nil, false
	}
	return o.IssueDate, true
}

// HasIssueDate returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasIssueDate() bool {
	if o != nil && !IsNil(o.IssueDate) {
		return true
	}

	return false
}

// SetIssueDate gets a reference to the given time.Time and assigns it to the IssueDate field.
func (o *BillingInvoiceInfo) SetIssueDate(v time.Time) {
	o.IssueDate = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *BillingInvoiceInfo) SetMemo(v string) {
	o.Memo = &v
}

// GetNetTermsInDays returns the NetTermsInDays field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetNetTermsInDays() int32 {
	if o == nil || IsNil(o.NetTermsInDays) {
		var ret int32
		return ret
	}
	return *o.NetTermsInDays
}

// GetNetTermsInDaysOk returns a tuple with the NetTermsInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetNetTermsInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.NetTermsInDays) {
		return nil, false
	}
	return o.NetTermsInDays, true
}

// HasNetTermsInDays returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasNetTermsInDays() bool {
	if o != nil && !IsNil(o.NetTermsInDays) {
		return true
	}

	return false
}

// SetNetTermsInDays gets a reference to the given int32 and assigns it to the NetTermsInDays field.
func (o *BillingInvoiceInfo) SetNetTermsInDays(v int32) {
	o.NetTermsInDays = &v
}

// GetPaymentInstallmentsDetail returns the PaymentInstallmentsDetail field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetPaymentInstallmentsDetail() BillingPaymentInstallmentDetail {
	if o == nil || IsNil(o.PaymentInstallmentsDetail) {
		var ret BillingPaymentInstallmentDetail
		return ret
	}
	return *o.PaymentInstallmentsDetail
}

// GetPaymentInstallmentsDetailOk returns a tuple with the PaymentInstallmentsDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetPaymentInstallmentsDetailOk() (*BillingPaymentInstallmentDetail, bool) {
	if o == nil || IsNil(o.PaymentInstallmentsDetail) {
		return nil, false
	}
	return o.PaymentInstallmentsDetail, true
}

// HasPaymentInstallmentsDetail returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasPaymentInstallmentsDetail() bool {
	if o != nil && !IsNil(o.PaymentInstallmentsDetail) {
		return true
	}

	return false
}

// SetPaymentInstallmentsDetail gets a reference to the given BillingPaymentInstallmentDetail and assigns it to the PaymentInstallmentsDetail field.
func (o *BillingInvoiceInfo) SetPaymentInstallmentsDetail(v BillingPaymentInstallmentDetail) {
	o.PaymentInstallmentsDetail = &v
}

// GetReceiptUrl returns the ReceiptUrl field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetReceiptUrl() string {
	if o == nil || IsNil(o.ReceiptUrl) {
		var ret string
		return ret
	}
	return *o.ReceiptUrl
}

// GetReceiptUrlOk returns a tuple with the ReceiptUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetReceiptUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiptUrl) {
		return nil, false
	}
	return o.ReceiptUrl, true
}

// HasReceiptUrl returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasReceiptUrl() bool {
	if o != nil && !IsNil(o.ReceiptUrl) {
		return true
	}

	return false
}

// SetReceiptUrl gets a reference to the given string and assigns it to the ReceiptUrl field.
func (o *BillingInvoiceInfo) SetReceiptUrl(v string) {
	o.ReceiptUrl = &v
}

// GetSpaUrl returns the SpaUrl field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetSpaUrl() string {
	if o == nil || IsNil(o.SpaUrl) {
		var ret string
		return ret
	}
	return *o.SpaUrl
}

// GetSpaUrlOk returns a tuple with the SpaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetSpaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SpaUrl) {
		return nil, false
	}
	return o.SpaUrl, true
}

// HasSpaUrl returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasSpaUrl() bool {
	if o != nil && !IsNil(o.SpaUrl) {
		return true
	}

	return false
}

// SetSpaUrl gets a reference to the given string and assigns it to the SpaUrl field.
func (o *BillingInvoiceInfo) SetSpaUrl(v string) {
	o.SpaUrl = &v
}

// GetSubtotalAmount returns the SubtotalAmount field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetSubtotalAmount() float32 {
	if o == nil || IsNil(o.SubtotalAmount) {
		var ret float32
		return ret
	}
	return *o.SubtotalAmount
}

// GetSubtotalAmountOk returns a tuple with the SubtotalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetSubtotalAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.SubtotalAmount) {
		return nil, false
	}
	return o.SubtotalAmount, true
}

// HasSubtotalAmount returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasSubtotalAmount() bool {
	if o != nil && !IsNil(o.SubtotalAmount) {
		return true
	}

	return false
}

// SetSubtotalAmount gets a reference to the given float32 and assigns it to the SubtotalAmount field.
func (o *BillingInvoiceInfo) SetSubtotalAmount(v float32) {
	o.SubtotalAmount = &v
}

// GetTaxAmount returns the TaxAmount field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetTaxAmount() float32 {
	if o == nil || IsNil(o.TaxAmount) {
		var ret float32
		return ret
	}
	return *o.TaxAmount
}

// GetTaxAmountOk returns a tuple with the TaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetTaxAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.TaxAmount) {
		return nil, false
	}
	return o.TaxAmount, true
}

// HasTaxAmount returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasTaxAmount() bool {
	if o != nil && !IsNil(o.TaxAmount) {
		return true
	}

	return false
}

// SetTaxAmount gets a reference to the given float32 and assigns it to the TaxAmount field.
func (o *BillingInvoiceInfo) SetTaxAmount(v float32) {
	o.TaxAmount = &v
}

// GetTrialPeriodInDays returns the TrialPeriodInDays field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetTrialPeriodInDays() int32 {
	if o == nil || IsNil(o.TrialPeriodInDays) {
		var ret int32
		return ret
	}
	return *o.TrialPeriodInDays
}

// GetTrialPeriodInDaysOk returns a tuple with the TrialPeriodInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetTrialPeriodInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialPeriodInDays) {
		return nil, false
	}
	return o.TrialPeriodInDays, true
}

// HasTrialPeriodInDays returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasTrialPeriodInDays() bool {
	if o != nil && !IsNil(o.TrialPeriodInDays) {
		return true
	}

	return false
}

// SetTrialPeriodInDays gets a reference to the given int32 and assigns it to the TrialPeriodInDays field.
func (o *BillingInvoiceInfo) SetTrialPeriodInDays(v int32) {
	o.TrialPeriodInDays = &v
}

// GetUsageDailyRevenues returns the UsageDailyRevenues field value if set, zero value otherwise.
func (o *BillingInvoiceInfo) GetUsageDailyRevenues() []BillableDimensionUsageDailyRevenue {
	if o == nil || IsNil(o.UsageDailyRevenues) {
		var ret []BillableDimensionUsageDailyRevenue
		return ret
	}
	return o.UsageDailyRevenues
}

// GetUsageDailyRevenuesOk returns a tuple with the UsageDailyRevenues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingInvoiceInfo) GetUsageDailyRevenuesOk() ([]BillableDimensionUsageDailyRevenue, bool) {
	if o == nil || IsNil(o.UsageDailyRevenues) {
		return nil, false
	}
	return o.UsageDailyRevenues, true
}

// HasUsageDailyRevenues returns a boolean if a field has been set.
func (o *BillingInvoiceInfo) HasUsageDailyRevenues() bool {
	if o != nil && !IsNil(o.UsageDailyRevenues) {
		return true
	}

	return false
}

// SetUsageDailyRevenues gets a reference to the given []BillableDimensionUsageDailyRevenue and assigns it to the UsageDailyRevenues field.
func (o *BillingInvoiceInfo) SetUsageDailyRevenues(v []BillableDimensionUsageDailyRevenue) {
	o.UsageDailyRevenues = v
}

func (o BillingInvoiceInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingInvoiceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddFixedFees) {
		toSerialize["addFixedFees"] = o.AddFixedFees
	}
	if !IsNil(o.AddonDetail) {
		toSerialize["addonDetail"] = o.AddonDetail
	}
	if !IsNil(o.AdjustDiscountByDimensions) {
		toSerialize["adjustDiscountByDimensions"] = o.AdjustDiscountByDimensions
	}
	if !IsNil(o.AdjustMinimumSpendByDimensions) {
		toSerialize["adjustMinimumSpendByDimensions"] = o.AdjustMinimumSpendByDimensions
	}
	if !IsNil(o.AdjustOverallDiscount) {
		toSerialize["adjustOverallDiscount"] = o.AdjustOverallDiscount
	}
	if !IsNil(o.AdjustOverallMinimumSpend) {
		toSerialize["adjustOverallMinimumSpend"] = o.AdjustOverallMinimumSpend
	}
	if !IsNil(o.BillableDimensionDetails) {
		toSerialize["billableDimensionDetails"] = o.BillableDimensionDetails
	}
	if !IsNil(o.CommitsRevenueDetails) {
		toSerialize["commitsRevenueDetails"] = o.CommitsRevenueDetails
	}
	if !IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DueAmount) {
		toSerialize["dueAmount"] = o.DueAmount
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.GracePeriodInDays) {
		toSerialize["gracePeriodInDays"] = o.GracePeriodInDays
	}
	if !IsNil(o.IssueDate) {
		toSerialize["issueDate"] = o.IssueDate
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	if !IsNil(o.NetTermsInDays) {
		toSerialize["netTermsInDays"] = o.NetTermsInDays
	}
	if !IsNil(o.PaymentInstallmentsDetail) {
		toSerialize["paymentInstallmentsDetail"] = o.PaymentInstallmentsDetail
	}
	if !IsNil(o.ReceiptUrl) {
		toSerialize["receiptUrl"] = o.ReceiptUrl
	}
	if !IsNil(o.SpaUrl) {
		toSerialize["spaUrl"] = o.SpaUrl
	}
	if !IsNil(o.SubtotalAmount) {
		toSerialize["subtotalAmount"] = o.SubtotalAmount
	}
	if !IsNil(o.TaxAmount) {
		toSerialize["taxAmount"] = o.TaxAmount
	}
	if !IsNil(o.TrialPeriodInDays) {
		toSerialize["trialPeriodInDays"] = o.TrialPeriodInDays
	}
	if !IsNil(o.UsageDailyRevenues) {
		toSerialize["usageDailyRevenues"] = o.UsageDailyRevenues
	}
	return toSerialize, nil
}

type NullableBillingInvoiceInfo struct {
	value *BillingInvoiceInfo
	isSet bool
}

func (v NullableBillingInvoiceInfo) Get() *BillingInvoiceInfo {
	return v.value
}

func (v *NullableBillingInvoiceInfo) Set(val *BillingInvoiceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingInvoiceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingInvoiceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingInvoiceInfo(val *BillingInvoiceInfo) *NullableBillingInvoiceInfo {
	return &NullableBillingInvoiceInfo{value: val, isSet: true}
}

func (v NullableBillingInvoiceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingInvoiceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
