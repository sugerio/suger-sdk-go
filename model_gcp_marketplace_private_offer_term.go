/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GcpMarketplacePrivateOfferTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplacePrivateOfferTerm{}

// GcpMarketplacePrivateOfferTerm struct for GcpMarketplacePrivateOfferTerm
type GcpMarketplacePrivateOfferTerm struct {
	EnableScheduledStartTimes *bool `json:"enableScheduledStartTimes,omitempty"`
	EndTime *time.Time `json:"endTime,omitempty"`
	// such as \"OFFER_START_POLICY_IMMEDIATE\"
	StartPolicy *string `json:"startPolicy,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	TermDuration *GcpPeriodDuration `json:"termDuration,omitempty"`
}

// NewGcpMarketplacePrivateOfferTerm instantiates a new GcpMarketplacePrivateOfferTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplacePrivateOfferTerm() *GcpMarketplacePrivateOfferTerm {
	this := GcpMarketplacePrivateOfferTerm{}
	return &this
}

// NewGcpMarketplacePrivateOfferTermWithDefaults instantiates a new GcpMarketplacePrivateOfferTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplacePrivateOfferTermWithDefaults() *GcpMarketplacePrivateOfferTerm {
	this := GcpMarketplacePrivateOfferTerm{}
	return &this
}

// GetEnableScheduledStartTimes returns the EnableScheduledStartTimes field value if set, zero value otherwise.
func (o *GcpMarketplacePrivateOfferTerm) GetEnableScheduledStartTimes() bool {
	if o == nil || IsNil(o.EnableScheduledStartTimes) {
		var ret bool
		return ret
	}
	return *o.EnableScheduledStartTimes
}

// GetEnableScheduledStartTimesOk returns a tuple with the EnableScheduledStartTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePrivateOfferTerm) GetEnableScheduledStartTimesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableScheduledStartTimes) {
		return nil, false
	}
	return o.EnableScheduledStartTimes, true
}

// HasEnableScheduledStartTimes returns a boolean if a field has been set.
func (o *GcpMarketplacePrivateOfferTerm) HasEnableScheduledStartTimes() bool {
	if o != nil && !IsNil(o.EnableScheduledStartTimes) {
		return true
	}

	return false
}

// SetEnableScheduledStartTimes gets a reference to the given bool and assigns it to the EnableScheduledStartTimes field.
func (o *GcpMarketplacePrivateOfferTerm) SetEnableScheduledStartTimes(v bool) {
	o.EnableScheduledStartTimes = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *GcpMarketplacePrivateOfferTerm) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePrivateOfferTerm) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *GcpMarketplacePrivateOfferTerm) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *GcpMarketplacePrivateOfferTerm) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetStartPolicy returns the StartPolicy field value if set, zero value otherwise.
func (o *GcpMarketplacePrivateOfferTerm) GetStartPolicy() string {
	if o == nil || IsNil(o.StartPolicy) {
		var ret string
		return ret
	}
	return *o.StartPolicy
}

// GetStartPolicyOk returns a tuple with the StartPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePrivateOfferTerm) GetStartPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.StartPolicy) {
		return nil, false
	}
	return o.StartPolicy, true
}

// HasStartPolicy returns a boolean if a field has been set.
func (o *GcpMarketplacePrivateOfferTerm) HasStartPolicy() bool {
	if o != nil && !IsNil(o.StartPolicy) {
		return true
	}

	return false
}

// SetStartPolicy gets a reference to the given string and assigns it to the StartPolicy field.
func (o *GcpMarketplacePrivateOfferTerm) SetStartPolicy(v string) {
	o.StartPolicy = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *GcpMarketplacePrivateOfferTerm) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePrivateOfferTerm) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *GcpMarketplacePrivateOfferTerm) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *GcpMarketplacePrivateOfferTerm) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetTermDuration returns the TermDuration field value if set, zero value otherwise.
func (o *GcpMarketplacePrivateOfferTerm) GetTermDuration() GcpPeriodDuration {
	if o == nil || IsNil(o.TermDuration) {
		var ret GcpPeriodDuration
		return ret
	}
	return *o.TermDuration
}

// GetTermDurationOk returns a tuple with the TermDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePrivateOfferTerm) GetTermDurationOk() (*GcpPeriodDuration, bool) {
	if o == nil || IsNil(o.TermDuration) {
		return nil, false
	}
	return o.TermDuration, true
}

// HasTermDuration returns a boolean if a field has been set.
func (o *GcpMarketplacePrivateOfferTerm) HasTermDuration() bool {
	if o != nil && !IsNil(o.TermDuration) {
		return true
	}

	return false
}

// SetTermDuration gets a reference to the given GcpPeriodDuration and assigns it to the TermDuration field.
func (o *GcpMarketplacePrivateOfferTerm) SetTermDuration(v GcpPeriodDuration) {
	o.TermDuration = &v
}

func (o GcpMarketplacePrivateOfferTerm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplacePrivateOfferTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableScheduledStartTimes) {
		toSerialize["enableScheduledStartTimes"] = o.EnableScheduledStartTimes
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.StartPolicy) {
		toSerialize["startPolicy"] = o.StartPolicy
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.TermDuration) {
		toSerialize["termDuration"] = o.TermDuration
	}
	return toSerialize, nil
}

type NullableGcpMarketplacePrivateOfferTerm struct {
	value *GcpMarketplacePrivateOfferTerm
	isSet bool
}

func (v NullableGcpMarketplacePrivateOfferTerm) Get() *GcpMarketplacePrivateOfferTerm {
	return v.value
}

func (v *NullableGcpMarketplacePrivateOfferTerm) Set(val *GcpMarketplacePrivateOfferTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplacePrivateOfferTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplacePrivateOfferTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplacePrivateOfferTerm(val *GcpMarketplacePrivateOfferTerm) *NullableGcpMarketplacePrivateOfferTerm {
	return &NullableGcpMarketplacePrivateOfferTerm{value: val, isSet: true}
}

func (v NullableGcpMarketplacePrivateOfferTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplacePrivateOfferTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


