/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsProductDeliveryOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsProductDeliveryOption{}

// AwsProductDeliveryOption struct for AwsProductDeliveryOption
type AwsProductDeliveryOption struct {
	// Exclusive Fields For AWS AMI Product
	AmiAlias *string `json:"AmiAlias,omitempty"`
	// Exclusive Fields For AWS SaaS Product
	FulfillmentUrl   *string                `json:"FulfillmentUrl,omitempty"`
	Id               *string                `json:"Id,omitempty"`
	Recommendations  map[string]interface{} `json:"Recommendations,omitempty"`
	ShortDescription *string                `json:"ShortDescription,omitempty"`
	SourceId         *string                `json:"SourceId,omitempty"`
	// Exclusive Fields For AWS Container Product
	Title      *string `json:"Title,omitempty"`
	Type       *string `json:"Type,omitempty"`
	Visibility *string `json:"Visibility,omitempty"`
}

// NewAwsProductDeliveryOption instantiates a new AwsProductDeliveryOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsProductDeliveryOption() *AwsProductDeliveryOption {
	this := AwsProductDeliveryOption{}
	return &this
}

// NewAwsProductDeliveryOptionWithDefaults instantiates a new AwsProductDeliveryOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsProductDeliveryOptionWithDefaults() *AwsProductDeliveryOption {
	this := AwsProductDeliveryOption{}
	return &this
}

// GetAmiAlias returns the AmiAlias field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetAmiAlias() string {
	if o == nil || IsNil(o.AmiAlias) {
		var ret string
		return ret
	}
	return *o.AmiAlias
}

// GetAmiAliasOk returns a tuple with the AmiAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetAmiAliasOk() (*string, bool) {
	if o == nil || IsNil(o.AmiAlias) {
		return nil, false
	}
	return o.AmiAlias, true
}

// HasAmiAlias returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasAmiAlias() bool {
	if o != nil && !IsNil(o.AmiAlias) {
		return true
	}

	return false
}

// SetAmiAlias gets a reference to the given string and assigns it to the AmiAlias field.
func (o *AwsProductDeliveryOption) SetAmiAlias(v string) {
	o.AmiAlias = &v
}

// GetFulfillmentUrl returns the FulfillmentUrl field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetFulfillmentUrl() string {
	if o == nil || IsNil(o.FulfillmentUrl) {
		var ret string
		return ret
	}
	return *o.FulfillmentUrl
}

// GetFulfillmentUrlOk returns a tuple with the FulfillmentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetFulfillmentUrlOk() (*string, bool) {
	if o == nil || IsNil(o.FulfillmentUrl) {
		return nil, false
	}
	return o.FulfillmentUrl, true
}

// HasFulfillmentUrl returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasFulfillmentUrl() bool {
	if o != nil && !IsNil(o.FulfillmentUrl) {
		return true
	}

	return false
}

// SetFulfillmentUrl gets a reference to the given string and assigns it to the FulfillmentUrl field.
func (o *AwsProductDeliveryOption) SetFulfillmentUrl(v string) {
	o.FulfillmentUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AwsProductDeliveryOption) SetId(v string) {
	o.Id = &v
}

// GetRecommendations returns the Recommendations field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetRecommendations() map[string]interface{} {
	if o == nil || IsNil(o.Recommendations) {
		var ret map[string]interface{}
		return ret
	}
	return o.Recommendations
}

// GetRecommendationsOk returns a tuple with the Recommendations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetRecommendationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Recommendations) {
		return map[string]interface{}{}, false
	}
	return o.Recommendations, true
}

// HasRecommendations returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasRecommendations() bool {
	if o != nil && !IsNil(o.Recommendations) {
		return true
	}

	return false
}

// SetRecommendations gets a reference to the given map[string]interface{} and assigns it to the Recommendations field.
func (o *AwsProductDeliveryOption) SetRecommendations(v map[string]interface{}) {
	o.Recommendations = v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *AwsProductDeliveryOption) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *AwsProductDeliveryOption) SetSourceId(v string) {
	o.SourceId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AwsProductDeliveryOption) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AwsProductDeliveryOption) SetType(v string) {
	o.Type = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AwsProductDeliveryOption) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDeliveryOption) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AwsProductDeliveryOption) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AwsProductDeliveryOption) SetVisibility(v string) {
	o.Visibility = &v
}

func (o AwsProductDeliveryOption) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsProductDeliveryOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmiAlias) {
		toSerialize["AmiAlias"] = o.AmiAlias
	}
	if !IsNil(o.FulfillmentUrl) {
		toSerialize["FulfillmentUrl"] = o.FulfillmentUrl
	}
	if !IsNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !IsNil(o.Recommendations) {
		toSerialize["Recommendations"] = o.Recommendations
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["ShortDescription"] = o.ShortDescription
	}
	if !IsNil(o.SourceId) {
		toSerialize["SourceId"] = o.SourceId
	}
	if !IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["Type"] = o.Type
	}
	if !IsNil(o.Visibility) {
		toSerialize["Visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableAwsProductDeliveryOption struct {
	value *AwsProductDeliveryOption
	isSet bool
}

func (v NullableAwsProductDeliveryOption) Get() *AwsProductDeliveryOption {
	return v.value
}

func (v *NullableAwsProductDeliveryOption) Set(val *AwsProductDeliveryOption) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsProductDeliveryOption) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsProductDeliveryOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsProductDeliveryOption(val *AwsProductDeliveryOption) *NullableAwsProductDeliveryOption {
	return &NullableAwsProductDeliveryOption{value: val, isSet: true}
}

func (v NullableAwsProductDeliveryOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsProductDeliveryOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
