/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureMarketplaceValidation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceValidation{}

// AzureMarketplaceValidation struct for AzureMarketplaceValidation
type AzureMarketplaceValidation struct {
	Schema *string `json:"$schema,omitempty"`
	Code *string `json:"code,omitempty"`
	Level *string `json:"level,omitempty"`
	Message *string `json:"message,omitempty"`
	ResourceId *string `json:"resourceId,omitempty"`
}

// NewAzureMarketplaceValidation instantiates a new AzureMarketplaceValidation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceValidation() *AzureMarketplaceValidation {
	this := AzureMarketplaceValidation{}
	return &this
}

// NewAzureMarketplaceValidationWithDefaults instantiates a new AzureMarketplaceValidation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceValidationWithDefaults() *AzureMarketplaceValidation {
	this := AzureMarketplaceValidation{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplaceValidation) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceValidation) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplaceValidation) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplaceValidation) SetSchema(v string) {
	o.Schema = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AzureMarketplaceValidation) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceValidation) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AzureMarketplaceValidation) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *AzureMarketplaceValidation) SetCode(v string) {
	o.Code = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *AzureMarketplaceValidation) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceValidation) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *AzureMarketplaceValidation) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *AzureMarketplaceValidation) SetLevel(v string) {
	o.Level = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AzureMarketplaceValidation) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceValidation) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AzureMarketplaceValidation) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AzureMarketplaceValidation) SetMessage(v string) {
	o.Message = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *AzureMarketplaceValidation) GetResourceId() string {
	if o == nil || IsNil(o.ResourceId) {
		var ret string
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceValidation) GetResourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceId) {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *AzureMarketplaceValidation) HasResourceId() bool {
	if o != nil && !IsNil(o.ResourceId) {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given string and assigns it to the ResourceId field.
func (o *AzureMarketplaceValidation) SetResourceId(v string) {
	o.ResourceId = &v
}

func (o AzureMarketplaceValidation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceValidation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.ResourceId) {
		toSerialize["resourceId"] = o.ResourceId
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceValidation struct {
	value *AzureMarketplaceValidation
	isSet bool
}

func (v NullableAzureMarketplaceValidation) Get() *AzureMarketplaceValidation {
	return v.value
}

func (v *NullableAzureMarketplaceValidation) Set(val *AzureMarketplaceValidation) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceValidation) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceValidation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceValidation(val *AzureMarketplaceValidation) *NullableAzureMarketplaceValidation {
	return &NullableAzureMarketplaceValidation{value: val, isSet: true}
}

func (v NullableAzureMarketplaceValidation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceValidation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


