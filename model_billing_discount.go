/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillingDiscount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingDiscount{}

// BillingDiscount struct for BillingDiscount
type BillingDiscount struct {
	DiscountType *BillingDiscountType `json:"discountType,omitempty"`
	Value        *float32             `json:"value,omitempty"`
}

// NewBillingDiscount instantiates a new BillingDiscount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingDiscount() *BillingDiscount {
	this := BillingDiscount{}
	return &this
}

// NewBillingDiscountWithDefaults instantiates a new BillingDiscount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingDiscountWithDefaults() *BillingDiscount {
	this := BillingDiscount{}
	return &this
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *BillingDiscount) GetDiscountType() BillingDiscountType {
	if o == nil || IsNil(o.DiscountType) {
		var ret BillingDiscountType
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDiscount) GetDiscountTypeOk() (*BillingDiscountType, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *BillingDiscount) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given BillingDiscountType and assigns it to the DiscountType field.
func (o *BillingDiscount) SetDiscountType(v BillingDiscountType) {
	o.DiscountType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BillingDiscount) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDiscount) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *BillingDiscount) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *BillingDiscount) SetValue(v float32) {
	o.Value = &v
}

func (o BillingDiscount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingDiscount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountType) {
		toSerialize["discountType"] = o.DiscountType
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableBillingDiscount struct {
	value *BillingDiscount
	isSet bool
}

func (v NullableBillingDiscount) Get() *BillingDiscount {
	return v.value
}

func (v *NullableBillingDiscount) Set(val *BillingDiscount) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingDiscount) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingDiscount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingDiscount(val *BillingDiscount) *NullableBillingDiscount {
	return &NullableBillingDiscount{value: val, isSet: true}
}

func (v NullableBillingDiscount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingDiscount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
