/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureProductVariantPriceSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProductVariantPriceSchedule{}

// AzureProductVariantPriceSchedule struct for AzureProductVariantPriceSchedule
type AzureProductVariantPriceSchedule struct {
	DateTimeRange *AzureLocalizedTimeRange `json:"dateTimeRange,omitempty"`
	FriendlyName  *string                  `json:"friendlyName,omitempty"`
	// There is only one base schedule.
	IsBaseSchedule *bool `json:"isBaseSchedule,omitempty"`
	// ISO country code
	MarketCodes []string             `json:"marketCodes,omitempty"`
	Schedules   []AzurePriceSchedule `json:"schedules,omitempty"`
}

// NewAzureProductVariantPriceSchedule instantiates a new AzureProductVariantPriceSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProductVariantPriceSchedule() *AzureProductVariantPriceSchedule {
	this := AzureProductVariantPriceSchedule{}
	return &this
}

// NewAzureProductVariantPriceScheduleWithDefaults instantiates a new AzureProductVariantPriceSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductVariantPriceScheduleWithDefaults() *AzureProductVariantPriceSchedule {
	this := AzureProductVariantPriceSchedule{}
	return &this
}

// GetDateTimeRange returns the DateTimeRange field value if set, zero value otherwise.
func (o *AzureProductVariantPriceSchedule) GetDateTimeRange() AzureLocalizedTimeRange {
	if o == nil || IsNil(o.DateTimeRange) {
		var ret AzureLocalizedTimeRange
		return ret
	}
	return *o.DateTimeRange
}

// GetDateTimeRangeOk returns a tuple with the DateTimeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariantPriceSchedule) GetDateTimeRangeOk() (*AzureLocalizedTimeRange, bool) {
	if o == nil || IsNil(o.DateTimeRange) {
		return nil, false
	}
	return o.DateTimeRange, true
}

// HasDateTimeRange returns a boolean if a field has been set.
func (o *AzureProductVariantPriceSchedule) HasDateTimeRange() bool {
	if o != nil && !IsNil(o.DateTimeRange) {
		return true
	}

	return false
}

// SetDateTimeRange gets a reference to the given AzureLocalizedTimeRange and assigns it to the DateTimeRange field.
func (o *AzureProductVariantPriceSchedule) SetDateTimeRange(v AzureLocalizedTimeRange) {
	o.DateTimeRange = &v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *AzureProductVariantPriceSchedule) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariantPriceSchedule) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *AzureProductVariantPriceSchedule) HasFriendlyName() bool {
	if o != nil && !IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *AzureProductVariantPriceSchedule) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetIsBaseSchedule returns the IsBaseSchedule field value if set, zero value otherwise.
func (o *AzureProductVariantPriceSchedule) GetIsBaseSchedule() bool {
	if o == nil || IsNil(o.IsBaseSchedule) {
		var ret bool
		return ret
	}
	return *o.IsBaseSchedule
}

// GetIsBaseScheduleOk returns a tuple with the IsBaseSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariantPriceSchedule) GetIsBaseScheduleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBaseSchedule) {
		return nil, false
	}
	return o.IsBaseSchedule, true
}

// HasIsBaseSchedule returns a boolean if a field has been set.
func (o *AzureProductVariantPriceSchedule) HasIsBaseSchedule() bool {
	if o != nil && !IsNil(o.IsBaseSchedule) {
		return true
	}

	return false
}

// SetIsBaseSchedule gets a reference to the given bool and assigns it to the IsBaseSchedule field.
func (o *AzureProductVariantPriceSchedule) SetIsBaseSchedule(v bool) {
	o.IsBaseSchedule = &v
}

// GetMarketCodes returns the MarketCodes field value if set, zero value otherwise.
func (o *AzureProductVariantPriceSchedule) GetMarketCodes() []string {
	if o == nil || IsNil(o.MarketCodes) {
		var ret []string
		return ret
	}
	return o.MarketCodes
}

// GetMarketCodesOk returns a tuple with the MarketCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariantPriceSchedule) GetMarketCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.MarketCodes) {
		return nil, false
	}
	return o.MarketCodes, true
}

// HasMarketCodes returns a boolean if a field has been set.
func (o *AzureProductVariantPriceSchedule) HasMarketCodes() bool {
	if o != nil && !IsNil(o.MarketCodes) {
		return true
	}

	return false
}

// SetMarketCodes gets a reference to the given []string and assigns it to the MarketCodes field.
func (o *AzureProductVariantPriceSchedule) SetMarketCodes(v []string) {
	o.MarketCodes = v
}

// GetSchedules returns the Schedules field value if set, zero value otherwise.
func (o *AzureProductVariantPriceSchedule) GetSchedules() []AzurePriceSchedule {
	if o == nil || IsNil(o.Schedules) {
		var ret []AzurePriceSchedule
		return ret
	}
	return o.Schedules
}

// GetSchedulesOk returns a tuple with the Schedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariantPriceSchedule) GetSchedulesOk() ([]AzurePriceSchedule, bool) {
	if o == nil || IsNil(o.Schedules) {
		return nil, false
	}
	return o.Schedules, true
}

// HasSchedules returns a boolean if a field has been set.
func (o *AzureProductVariantPriceSchedule) HasSchedules() bool {
	if o != nil && !IsNil(o.Schedules) {
		return true
	}

	return false
}

// SetSchedules gets a reference to the given []AzurePriceSchedule and assigns it to the Schedules field.
func (o *AzureProductVariantPriceSchedule) SetSchedules(v []AzurePriceSchedule) {
	o.Schedules = v
}

func (o AzureProductVariantPriceSchedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProductVariantPriceSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateTimeRange) {
		toSerialize["dateTimeRange"] = o.DateTimeRange
	}
	if !IsNil(o.FriendlyName) {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if !IsNil(o.IsBaseSchedule) {
		toSerialize["isBaseSchedule"] = o.IsBaseSchedule
	}
	if !IsNil(o.MarketCodes) {
		toSerialize["marketCodes"] = o.MarketCodes
	}
	if !IsNil(o.Schedules) {
		toSerialize["schedules"] = o.Schedules
	}
	return toSerialize, nil
}

type NullableAzureProductVariantPriceSchedule struct {
	value *AzureProductVariantPriceSchedule
	isSet bool
}

func (v NullableAzureProductVariantPriceSchedule) Get() *AzureProductVariantPriceSchedule {
	return v.value
}

func (v *NullableAzureProductVariantPriceSchedule) Set(val *AzureProductVariantPriceSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProductVariantPriceSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProductVariantPriceSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProductVariantPriceSchedule(val *AzureProductVariantPriceSchedule) *NullableAzureProductVariantPriceSchedule {
	return &NullableAzureProductVariantPriceSchedule{value: val, isSet: true}
}

func (v NullableAzureProductVariantPriceSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProductVariantPriceSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
