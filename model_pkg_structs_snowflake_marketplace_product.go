/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the PkgStructsSnowflakeMarketplaceProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PkgStructsSnowflakeMarketplaceProduct{}

// PkgStructsSnowflakeMarketplaceProduct struct for PkgStructsSnowflakeMarketplaceProduct
type PkgStructsSnowflakeMarketplaceProduct struct {
	Comment                 *DatabaseSqlNullString `json:"Comment,omitempty"`
	CreatedOn               *DatabaseSqlNullTime   `json:"CreatedOn,omitempty"`
	DetailedTargetAccounts  *DatabaseSqlNullString `json:"DetailedTargetAccounts,omitempty"`
	Distribution            *DatabaseSqlNullString `json:"Distribution,omitempty"`
	GlobalName              *DatabaseSqlNullString `json:"GlobalName,omitempty"`
	IsApplication           *DatabaseSqlNullBool   `json:"IsApplication,omitempty"`
	IsByRequest             *DatabaseSqlNullBool   `json:"IsByRequest,omitempty"`
	IsLimitedTrial          *DatabaseSqlNullBool   `json:"IsLimitedTrial,omitempty"`
	IsMonetized             *DatabaseSqlNullBool   `json:"IsMonetized,omitempty"`
	IsMountlessQueryable    *DatabaseSqlNullBool   `json:"IsMountlessQueryable,omitempty"`
	IsTargeted              *DatabaseSqlNullBool   `json:"IsTargeted,omitempty"`
	Owner                   *DatabaseSqlNullString `json:"Owner,omitempty"`
	OwnerRoleType           *DatabaseSqlNullString `json:"OwnerRoleType,omitempty"`
	Profile                 *DatabaseSqlNullString `json:"Profile,omitempty"`
	PublishedOn             *DatabaseSqlNullTime   `json:"PublishedOn,omitempty"`
	Regions                 *DatabaseSqlNullString `json:"Regions,omitempty"`
	RejectedOn              *DatabaseSqlNullTime   `json:"RejectedOn,omitempty"`
	ReviewState             *DatabaseSqlNullString `json:"ReviewState,omitempty"`
	State                   *DatabaseSqlNullString `json:"State,omitempty"`
	Subtitle                *DatabaseSqlNullString `json:"Subtitle,omitempty"`
	TargetAccounts          *DatabaseSqlNullString `json:"TargetAccounts,omitempty"`
	Title                   *DatabaseSqlNullString `json:"Title,omitempty"`
	UniformListingLocator   *DatabaseSqlNullString `json:"UniformListingLocator,omitempty"`
	UpdatedOn               *DatabaseSqlNullTime   `json:"UpdatedOn,omitempty"`
	Name                    *DatabaseSqlNullString `json:"name,omitempty"`
	OrganizationProfileName *DatabaseSqlNullString `json:"organizationProfileName,omitempty"`
}

// NewPkgStructsSnowflakeMarketplaceProduct instantiates a new PkgStructsSnowflakeMarketplaceProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkgStructsSnowflakeMarketplaceProduct() *PkgStructsSnowflakeMarketplaceProduct {
	this := PkgStructsSnowflakeMarketplaceProduct{}
	return &this
}

// NewPkgStructsSnowflakeMarketplaceProductWithDefaults instantiates a new PkgStructsSnowflakeMarketplaceProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkgStructsSnowflakeMarketplaceProductWithDefaults() *PkgStructsSnowflakeMarketplaceProduct {
	this := PkgStructsSnowflakeMarketplaceProduct{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetComment() DatabaseSqlNullString {
	if o == nil || IsNil(o.Comment) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetCommentOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given DatabaseSqlNullString and assigns it to the Comment field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetComment(v DatabaseSqlNullString) {
	o.Comment = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetCreatedOn() DatabaseSqlNullTime {
	if o == nil || IsNil(o.CreatedOn) {
		var ret DatabaseSqlNullTime
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetCreatedOnOk() (*DatabaseSqlNullTime, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given DatabaseSqlNullTime and assigns it to the CreatedOn field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetCreatedOn(v DatabaseSqlNullTime) {
	o.CreatedOn = &v
}

// GetDetailedTargetAccounts returns the DetailedTargetAccounts field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetDetailedTargetAccounts() DatabaseSqlNullString {
	if o == nil || IsNil(o.DetailedTargetAccounts) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.DetailedTargetAccounts
}

// GetDetailedTargetAccountsOk returns a tuple with the DetailedTargetAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetDetailedTargetAccountsOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.DetailedTargetAccounts) {
		return nil, false
	}
	return o.DetailedTargetAccounts, true
}

// HasDetailedTargetAccounts returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasDetailedTargetAccounts() bool {
	if o != nil && !IsNil(o.DetailedTargetAccounts) {
		return true
	}

	return false
}

// SetDetailedTargetAccounts gets a reference to the given DatabaseSqlNullString and assigns it to the DetailedTargetAccounts field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetDetailedTargetAccounts(v DatabaseSqlNullString) {
	o.DetailedTargetAccounts = &v
}

// GetDistribution returns the Distribution field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetDistribution() DatabaseSqlNullString {
	if o == nil || IsNil(o.Distribution) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Distribution
}

// GetDistributionOk returns a tuple with the Distribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetDistributionOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Distribution) {
		return nil, false
	}
	return o.Distribution, true
}

// HasDistribution returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasDistribution() bool {
	if o != nil && !IsNil(o.Distribution) {
		return true
	}

	return false
}

// SetDistribution gets a reference to the given DatabaseSqlNullString and assigns it to the Distribution field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetDistribution(v DatabaseSqlNullString) {
	o.Distribution = &v
}

// GetGlobalName returns the GlobalName field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetGlobalName() DatabaseSqlNullString {
	if o == nil || IsNil(o.GlobalName) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.GlobalName
}

// GetGlobalNameOk returns a tuple with the GlobalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetGlobalNameOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.GlobalName) {
		return nil, false
	}
	return o.GlobalName, true
}

// HasGlobalName returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasGlobalName() bool {
	if o != nil && !IsNil(o.GlobalName) {
		return true
	}

	return false
}

// SetGlobalName gets a reference to the given DatabaseSqlNullString and assigns it to the GlobalName field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetGlobalName(v DatabaseSqlNullString) {
	o.GlobalName = &v
}

// GetIsApplication returns the IsApplication field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsApplication() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsApplication) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsApplication
}

// GetIsApplicationOk returns a tuple with the IsApplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsApplicationOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsApplication) {
		return nil, false
	}
	return o.IsApplication, true
}

// HasIsApplication returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsApplication() bool {
	if o != nil && !IsNil(o.IsApplication) {
		return true
	}

	return false
}

// SetIsApplication gets a reference to the given DatabaseSqlNullBool and assigns it to the IsApplication field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsApplication(v DatabaseSqlNullBool) {
	o.IsApplication = &v
}

// GetIsByRequest returns the IsByRequest field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsByRequest() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsByRequest) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsByRequest
}

// GetIsByRequestOk returns a tuple with the IsByRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsByRequestOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsByRequest) {
		return nil, false
	}
	return o.IsByRequest, true
}

// HasIsByRequest returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsByRequest() bool {
	if o != nil && !IsNil(o.IsByRequest) {
		return true
	}

	return false
}

// SetIsByRequest gets a reference to the given DatabaseSqlNullBool and assigns it to the IsByRequest field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsByRequest(v DatabaseSqlNullBool) {
	o.IsByRequest = &v
}

// GetIsLimitedTrial returns the IsLimitedTrial field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsLimitedTrial() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsLimitedTrial) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsLimitedTrial
}

// GetIsLimitedTrialOk returns a tuple with the IsLimitedTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsLimitedTrialOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsLimitedTrial) {
		return nil, false
	}
	return o.IsLimitedTrial, true
}

// HasIsLimitedTrial returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsLimitedTrial() bool {
	if o != nil && !IsNil(o.IsLimitedTrial) {
		return true
	}

	return false
}

// SetIsLimitedTrial gets a reference to the given DatabaseSqlNullBool and assigns it to the IsLimitedTrial field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsLimitedTrial(v DatabaseSqlNullBool) {
	o.IsLimitedTrial = &v
}

// GetIsMonetized returns the IsMonetized field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsMonetized() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsMonetized) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsMonetized
}

// GetIsMonetizedOk returns a tuple with the IsMonetized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsMonetizedOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsMonetized) {
		return nil, false
	}
	return o.IsMonetized, true
}

// HasIsMonetized returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsMonetized() bool {
	if o != nil && !IsNil(o.IsMonetized) {
		return true
	}

	return false
}

// SetIsMonetized gets a reference to the given DatabaseSqlNullBool and assigns it to the IsMonetized field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsMonetized(v DatabaseSqlNullBool) {
	o.IsMonetized = &v
}

// GetIsMountlessQueryable returns the IsMountlessQueryable field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsMountlessQueryable() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsMountlessQueryable) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsMountlessQueryable
}

// GetIsMountlessQueryableOk returns a tuple with the IsMountlessQueryable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsMountlessQueryableOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsMountlessQueryable) {
		return nil, false
	}
	return o.IsMountlessQueryable, true
}

// HasIsMountlessQueryable returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsMountlessQueryable() bool {
	if o != nil && !IsNil(o.IsMountlessQueryable) {
		return true
	}

	return false
}

// SetIsMountlessQueryable gets a reference to the given DatabaseSqlNullBool and assigns it to the IsMountlessQueryable field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsMountlessQueryable(v DatabaseSqlNullBool) {
	o.IsMountlessQueryable = &v
}

// GetIsTargeted returns the IsTargeted field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsTargeted() DatabaseSqlNullBool {
	if o == nil || IsNil(o.IsTargeted) {
		var ret DatabaseSqlNullBool
		return ret
	}
	return *o.IsTargeted
}

// GetIsTargetedOk returns a tuple with the IsTargeted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetIsTargetedOk() (*DatabaseSqlNullBool, bool) {
	if o == nil || IsNil(o.IsTargeted) {
		return nil, false
	}
	return o.IsTargeted, true
}

// HasIsTargeted returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasIsTargeted() bool {
	if o != nil && !IsNil(o.IsTargeted) {
		return true
	}

	return false
}

// SetIsTargeted gets a reference to the given DatabaseSqlNullBool and assigns it to the IsTargeted field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetIsTargeted(v DatabaseSqlNullBool) {
	o.IsTargeted = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOwner() DatabaseSqlNullString {
	if o == nil || IsNil(o.Owner) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOwnerOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given DatabaseSqlNullString and assigns it to the Owner field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetOwner(v DatabaseSqlNullString) {
	o.Owner = &v
}

// GetOwnerRoleType returns the OwnerRoleType field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOwnerRoleType() DatabaseSqlNullString {
	if o == nil || IsNil(o.OwnerRoleType) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.OwnerRoleType
}

// GetOwnerRoleTypeOk returns a tuple with the OwnerRoleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOwnerRoleTypeOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.OwnerRoleType) {
		return nil, false
	}
	return o.OwnerRoleType, true
}

// HasOwnerRoleType returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasOwnerRoleType() bool {
	if o != nil && !IsNil(o.OwnerRoleType) {
		return true
	}

	return false
}

// SetOwnerRoleType gets a reference to the given DatabaseSqlNullString and assigns it to the OwnerRoleType field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetOwnerRoleType(v DatabaseSqlNullString) {
	o.OwnerRoleType = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetProfile() DatabaseSqlNullString {
	if o == nil || IsNil(o.Profile) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetProfileOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given DatabaseSqlNullString and assigns it to the Profile field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetProfile(v DatabaseSqlNullString) {
	o.Profile = &v
}

// GetPublishedOn returns the PublishedOn field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetPublishedOn() DatabaseSqlNullTime {
	if o == nil || IsNil(o.PublishedOn) {
		var ret DatabaseSqlNullTime
		return ret
	}
	return *o.PublishedOn
}

// GetPublishedOnOk returns a tuple with the PublishedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetPublishedOnOk() (*DatabaseSqlNullTime, bool) {
	if o == nil || IsNil(o.PublishedOn) {
		return nil, false
	}
	return o.PublishedOn, true
}

// HasPublishedOn returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasPublishedOn() bool {
	if o != nil && !IsNil(o.PublishedOn) {
		return true
	}

	return false
}

// SetPublishedOn gets a reference to the given DatabaseSqlNullTime and assigns it to the PublishedOn field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetPublishedOn(v DatabaseSqlNullTime) {
	o.PublishedOn = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetRegions() DatabaseSqlNullString {
	if o == nil || IsNil(o.Regions) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetRegionsOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given DatabaseSqlNullString and assigns it to the Regions field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetRegions(v DatabaseSqlNullString) {
	o.Regions = &v
}

// GetRejectedOn returns the RejectedOn field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetRejectedOn() DatabaseSqlNullTime {
	if o == nil || IsNil(o.RejectedOn) {
		var ret DatabaseSqlNullTime
		return ret
	}
	return *o.RejectedOn
}

// GetRejectedOnOk returns a tuple with the RejectedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetRejectedOnOk() (*DatabaseSqlNullTime, bool) {
	if o == nil || IsNil(o.RejectedOn) {
		return nil, false
	}
	return o.RejectedOn, true
}

// HasRejectedOn returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasRejectedOn() bool {
	if o != nil && !IsNil(o.RejectedOn) {
		return true
	}

	return false
}

// SetRejectedOn gets a reference to the given DatabaseSqlNullTime and assigns it to the RejectedOn field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetRejectedOn(v DatabaseSqlNullTime) {
	o.RejectedOn = &v
}

// GetReviewState returns the ReviewState field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetReviewState() DatabaseSqlNullString {
	if o == nil || IsNil(o.ReviewState) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.ReviewState
}

// GetReviewStateOk returns a tuple with the ReviewState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetReviewStateOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.ReviewState) {
		return nil, false
	}
	return o.ReviewState, true
}

// HasReviewState returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasReviewState() bool {
	if o != nil && !IsNil(o.ReviewState) {
		return true
	}

	return false
}

// SetReviewState gets a reference to the given DatabaseSqlNullString and assigns it to the ReviewState field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetReviewState(v DatabaseSqlNullString) {
	o.ReviewState = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetState() DatabaseSqlNullString {
	if o == nil || IsNil(o.State) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetStateOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given DatabaseSqlNullString and assigns it to the State field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetState(v DatabaseSqlNullString) {
	o.State = &v
}

// GetSubtitle returns the Subtitle field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetSubtitle() DatabaseSqlNullString {
	if o == nil || IsNil(o.Subtitle) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Subtitle
}

// GetSubtitleOk returns a tuple with the Subtitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetSubtitleOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Subtitle) {
		return nil, false
	}
	return o.Subtitle, true
}

// HasSubtitle returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasSubtitle() bool {
	if o != nil && !IsNil(o.Subtitle) {
		return true
	}

	return false
}

// SetSubtitle gets a reference to the given DatabaseSqlNullString and assigns it to the Subtitle field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetSubtitle(v DatabaseSqlNullString) {
	o.Subtitle = &v
}

// GetTargetAccounts returns the TargetAccounts field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetTargetAccounts() DatabaseSqlNullString {
	if o == nil || IsNil(o.TargetAccounts) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.TargetAccounts
}

// GetTargetAccountsOk returns a tuple with the TargetAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetTargetAccountsOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.TargetAccounts) {
		return nil, false
	}
	return o.TargetAccounts, true
}

// HasTargetAccounts returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasTargetAccounts() bool {
	if o != nil && !IsNil(o.TargetAccounts) {
		return true
	}

	return false
}

// SetTargetAccounts gets a reference to the given DatabaseSqlNullString and assigns it to the TargetAccounts field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetTargetAccounts(v DatabaseSqlNullString) {
	o.TargetAccounts = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetTitle() DatabaseSqlNullString {
	if o == nil || IsNil(o.Title) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetTitleOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given DatabaseSqlNullString and assigns it to the Title field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetTitle(v DatabaseSqlNullString) {
	o.Title = &v
}

// GetUniformListingLocator returns the UniformListingLocator field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetUniformListingLocator() DatabaseSqlNullString {
	if o == nil || IsNil(o.UniformListingLocator) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.UniformListingLocator
}

// GetUniformListingLocatorOk returns a tuple with the UniformListingLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetUniformListingLocatorOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.UniformListingLocator) {
		return nil, false
	}
	return o.UniformListingLocator, true
}

// HasUniformListingLocator returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasUniformListingLocator() bool {
	if o != nil && !IsNil(o.UniformListingLocator) {
		return true
	}

	return false
}

// SetUniformListingLocator gets a reference to the given DatabaseSqlNullString and assigns it to the UniformListingLocator field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetUniformListingLocator(v DatabaseSqlNullString) {
	o.UniformListingLocator = &v
}

// GetUpdatedOn returns the UpdatedOn field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetUpdatedOn() DatabaseSqlNullTime {
	if o == nil || IsNil(o.UpdatedOn) {
		var ret DatabaseSqlNullTime
		return ret
	}
	return *o.UpdatedOn
}

// GetUpdatedOnOk returns a tuple with the UpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetUpdatedOnOk() (*DatabaseSqlNullTime, bool) {
	if o == nil || IsNil(o.UpdatedOn) {
		return nil, false
	}
	return o.UpdatedOn, true
}

// HasUpdatedOn returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasUpdatedOn() bool {
	if o != nil && !IsNil(o.UpdatedOn) {
		return true
	}

	return false
}

// SetUpdatedOn gets a reference to the given DatabaseSqlNullTime and assigns it to the UpdatedOn field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetUpdatedOn(v DatabaseSqlNullTime) {
	o.UpdatedOn = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetName() DatabaseSqlNullString {
	if o == nil || IsNil(o.Name) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetNameOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given DatabaseSqlNullString and assigns it to the Name field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetName(v DatabaseSqlNullString) {
	o.Name = &v
}

// GetOrganizationProfileName returns the OrganizationProfileName field value if set, zero value otherwise.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOrganizationProfileName() DatabaseSqlNullString {
	if o == nil || IsNil(o.OrganizationProfileName) {
		var ret DatabaseSqlNullString
		return ret
	}
	return *o.OrganizationProfileName
}

// GetOrganizationProfileNameOk returns a tuple with the OrganizationProfileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) GetOrganizationProfileNameOk() (*DatabaseSqlNullString, bool) {
	if o == nil || IsNil(o.OrganizationProfileName) {
		return nil, false
	}
	return o.OrganizationProfileName, true
}

// HasOrganizationProfileName returns a boolean if a field has been set.
func (o *PkgStructsSnowflakeMarketplaceProduct) HasOrganizationProfileName() bool {
	if o != nil && !IsNil(o.OrganizationProfileName) {
		return true
	}

	return false
}

// SetOrganizationProfileName gets a reference to the given DatabaseSqlNullString and assigns it to the OrganizationProfileName field.
func (o *PkgStructsSnowflakeMarketplaceProduct) SetOrganizationProfileName(v DatabaseSqlNullString) {
	o.OrganizationProfileName = &v
}

func (o PkgStructsSnowflakeMarketplaceProduct) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PkgStructsSnowflakeMarketplaceProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["Comment"] = o.Comment
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["CreatedOn"] = o.CreatedOn
	}
	if !IsNil(o.DetailedTargetAccounts) {
		toSerialize["DetailedTargetAccounts"] = o.DetailedTargetAccounts
	}
	if !IsNil(o.Distribution) {
		toSerialize["Distribution"] = o.Distribution
	}
	if !IsNil(o.GlobalName) {
		toSerialize["GlobalName"] = o.GlobalName
	}
	if !IsNil(o.IsApplication) {
		toSerialize["IsApplication"] = o.IsApplication
	}
	if !IsNil(o.IsByRequest) {
		toSerialize["IsByRequest"] = o.IsByRequest
	}
	if !IsNil(o.IsLimitedTrial) {
		toSerialize["IsLimitedTrial"] = o.IsLimitedTrial
	}
	if !IsNil(o.IsMonetized) {
		toSerialize["IsMonetized"] = o.IsMonetized
	}
	if !IsNil(o.IsMountlessQueryable) {
		toSerialize["IsMountlessQueryable"] = o.IsMountlessQueryable
	}
	if !IsNil(o.IsTargeted) {
		toSerialize["IsTargeted"] = o.IsTargeted
	}
	if !IsNil(o.Owner) {
		toSerialize["Owner"] = o.Owner
	}
	if !IsNil(o.OwnerRoleType) {
		toSerialize["OwnerRoleType"] = o.OwnerRoleType
	}
	if !IsNil(o.Profile) {
		toSerialize["Profile"] = o.Profile
	}
	if !IsNil(o.PublishedOn) {
		toSerialize["PublishedOn"] = o.PublishedOn
	}
	if !IsNil(o.Regions) {
		toSerialize["Regions"] = o.Regions
	}
	if !IsNil(o.RejectedOn) {
		toSerialize["RejectedOn"] = o.RejectedOn
	}
	if !IsNil(o.ReviewState) {
		toSerialize["ReviewState"] = o.ReviewState
	}
	if !IsNil(o.State) {
		toSerialize["State"] = o.State
	}
	if !IsNil(o.Subtitle) {
		toSerialize["Subtitle"] = o.Subtitle
	}
	if !IsNil(o.TargetAccounts) {
		toSerialize["TargetAccounts"] = o.TargetAccounts
	}
	if !IsNil(o.Title) {
		toSerialize["Title"] = o.Title
	}
	if !IsNil(o.UniformListingLocator) {
		toSerialize["UniformListingLocator"] = o.UniformListingLocator
	}
	if !IsNil(o.UpdatedOn) {
		toSerialize["UpdatedOn"] = o.UpdatedOn
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationProfileName) {
		toSerialize["organizationProfileName"] = o.OrganizationProfileName
	}
	return toSerialize, nil
}

type NullablePkgStructsSnowflakeMarketplaceProduct struct {
	value *PkgStructsSnowflakeMarketplaceProduct
	isSet bool
}

func (v NullablePkgStructsSnowflakeMarketplaceProduct) Get() *PkgStructsSnowflakeMarketplaceProduct {
	return v.value
}

func (v *NullablePkgStructsSnowflakeMarketplaceProduct) Set(val *PkgStructsSnowflakeMarketplaceProduct) {
	v.value = val
	v.isSet = true
}

func (v NullablePkgStructsSnowflakeMarketplaceProduct) IsSet() bool {
	return v.isSet
}

func (v *NullablePkgStructsSnowflakeMarketplaceProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkgStructsSnowflakeMarketplaceProduct(val *PkgStructsSnowflakeMarketplaceProduct) *NullablePkgStructsSnowflakeMarketplaceProduct {
	return &NullablePkgStructsSnowflakeMarketplaceProduct{value: val, isSet: true}
}

func (v NullablePkgStructsSnowflakeMarketplaceProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkgStructsSnowflakeMarketplaceProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
