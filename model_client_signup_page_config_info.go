/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the ClientSignupPageConfigInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientSignupPageConfigInfo{}

// ClientSignupPageConfigInfo struct for ClientSignupPageConfigInfo
type ClientSignupPageConfigInfo struct {
	// The cc email contacts of the new client signup notification.
	CcEmails []string `json:"ccEmails,omitempty"`
	// The company logo url of the seller/ISV.
	CompanyLogoUrl *string `json:"companyLogoUrl,omitempty"`
	// The company name of the seller/ISV to show in the client signup page.
	CompanyName *string `json:"companyName,omitempty"`
	// The signup landing image aws url of the organization
	LandingImageUrl *string `json:"landingImageUrl,omitempty"`
	// The email subject of the new client signup notification.
	NotificationEmailSubject *string `json:"notificationEmailSubject,omitempty"`
	// The public notes to append in new client signup notification email.
	PublicNotes *string `json:"publicNotes,omitempty"`
	// The signup ID for the new client signup page url. It is populated by Suger service when creating the new client signup page.
	SignupId *string `json:"signupId,omitempty"`
	// The video link of the product. Optional.
	VideoLink *string `json:"videoLink,omitempty"`
}

// NewClientSignupPageConfigInfo instantiates a new ClientSignupPageConfigInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientSignupPageConfigInfo() *ClientSignupPageConfigInfo {
	this := ClientSignupPageConfigInfo{}
	return &this
}

// NewClientSignupPageConfigInfoWithDefaults instantiates a new ClientSignupPageConfigInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientSignupPageConfigInfoWithDefaults() *ClientSignupPageConfigInfo {
	this := ClientSignupPageConfigInfo{}
	return &this
}

// GetCcEmails returns the CcEmails field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetCcEmails() []string {
	if o == nil || IsNil(o.CcEmails) {
		var ret []string
		return ret
	}
	return o.CcEmails
}

// GetCcEmailsOk returns a tuple with the CcEmails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetCcEmailsOk() ([]string, bool) {
	if o == nil || IsNil(o.CcEmails) {
		return nil, false
	}
	return o.CcEmails, true
}

// HasCcEmails returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasCcEmails() bool {
	if o != nil && !IsNil(o.CcEmails) {
		return true
	}

	return false
}

// SetCcEmails gets a reference to the given []string and assigns it to the CcEmails field.
func (o *ClientSignupPageConfigInfo) SetCcEmails(v []string) {
	o.CcEmails = v
}

// GetCompanyLogoUrl returns the CompanyLogoUrl field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetCompanyLogoUrl() string {
	if o == nil || IsNil(o.CompanyLogoUrl) {
		var ret string
		return ret
	}
	return *o.CompanyLogoUrl
}

// GetCompanyLogoUrlOk returns a tuple with the CompanyLogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetCompanyLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyLogoUrl) {
		return nil, false
	}
	return o.CompanyLogoUrl, true
}

// HasCompanyLogoUrl returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasCompanyLogoUrl() bool {
	if o != nil && !IsNil(o.CompanyLogoUrl) {
		return true
	}

	return false
}

// SetCompanyLogoUrl gets a reference to the given string and assigns it to the CompanyLogoUrl field.
func (o *ClientSignupPageConfigInfo) SetCompanyLogoUrl(v string) {
	o.CompanyLogoUrl = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *ClientSignupPageConfigInfo) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetLandingImageUrl returns the LandingImageUrl field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetLandingImageUrl() string {
	if o == nil || IsNil(o.LandingImageUrl) {
		var ret string
		return ret
	}
	return *o.LandingImageUrl
}

// GetLandingImageUrlOk returns a tuple with the LandingImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetLandingImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LandingImageUrl) {
		return nil, false
	}
	return o.LandingImageUrl, true
}

// HasLandingImageUrl returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasLandingImageUrl() bool {
	if o != nil && !IsNil(o.LandingImageUrl) {
		return true
	}

	return false
}

// SetLandingImageUrl gets a reference to the given string and assigns it to the LandingImageUrl field.
func (o *ClientSignupPageConfigInfo) SetLandingImageUrl(v string) {
	o.LandingImageUrl = &v
}

// GetNotificationEmailSubject returns the NotificationEmailSubject field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetNotificationEmailSubject() string {
	if o == nil || IsNil(o.NotificationEmailSubject) {
		var ret string
		return ret
	}
	return *o.NotificationEmailSubject
}

// GetNotificationEmailSubjectOk returns a tuple with the NotificationEmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetNotificationEmailSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationEmailSubject) {
		return nil, false
	}
	return o.NotificationEmailSubject, true
}

// HasNotificationEmailSubject returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasNotificationEmailSubject() bool {
	if o != nil && !IsNil(o.NotificationEmailSubject) {
		return true
	}

	return false
}

// SetNotificationEmailSubject gets a reference to the given string and assigns it to the NotificationEmailSubject field.
func (o *ClientSignupPageConfigInfo) SetNotificationEmailSubject(v string) {
	o.NotificationEmailSubject = &v
}

// GetPublicNotes returns the PublicNotes field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetPublicNotes() string {
	if o == nil || IsNil(o.PublicNotes) {
		var ret string
		return ret
	}
	return *o.PublicNotes
}

// GetPublicNotesOk returns a tuple with the PublicNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetPublicNotesOk() (*string, bool) {
	if o == nil || IsNil(o.PublicNotes) {
		return nil, false
	}
	return o.PublicNotes, true
}

// HasPublicNotes returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasPublicNotes() bool {
	if o != nil && !IsNil(o.PublicNotes) {
		return true
	}

	return false
}

// SetPublicNotes gets a reference to the given string and assigns it to the PublicNotes field.
func (o *ClientSignupPageConfigInfo) SetPublicNotes(v string) {
	o.PublicNotes = &v
}

// GetSignupId returns the SignupId field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetSignupId() string {
	if o == nil || IsNil(o.SignupId) {
		var ret string
		return ret
	}
	return *o.SignupId
}

// GetSignupIdOk returns a tuple with the SignupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetSignupIdOk() (*string, bool) {
	if o == nil || IsNil(o.SignupId) {
		return nil, false
	}
	return o.SignupId, true
}

// HasSignupId returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasSignupId() bool {
	if o != nil && !IsNil(o.SignupId) {
		return true
	}

	return false
}

// SetSignupId gets a reference to the given string and assigns it to the SignupId field.
func (o *ClientSignupPageConfigInfo) SetSignupId(v string) {
	o.SignupId = &v
}

// GetVideoLink returns the VideoLink field value if set, zero value otherwise.
func (o *ClientSignupPageConfigInfo) GetVideoLink() string {
	if o == nil || IsNil(o.VideoLink) {
		var ret string
		return ret
	}
	return *o.VideoLink
}

// GetVideoLinkOk returns a tuple with the VideoLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSignupPageConfigInfo) GetVideoLinkOk() (*string, bool) {
	if o == nil || IsNil(o.VideoLink) {
		return nil, false
	}
	return o.VideoLink, true
}

// HasVideoLink returns a boolean if a field has been set.
func (o *ClientSignupPageConfigInfo) HasVideoLink() bool {
	if o != nil && !IsNil(o.VideoLink) {
		return true
	}

	return false
}

// SetVideoLink gets a reference to the given string and assigns it to the VideoLink field.
func (o *ClientSignupPageConfigInfo) SetVideoLink(v string) {
	o.VideoLink = &v
}

func (o ClientSignupPageConfigInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientSignupPageConfigInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CcEmails) {
		toSerialize["ccEmails"] = o.CcEmails
	}
	if !IsNil(o.CompanyLogoUrl) {
		toSerialize["companyLogoUrl"] = o.CompanyLogoUrl
	}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	if !IsNil(o.LandingImageUrl) {
		toSerialize["landingImageUrl"] = o.LandingImageUrl
	}
	if !IsNil(o.NotificationEmailSubject) {
		toSerialize["notificationEmailSubject"] = o.NotificationEmailSubject
	}
	if !IsNil(o.PublicNotes) {
		toSerialize["publicNotes"] = o.PublicNotes
	}
	if !IsNil(o.SignupId) {
		toSerialize["signupId"] = o.SignupId
	}
	if !IsNil(o.VideoLink) {
		toSerialize["videoLink"] = o.VideoLink
	}
	return toSerialize, nil
}

type NullableClientSignupPageConfigInfo struct {
	value *ClientSignupPageConfigInfo
	isSet bool
}

func (v NullableClientSignupPageConfigInfo) Get() *ClientSignupPageConfigInfo {
	return v.value
}

func (v *NullableClientSignupPageConfigInfo) Set(val *ClientSignupPageConfigInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableClientSignupPageConfigInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableClientSignupPageConfigInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientSignupPageConfigInfo(val *ClientSignupPageConfigInfo) *NullableClientSignupPageConfigInfo {
	return &NullableClientSignupPageConfigInfo{value: val, isSet: true}
}

func (v NullableClientSignupPageConfigInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientSignupPageConfigInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
