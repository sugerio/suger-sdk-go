/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the PriceModelTiered type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PriceModelTiered{}

// PriceModelTiered struct for PriceModelTiered
type PriceModelTiered struct {
	Tiers []PriceModelTieredConfig `json:"tiers,omitempty"`
}

// NewPriceModelTiered instantiates a new PriceModelTiered object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPriceModelTiered() *PriceModelTiered {
	this := PriceModelTiered{}
	return &this
}

// NewPriceModelTieredWithDefaults instantiates a new PriceModelTiered object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPriceModelTieredWithDefaults() *PriceModelTiered {
	this := PriceModelTiered{}
	return &this
}

// GetTiers returns the Tiers field value if set, zero value otherwise.
func (o *PriceModelTiered) GetTiers() []PriceModelTieredConfig {
	if o == nil || IsNil(o.Tiers) {
		var ret []PriceModelTieredConfig
		return ret
	}
	return o.Tiers
}

// GetTiersOk returns a tuple with the Tiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PriceModelTiered) GetTiersOk() ([]PriceModelTieredConfig, bool) {
	if o == nil || IsNil(o.Tiers) {
		return nil, false
	}
	return o.Tiers, true
}

// HasTiers returns a boolean if a field has been set.
func (o *PriceModelTiered) HasTiers() bool {
	if o != nil && !IsNil(o.Tiers) {
		return true
	}

	return false
}

// SetTiers gets a reference to the given []PriceModelTieredConfig and assigns it to the Tiers field.
func (o *PriceModelTiered) SetTiers(v []PriceModelTieredConfig) {
	o.Tiers = v
}

func (o PriceModelTiered) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PriceModelTiered) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tiers) {
		toSerialize["tiers"] = o.Tiers
	}
	return toSerialize, nil
}

type NullablePriceModelTiered struct {
	value *PriceModelTiered
	isSet bool
}

func (v NullablePriceModelTiered) Get() *PriceModelTiered {
	return v.value
}

func (v *NullablePriceModelTiered) Set(val *PriceModelTiered) {
	v.value = val
	v.isSet = true
}

func (v NullablePriceModelTiered) IsSet() bool {
	return v.isSet
}

func (v *NullablePriceModelTiered) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePriceModelTiered(val *PriceModelTiered) *NullablePriceModelTiered {
	return &NullablePriceModelTiered{value: val, isSet: true}
}

func (v NullablePriceModelTiered) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePriceModelTiered) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
