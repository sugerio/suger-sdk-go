/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InvoiceAdjustDiscountByDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvoiceAdjustDiscountByDimension{}

// InvoiceAdjustDiscountByDimension struct for InvoiceAdjustDiscountByDimension
type InvoiceAdjustDiscountByDimension struct {
	DimensionKey *string          `json:"dimensionKey,omitempty"`
	Discount     *BillingDiscount `json:"discount,omitempty"`
	Reason       *string          `json:"reason,omitempty"`
}

// NewInvoiceAdjustDiscountByDimension instantiates a new InvoiceAdjustDiscountByDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceAdjustDiscountByDimension() *InvoiceAdjustDiscountByDimension {
	this := InvoiceAdjustDiscountByDimension{}
	return &this
}

// NewInvoiceAdjustDiscountByDimensionWithDefaults instantiates a new InvoiceAdjustDiscountByDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceAdjustDiscountByDimensionWithDefaults() *InvoiceAdjustDiscountByDimension {
	this := InvoiceAdjustDiscountByDimension{}
	return &this
}

// GetDimensionKey returns the DimensionKey field value if set, zero value otherwise.
func (o *InvoiceAdjustDiscountByDimension) GetDimensionKey() string {
	if o == nil || IsNil(o.DimensionKey) {
		var ret string
		return ret
	}
	return *o.DimensionKey
}

// GetDimensionKeyOk returns a tuple with the DimensionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustDiscountByDimension) GetDimensionKeyOk() (*string, bool) {
	if o == nil || IsNil(o.DimensionKey) {
		return nil, false
	}
	return o.DimensionKey, true
}

// HasDimensionKey returns a boolean if a field has been set.
func (o *InvoiceAdjustDiscountByDimension) HasDimensionKey() bool {
	if o != nil && !IsNil(o.DimensionKey) {
		return true
	}

	return false
}

// SetDimensionKey gets a reference to the given string and assigns it to the DimensionKey field.
func (o *InvoiceAdjustDiscountByDimension) SetDimensionKey(v string) {
	o.DimensionKey = &v
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *InvoiceAdjustDiscountByDimension) GetDiscount() BillingDiscount {
	if o == nil || IsNil(o.Discount) {
		var ret BillingDiscount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustDiscountByDimension) GetDiscountOk() (*BillingDiscount, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *InvoiceAdjustDiscountByDimension) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given BillingDiscount and assigns it to the Discount field.
func (o *InvoiceAdjustDiscountByDimension) SetDiscount(v BillingDiscount) {
	o.Discount = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *InvoiceAdjustDiscountByDimension) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvoiceAdjustDiscountByDimension) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *InvoiceAdjustDiscountByDimension) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *InvoiceAdjustDiscountByDimension) SetReason(v string) {
	o.Reason = &v
}

func (o InvoiceAdjustDiscountByDimension) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvoiceAdjustDiscountByDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DimensionKey) {
		toSerialize["dimensionKey"] = o.DimensionKey
	}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableInvoiceAdjustDiscountByDimension struct {
	value *InvoiceAdjustDiscountByDimension
	isSet bool
}

func (v NullableInvoiceAdjustDiscountByDimension) Get() *InvoiceAdjustDiscountByDimension {
	return v.value
}

func (v *NullableInvoiceAdjustDiscountByDimension) Set(val *InvoiceAdjustDiscountByDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceAdjustDiscountByDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceAdjustDiscountByDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceAdjustDiscountByDimension(val *InvoiceAdjustDiscountByDimension) *NullableInvoiceAdjustDiscountByDimension {
	return &NullableInvoiceAdjustDiscountByDimension{value: val, isSet: true}
}

func (v NullableInvoiceAdjustDiscountByDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceAdjustDiscountByDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
