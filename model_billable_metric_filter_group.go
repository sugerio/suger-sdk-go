/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillableMetricFilterGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillableMetricFilterGroup{}

// BillableMetricFilterGroup struct for BillableMetricFilterGroup
type BillableMetricFilterGroup struct {
	Filters []BillableMetricFilter `json:"filters,omitempty"`
}

// NewBillableMetricFilterGroup instantiates a new BillableMetricFilterGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillableMetricFilterGroup() *BillableMetricFilterGroup {
	this := BillableMetricFilterGroup{}
	return &this
}

// NewBillableMetricFilterGroupWithDefaults instantiates a new BillableMetricFilterGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillableMetricFilterGroupWithDefaults() *BillableMetricFilterGroup {
	this := BillableMetricFilterGroup{}
	return &this
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *BillableMetricFilterGroup) GetFilters() []BillableMetricFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []BillableMetricFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableMetricFilterGroup) GetFiltersOk() ([]BillableMetricFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *BillableMetricFilterGroup) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []BillableMetricFilter and assigns it to the Filters field.
func (o *BillableMetricFilterGroup) SetFilters(v []BillableMetricFilter) {
	o.Filters = v
}

func (o BillableMetricFilterGroup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillableMetricFilterGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	return toSerialize, nil
}

type NullableBillableMetricFilterGroup struct {
	value *BillableMetricFilterGroup
	isSet bool
}

func (v NullableBillableMetricFilterGroup) Get() *BillableMetricFilterGroup {
	return v.value
}

func (v *NullableBillableMetricFilterGroup) Set(val *BillableMetricFilterGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableBillableMetricFilterGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableBillableMetricFilterGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillableMetricFilterGroup(val *BillableMetricFilterGroup) *NullableBillableMetricFilterGroup {
	return &NullableBillableMetricFilterGroup{value: val, isSet: true}
}

func (v NullableBillableMetricFilterGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillableMetricFilterGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
