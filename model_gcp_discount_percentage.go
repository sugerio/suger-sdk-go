/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpDiscountPercentage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpDiscountPercentage{}

// GcpDiscountPercentage struct for GcpDiscountPercentage
type GcpDiscountPercentage struct {
	Nanos *int32 `json:"nanos,omitempty"`
	Units *string `json:"units,omitempty"`
}

// NewGcpDiscountPercentage instantiates a new GcpDiscountPercentage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpDiscountPercentage() *GcpDiscountPercentage {
	this := GcpDiscountPercentage{}
	return &this
}

// NewGcpDiscountPercentageWithDefaults instantiates a new GcpDiscountPercentage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpDiscountPercentageWithDefaults() *GcpDiscountPercentage {
	this := GcpDiscountPercentage{}
	return &this
}

// GetNanos returns the Nanos field value if set, zero value otherwise.
func (o *GcpDiscountPercentage) GetNanos() int32 {
	if o == nil || IsNil(o.Nanos) {
		var ret int32
		return ret
	}
	return *o.Nanos
}

// GetNanosOk returns a tuple with the Nanos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpDiscountPercentage) GetNanosOk() (*int32, bool) {
	if o == nil || IsNil(o.Nanos) {
		return nil, false
	}
	return o.Nanos, true
}

// HasNanos returns a boolean if a field has been set.
func (o *GcpDiscountPercentage) HasNanos() bool {
	if o != nil && !IsNil(o.Nanos) {
		return true
	}

	return false
}

// SetNanos gets a reference to the given int32 and assigns it to the Nanos field.
func (o *GcpDiscountPercentage) SetNanos(v int32) {
	o.Nanos = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *GcpDiscountPercentage) GetUnits() string {
	if o == nil || IsNil(o.Units) {
		var ret string
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpDiscountPercentage) GetUnitsOk() (*string, bool) {
	if o == nil || IsNil(o.Units) {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *GcpDiscountPercentage) HasUnits() bool {
	if o != nil && !IsNil(o.Units) {
		return true
	}

	return false
}

// SetUnits gets a reference to the given string and assigns it to the Units field.
func (o *GcpDiscountPercentage) SetUnits(v string) {
	o.Units = &v
}

func (o GcpDiscountPercentage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpDiscountPercentage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Nanos) {
		toSerialize["nanos"] = o.Nanos
	}
	if !IsNil(o.Units) {
		toSerialize["units"] = o.Units
	}
	return toSerialize, nil
}

type NullableGcpDiscountPercentage struct {
	value *GcpDiscountPercentage
	isSet bool
}

func (v NullableGcpDiscountPercentage) Get() *GcpDiscountPercentage {
	return v.value
}

func (v *NullableGcpDiscountPercentage) Set(val *GcpDiscountPercentage) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpDiscountPercentage) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpDiscountPercentage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpDiscountPercentage(val *GcpDiscountPercentage) *NullableGcpDiscountPercentage {
	return &NullableGcpDiscountPercentage{value: val, isSet: true}
}

func (v NullableGcpDiscountPercentage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpDiscountPercentage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


