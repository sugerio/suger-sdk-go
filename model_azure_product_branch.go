/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureProductBranch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProductBranch{}

// AzureProductBranch struct for AzureProductBranch
type AzureProductBranch struct {
	CurrentDraftInstanceID *string `json:"currentDraftInstanceID,omitempty"`
	FriendlyName           *string `json:"friendlyName,omitempty"`
	Id                     *string `json:"id,omitempty"`
	Module                 *string `json:"module,omitempty"`
	ResourceType           *string `json:"resourceType,omitempty"`
	Type                   *string `json:"type,omitempty"`
	VariantID              *string `json:"variantID,omitempty"`
}

// NewAzureProductBranch instantiates a new AzureProductBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProductBranch() *AzureProductBranch {
	this := AzureProductBranch{}
	return &this
}

// NewAzureProductBranchWithDefaults instantiates a new AzureProductBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductBranchWithDefaults() *AzureProductBranch {
	this := AzureProductBranch{}
	return &this
}

// GetCurrentDraftInstanceID returns the CurrentDraftInstanceID field value if set, zero value otherwise.
func (o *AzureProductBranch) GetCurrentDraftInstanceID() string {
	if o == nil || IsNil(o.CurrentDraftInstanceID) {
		var ret string
		return ret
	}
	return *o.CurrentDraftInstanceID
}

// GetCurrentDraftInstanceIDOk returns a tuple with the CurrentDraftInstanceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetCurrentDraftInstanceIDOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentDraftInstanceID) {
		return nil, false
	}
	return o.CurrentDraftInstanceID, true
}

// HasCurrentDraftInstanceID returns a boolean if a field has been set.
func (o *AzureProductBranch) HasCurrentDraftInstanceID() bool {
	if o != nil && !IsNil(o.CurrentDraftInstanceID) {
		return true
	}

	return false
}

// SetCurrentDraftInstanceID gets a reference to the given string and assigns it to the CurrentDraftInstanceID field.
func (o *AzureProductBranch) SetCurrentDraftInstanceID(v string) {
	o.CurrentDraftInstanceID = &v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *AzureProductBranch) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *AzureProductBranch) HasFriendlyName() bool {
	if o != nil && !IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *AzureProductBranch) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureProductBranch) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureProductBranch) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureProductBranch) SetId(v string) {
	o.Id = &v
}

// GetModule returns the Module field value if set, zero value otherwise.
func (o *AzureProductBranch) GetModule() string {
	if o == nil || IsNil(o.Module) {
		var ret string
		return ret
	}
	return *o.Module
}

// GetModuleOk returns a tuple with the Module field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetModuleOk() (*string, bool) {
	if o == nil || IsNil(o.Module) {
		return nil, false
	}
	return o.Module, true
}

// HasModule returns a boolean if a field has been set.
func (o *AzureProductBranch) HasModule() bool {
	if o != nil && !IsNil(o.Module) {
		return true
	}

	return false
}

// SetModule gets a reference to the given string and assigns it to the Module field.
func (o *AzureProductBranch) SetModule(v string) {
	o.Module = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureProductBranch) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AzureProductBranch) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AzureProductBranch) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AzureProductBranch) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AzureProductBranch) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AzureProductBranch) SetType(v string) {
	o.Type = &v
}

// GetVariantID returns the VariantID field value if set, zero value otherwise.
func (o *AzureProductBranch) GetVariantID() string {
	if o == nil || IsNil(o.VariantID) {
		var ret string
		return ret
	}
	return *o.VariantID
}

// GetVariantIDOk returns a tuple with the VariantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductBranch) GetVariantIDOk() (*string, bool) {
	if o == nil || IsNil(o.VariantID) {
		return nil, false
	}
	return o.VariantID, true
}

// HasVariantID returns a boolean if a field has been set.
func (o *AzureProductBranch) HasVariantID() bool {
	if o != nil && !IsNil(o.VariantID) {
		return true
	}

	return false
}

// SetVariantID gets a reference to the given string and assigns it to the VariantID field.
func (o *AzureProductBranch) SetVariantID(v string) {
	o.VariantID = &v
}

func (o AzureProductBranch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProductBranch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentDraftInstanceID) {
		toSerialize["currentDraftInstanceID"] = o.CurrentDraftInstanceID
	}
	if !IsNil(o.FriendlyName) {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Module) {
		toSerialize["module"] = o.Module
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VariantID) {
		toSerialize["variantID"] = o.VariantID
	}
	return toSerialize, nil
}

type NullableAzureProductBranch struct {
	value *AzureProductBranch
	isSet bool
}

func (v NullableAzureProductBranch) Get() *AzureProductBranch {
	return v.value
}

func (v *NullableAzureProductBranch) Set(val *AzureProductBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProductBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProductBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProductBranch(val *AzureProductBranch) *NullableAzureProductBranch {
	return &NullableAzureProductBranch{value: val, isSet: true}
}

func (v NullableAzureProductBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProductBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
