/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureProductAvailability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProductAvailability{}

// AzureProductAvailability struct for AzureProductAvailability
type AzureProductAvailability struct {
	EmailAudiences        []AzureAudience `json:"emailAudiences,omitempty"`
	EnterpriseLicensing   *string         `json:"enterpriseLicensing,omitempty"`
	Id                    *string         `json:"id,omitempty"`
	ResourceType          *string         `json:"resourceType,omitempty"`
	SubscriptionAudiences []AzureAudience `json:"subscriptionAudiences,omitempty"`
	Visibility            *string         `json:"visibility,omitempty"`
}

// NewAzureProductAvailability instantiates a new AzureProductAvailability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProductAvailability() *AzureProductAvailability {
	this := AzureProductAvailability{}
	return &this
}

// NewAzureProductAvailabilityWithDefaults instantiates a new AzureProductAvailability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductAvailabilityWithDefaults() *AzureProductAvailability {
	this := AzureProductAvailability{}
	return &this
}

// GetEmailAudiences returns the EmailAudiences field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetEmailAudiences() []AzureAudience {
	if o == nil || IsNil(o.EmailAudiences) {
		var ret []AzureAudience
		return ret
	}
	return o.EmailAudiences
}

// GetEmailAudiencesOk returns a tuple with the EmailAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetEmailAudiencesOk() ([]AzureAudience, bool) {
	if o == nil || IsNil(o.EmailAudiences) {
		return nil, false
	}
	return o.EmailAudiences, true
}

// HasEmailAudiences returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasEmailAudiences() bool {
	if o != nil && !IsNil(o.EmailAudiences) {
		return true
	}

	return false
}

// SetEmailAudiences gets a reference to the given []AzureAudience and assigns it to the EmailAudiences field.
func (o *AzureProductAvailability) SetEmailAudiences(v []AzureAudience) {
	o.EmailAudiences = v
}

// GetEnterpriseLicensing returns the EnterpriseLicensing field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetEnterpriseLicensing() string {
	if o == nil || IsNil(o.EnterpriseLicensing) {
		var ret string
		return ret
	}
	return *o.EnterpriseLicensing
}

// GetEnterpriseLicensingOk returns a tuple with the EnterpriseLicensing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetEnterpriseLicensingOk() (*string, bool) {
	if o == nil || IsNil(o.EnterpriseLicensing) {
		return nil, false
	}
	return o.EnterpriseLicensing, true
}

// HasEnterpriseLicensing returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasEnterpriseLicensing() bool {
	if o != nil && !IsNil(o.EnterpriseLicensing) {
		return true
	}

	return false
}

// SetEnterpriseLicensing gets a reference to the given string and assigns it to the EnterpriseLicensing field.
func (o *AzureProductAvailability) SetEnterpriseLicensing(v string) {
	o.EnterpriseLicensing = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureProductAvailability) SetId(v string) {
	o.Id = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AzureProductAvailability) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetSubscriptionAudiences returns the SubscriptionAudiences field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetSubscriptionAudiences() []AzureAudience {
	if o == nil || IsNil(o.SubscriptionAudiences) {
		var ret []AzureAudience
		return ret
	}
	return o.SubscriptionAudiences
}

// GetSubscriptionAudiencesOk returns a tuple with the SubscriptionAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetSubscriptionAudiencesOk() ([]AzureAudience, bool) {
	if o == nil || IsNil(o.SubscriptionAudiences) {
		return nil, false
	}
	return o.SubscriptionAudiences, true
}

// HasSubscriptionAudiences returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasSubscriptionAudiences() bool {
	if o != nil && !IsNil(o.SubscriptionAudiences) {
		return true
	}

	return false
}

// SetSubscriptionAudiences gets a reference to the given []AzureAudience and assigns it to the SubscriptionAudiences field.
func (o *AzureProductAvailability) SetSubscriptionAudiences(v []AzureAudience) {
	o.SubscriptionAudiences = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AzureProductAvailability) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductAvailability) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AzureProductAvailability) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AzureProductAvailability) SetVisibility(v string) {
	o.Visibility = &v
}

func (o AzureProductAvailability) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProductAvailability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailAudiences) {
		toSerialize["emailAudiences"] = o.EmailAudiences
	}
	if !IsNil(o.EnterpriseLicensing) {
		toSerialize["enterpriseLicensing"] = o.EnterpriseLicensing
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.SubscriptionAudiences) {
		toSerialize["subscriptionAudiences"] = o.SubscriptionAudiences
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableAzureProductAvailability struct {
	value *AzureProductAvailability
	isSet bool
}

func (v NullableAzureProductAvailability) Get() *AzureProductAvailability {
	return v.value
}

func (v *NullableAzureProductAvailability) Set(val *AzureProductAvailability) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProductAvailability) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProductAvailability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProductAvailability(val *AzureProductAvailability) *NullableAzureProductAvailability {
	return &NullableAzureProductAvailability{value: val, isSet: true}
}

func (v NullableAzureProductAvailability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProductAvailability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
