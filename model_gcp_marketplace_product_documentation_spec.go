/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductDocumentationSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductDocumentationSpec{}

// GcpMarketplaceProductDocumentationSpec struct for GcpMarketplaceProductDocumentationSpec
type GcpMarketplaceProductDocumentationSpec struct {
	Description *string `json:"description,omitempty"`
	Title *string `json:"title,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewGcpMarketplaceProductDocumentationSpec instantiates a new GcpMarketplaceProductDocumentationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductDocumentationSpec() *GcpMarketplaceProductDocumentationSpec {
	this := GcpMarketplaceProductDocumentationSpec{}
	return &this
}

// NewGcpMarketplaceProductDocumentationSpecWithDefaults instantiates a new GcpMarketplaceProductDocumentationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductDocumentationSpecWithDefaults() *GcpMarketplaceProductDocumentationSpec {
	this := GcpMarketplaceProductDocumentationSpec{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GcpMarketplaceProductDocumentationSpec) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductDocumentationSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GcpMarketplaceProductDocumentationSpec) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GcpMarketplaceProductDocumentationSpec) SetDescription(v string) {
	o.Description = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *GcpMarketplaceProductDocumentationSpec) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductDocumentationSpec) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *GcpMarketplaceProductDocumentationSpec) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *GcpMarketplaceProductDocumentationSpec) SetTitle(v string) {
	o.Title = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *GcpMarketplaceProductDocumentationSpec) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductDocumentationSpec) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *GcpMarketplaceProductDocumentationSpec) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *GcpMarketplaceProductDocumentationSpec) SetUri(v string) {
	o.Uri = &v
}

func (o GcpMarketplaceProductDocumentationSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductDocumentationSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductDocumentationSpec struct {
	value *GcpMarketplaceProductDocumentationSpec
	isSet bool
}

func (v NullableGcpMarketplaceProductDocumentationSpec) Get() *GcpMarketplaceProductDocumentationSpec {
	return v.value
}

func (v *NullableGcpMarketplaceProductDocumentationSpec) Set(val *GcpMarketplaceProductDocumentationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductDocumentationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductDocumentationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductDocumentationSpec(val *GcpMarketplaceProductDocumentationSpec) *NullableGcpMarketplaceProductDocumentationSpec {
	return &NullableGcpMarketplaceProductDocumentationSpec{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductDocumentationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductDocumentationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


