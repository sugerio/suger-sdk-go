/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityAudience type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityAudience{}

// AzureMarketplacePriceAndAvailabilityAudience struct for AzureMarketplacePriceAndAvailabilityAudience
type AzureMarketplacePriceAndAvailabilityAudience struct {
	Id    *string `json:"id,omitempty"`
	Label *string `json:"label,omitempty"`
	Type  *string `json:"type,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityAudience instantiates a new AzureMarketplacePriceAndAvailabilityAudience object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityAudience() *AzureMarketplacePriceAndAvailabilityAudience {
	this := AzureMarketplacePriceAndAvailabilityAudience{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityAudienceWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityAudience object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityAudienceWithDefaults() *AzureMarketplacePriceAndAvailabilityAudience {
	this := AzureMarketplacePriceAndAvailabilityAudience{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplacePriceAndAvailabilityAudience) SetId(v string) {
	o.Id = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *AzureMarketplacePriceAndAvailabilityAudience) SetLabel(v string) {
	o.Label = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityAudience) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AzureMarketplacePriceAndAvailabilityAudience) SetType(v string) {
	o.Type = &v
}

func (o AzureMarketplacePriceAndAvailabilityAudience) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityAudience) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityAudience struct {
	value *AzureMarketplacePriceAndAvailabilityAudience
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityAudience) Get() *AzureMarketplacePriceAndAvailabilityAudience {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityAudience) Set(val *AzureMarketplacePriceAndAvailabilityAudience) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityAudience) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityAudience) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityAudience(val *AzureMarketplacePriceAndAvailabilityAudience) *NullableAzureMarketplacePriceAndAvailabilityAudience {
	return &NullableAzureMarketplacePriceAndAvailabilityAudience{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityAudience) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityAudience) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
