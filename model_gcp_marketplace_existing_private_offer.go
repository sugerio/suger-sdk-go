/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceExistingPrivateOffer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceExistingPrivateOffer{}

// GcpMarketplaceExistingPrivateOffer struct for GcpMarketplaceExistingPrivateOffer
type GcpMarketplaceExistingPrivateOffer struct {
	Agreement *string `json:"agreement,omitempty"`
	CustomEula *GcpMarketplaceDocument `json:"customEula,omitempty"`
	InstallmentTimeline *GcpMarketplacePrivateOfferInstallmentTimeline `json:"installmentTimeline,omitempty"`
	// GCP private offer resource name.
	Name *string `json:"name,omitempty"`
	OfferTerm *GcpMarketplacePrivateOfferTerm `json:"offerTerm,omitempty"`
	PaymentSchedule *GcpMarketplacePaymentScheduleType `json:"paymentSchedule,omitempty"`
	PriceModel *GcpMarketplacePrivateOfferPriceModel `json:"priceModel,omitempty"`
	// The Plan of the offer.
	ServiceLevel *string `json:"serviceLevel,omitempty"`
}

// NewGcpMarketplaceExistingPrivateOffer instantiates a new GcpMarketplaceExistingPrivateOffer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceExistingPrivateOffer() *GcpMarketplaceExistingPrivateOffer {
	this := GcpMarketplaceExistingPrivateOffer{}
	return &this
}

// NewGcpMarketplaceExistingPrivateOfferWithDefaults instantiates a new GcpMarketplaceExistingPrivateOffer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceExistingPrivateOfferWithDefaults() *GcpMarketplaceExistingPrivateOffer {
	this := GcpMarketplaceExistingPrivateOffer{}
	return &this
}

// GetAgreement returns the Agreement field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetAgreement() string {
	if o == nil || IsNil(o.Agreement) {
		var ret string
		return ret
	}
	return *o.Agreement
}

// GetAgreementOk returns a tuple with the Agreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetAgreementOk() (*string, bool) {
	if o == nil || IsNil(o.Agreement) {
		return nil, false
	}
	return o.Agreement, true
}

// HasAgreement returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasAgreement() bool {
	if o != nil && !IsNil(o.Agreement) {
		return true
	}

	return false
}

// SetAgreement gets a reference to the given string and assigns it to the Agreement field.
func (o *GcpMarketplaceExistingPrivateOffer) SetAgreement(v string) {
	o.Agreement = &v
}

// GetCustomEula returns the CustomEula field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetCustomEula() GcpMarketplaceDocument {
	if o == nil || IsNil(o.CustomEula) {
		var ret GcpMarketplaceDocument
		return ret
	}
	return *o.CustomEula
}

// GetCustomEulaOk returns a tuple with the CustomEula field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetCustomEulaOk() (*GcpMarketplaceDocument, bool) {
	if o == nil || IsNil(o.CustomEula) {
		return nil, false
	}
	return o.CustomEula, true
}

// HasCustomEula returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasCustomEula() bool {
	if o != nil && !IsNil(o.CustomEula) {
		return true
	}

	return false
}

// SetCustomEula gets a reference to the given GcpMarketplaceDocument and assigns it to the CustomEula field.
func (o *GcpMarketplaceExistingPrivateOffer) SetCustomEula(v GcpMarketplaceDocument) {
	o.CustomEula = &v
}

// GetInstallmentTimeline returns the InstallmentTimeline field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetInstallmentTimeline() GcpMarketplacePrivateOfferInstallmentTimeline {
	if o == nil || IsNil(o.InstallmentTimeline) {
		var ret GcpMarketplacePrivateOfferInstallmentTimeline
		return ret
	}
	return *o.InstallmentTimeline
}

// GetInstallmentTimelineOk returns a tuple with the InstallmentTimeline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetInstallmentTimelineOk() (*GcpMarketplacePrivateOfferInstallmentTimeline, bool) {
	if o == nil || IsNil(o.InstallmentTimeline) {
		return nil, false
	}
	return o.InstallmentTimeline, true
}

// HasInstallmentTimeline returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasInstallmentTimeline() bool {
	if o != nil && !IsNil(o.InstallmentTimeline) {
		return true
	}

	return false
}

// SetInstallmentTimeline gets a reference to the given GcpMarketplacePrivateOfferInstallmentTimeline and assigns it to the InstallmentTimeline field.
func (o *GcpMarketplaceExistingPrivateOffer) SetInstallmentTimeline(v GcpMarketplacePrivateOfferInstallmentTimeline) {
	o.InstallmentTimeline = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GcpMarketplaceExistingPrivateOffer) SetName(v string) {
	o.Name = &v
}

// GetOfferTerm returns the OfferTerm field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetOfferTerm() GcpMarketplacePrivateOfferTerm {
	if o == nil || IsNil(o.OfferTerm) {
		var ret GcpMarketplacePrivateOfferTerm
		return ret
	}
	return *o.OfferTerm
}

// GetOfferTermOk returns a tuple with the OfferTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetOfferTermOk() (*GcpMarketplacePrivateOfferTerm, bool) {
	if o == nil || IsNil(o.OfferTerm) {
		return nil, false
	}
	return o.OfferTerm, true
}

// HasOfferTerm returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasOfferTerm() bool {
	if o != nil && !IsNil(o.OfferTerm) {
		return true
	}

	return false
}

// SetOfferTerm gets a reference to the given GcpMarketplacePrivateOfferTerm and assigns it to the OfferTerm field.
func (o *GcpMarketplaceExistingPrivateOffer) SetOfferTerm(v GcpMarketplacePrivateOfferTerm) {
	o.OfferTerm = &v
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetPaymentSchedule() GcpMarketplacePaymentScheduleType {
	if o == nil || IsNil(o.PaymentSchedule) {
		var ret GcpMarketplacePaymentScheduleType
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetPaymentScheduleOk() (*GcpMarketplacePaymentScheduleType, bool) {
	if o == nil || IsNil(o.PaymentSchedule) {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasPaymentSchedule() bool {
	if o != nil && !IsNil(o.PaymentSchedule) {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given GcpMarketplacePaymentScheduleType and assigns it to the PaymentSchedule field.
func (o *GcpMarketplaceExistingPrivateOffer) SetPaymentSchedule(v GcpMarketplacePaymentScheduleType) {
	o.PaymentSchedule = &v
}

// GetPriceModel returns the PriceModel field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetPriceModel() GcpMarketplacePrivateOfferPriceModel {
	if o == nil || IsNil(o.PriceModel) {
		var ret GcpMarketplacePrivateOfferPriceModel
		return ret
	}
	return *o.PriceModel
}

// GetPriceModelOk returns a tuple with the PriceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetPriceModelOk() (*GcpMarketplacePrivateOfferPriceModel, bool) {
	if o == nil || IsNil(o.PriceModel) {
		return nil, false
	}
	return o.PriceModel, true
}

// HasPriceModel returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasPriceModel() bool {
	if o != nil && !IsNil(o.PriceModel) {
		return true
	}

	return false
}

// SetPriceModel gets a reference to the given GcpMarketplacePrivateOfferPriceModel and assigns it to the PriceModel field.
func (o *GcpMarketplaceExistingPrivateOffer) SetPriceModel(v GcpMarketplacePrivateOfferPriceModel) {
	o.PriceModel = &v
}

// GetServiceLevel returns the ServiceLevel field value if set, zero value otherwise.
func (o *GcpMarketplaceExistingPrivateOffer) GetServiceLevel() string {
	if o == nil || IsNil(o.ServiceLevel) {
		var ret string
		return ret
	}
	return *o.ServiceLevel
}

// GetServiceLevelOk returns a tuple with the ServiceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceExistingPrivateOffer) GetServiceLevelOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceLevel) {
		return nil, false
	}
	return o.ServiceLevel, true
}

// HasServiceLevel returns a boolean if a field has been set.
func (o *GcpMarketplaceExistingPrivateOffer) HasServiceLevel() bool {
	if o != nil && !IsNil(o.ServiceLevel) {
		return true
	}

	return false
}

// SetServiceLevel gets a reference to the given string and assigns it to the ServiceLevel field.
func (o *GcpMarketplaceExistingPrivateOffer) SetServiceLevel(v string) {
	o.ServiceLevel = &v
}

func (o GcpMarketplaceExistingPrivateOffer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceExistingPrivateOffer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Agreement) {
		toSerialize["agreement"] = o.Agreement
	}
	if !IsNil(o.CustomEula) {
		toSerialize["customEula"] = o.CustomEula
	}
	if !IsNil(o.InstallmentTimeline) {
		toSerialize["installmentTimeline"] = o.InstallmentTimeline
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OfferTerm) {
		toSerialize["offerTerm"] = o.OfferTerm
	}
	if !IsNil(o.PaymentSchedule) {
		toSerialize["paymentSchedule"] = o.PaymentSchedule
	}
	if !IsNil(o.PriceModel) {
		toSerialize["priceModel"] = o.PriceModel
	}
	if !IsNil(o.ServiceLevel) {
		toSerialize["serviceLevel"] = o.ServiceLevel
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceExistingPrivateOffer struct {
	value *GcpMarketplaceExistingPrivateOffer
	isSet bool
}

func (v NullableGcpMarketplaceExistingPrivateOffer) Get() *GcpMarketplaceExistingPrivateOffer {
	return v.value
}

func (v *NullableGcpMarketplaceExistingPrivateOffer) Set(val *GcpMarketplaceExistingPrivateOffer) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceExistingPrivateOffer) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceExistingPrivateOffer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceExistingPrivateOffer(val *GcpMarketplaceExistingPrivateOffer) *NullableGcpMarketplaceExistingPrivateOffer {
	return &NullableGcpMarketplaceExistingPrivateOffer{value: val, isSet: true}
}

func (v NullableGcpMarketplaceExistingPrivateOffer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceExistingPrivateOffer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


