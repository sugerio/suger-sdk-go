/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureMarketplacePriceAndAvailabilityPlan type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplacePriceAndAvailabilityPlan{}

// AzureMarketplacePriceAndAvailabilityPlan struct for AzureMarketplacePriceAndAvailabilityPlan
type AzureMarketplacePriceAndAvailabilityPlan struct {
	Schema              *string                                                   `json:"$schema,omitempty"`
	Audience            *string                                                   `json:"audience,omitempty"`
	BillingTag          *string                                                   `json:"billingTag,omitempty"`
	Id                  *string                                                   `json:"id,omitempty"`
	Markets             []string                                                  `json:"markets,omitempty"`
	MeterDefine         *string                                                   `json:"meterDefine,omitempty"`
	Plan                *string                                                   `json:"plan,omitempty"`
	Pricing             *AzureMarketplacePriceAndAvailabilityPrice                `json:"pricing,omitempty"`
	PrivateAudiences    []AzureMarketplacePriceAndAvailabilityAudience            `json:"privateAudiences,omitempty"`
	Product             *string                                                   `json:"product,omitempty"`
	ResourceName        *string                                                   `json:"resourceName,omitempty"`
	SoftwareReservation []AzureMarketplacePriceAndAvailabilitySoftwareReservation `json:"softwareReservation,omitempty"`
	Trial               *AzureMarketplaceTerm                                     `json:"trial,omitempty"`
	Validations         []AzureMarketplaceValidation                              `json:"validations,omitempty"`
	Visibility          *string                                                   `json:"visibility,omitempty"`
}

// NewAzureMarketplacePriceAndAvailabilityPlan instantiates a new AzureMarketplacePriceAndAvailabilityPlan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplacePriceAndAvailabilityPlan() *AzureMarketplacePriceAndAvailabilityPlan {
	this := AzureMarketplacePriceAndAvailabilityPlan{}
	return &this
}

// NewAzureMarketplacePriceAndAvailabilityPlanWithDefaults instantiates a new AzureMarketplacePriceAndAvailabilityPlan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplacePriceAndAvailabilityPlanWithDefaults() *AzureMarketplacePriceAndAvailabilityPlan {
	this := AzureMarketplacePriceAndAvailabilityPlan{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetSchema(v string) {
	o.Schema = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetAudience() string {
	if o == nil || IsNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetAudienceOk() (*string, bool) {
	if o == nil || IsNil(o.Audience) {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasAudience() bool {
	if o != nil && !IsNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetAudience(v string) {
	o.Audience = &v
}

// GetBillingTag returns the BillingTag field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetBillingTag() string {
	if o == nil || IsNil(o.BillingTag) {
		var ret string
		return ret
	}
	return *o.BillingTag
}

// GetBillingTagOk returns a tuple with the BillingTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetBillingTagOk() (*string, bool) {
	if o == nil || IsNil(o.BillingTag) {
		return nil, false
	}
	return o.BillingTag, true
}

// HasBillingTag returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasBillingTag() bool {
	if o != nil && !IsNil(o.BillingTag) {
		return true
	}

	return false
}

// SetBillingTag gets a reference to the given string and assigns it to the BillingTag field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetBillingTag(v string) {
	o.BillingTag = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetId(v string) {
	o.Id = &v
}

// GetMarkets returns the Markets field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetMarkets() []string {
	if o == nil || IsNil(o.Markets) {
		var ret []string
		return ret
	}
	return o.Markets
}

// GetMarketsOk returns a tuple with the Markets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetMarketsOk() ([]string, bool) {
	if o == nil || IsNil(o.Markets) {
		return nil, false
	}
	return o.Markets, true
}

// HasMarkets returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasMarkets() bool {
	if o != nil && !IsNil(o.Markets) {
		return true
	}

	return false
}

// SetMarkets gets a reference to the given []string and assigns it to the Markets field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetMarkets(v []string) {
	o.Markets = v
}

// GetMeterDefine returns the MeterDefine field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetMeterDefine() string {
	if o == nil || IsNil(o.MeterDefine) {
		var ret string
		return ret
	}
	return *o.MeterDefine
}

// GetMeterDefineOk returns a tuple with the MeterDefine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetMeterDefineOk() (*string, bool) {
	if o == nil || IsNil(o.MeterDefine) {
		return nil, false
	}
	return o.MeterDefine, true
}

// HasMeterDefine returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasMeterDefine() bool {
	if o != nil && !IsNil(o.MeterDefine) {
		return true
	}

	return false
}

// SetMeterDefine gets a reference to the given string and assigns it to the MeterDefine field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetMeterDefine(v string) {
	o.MeterDefine = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetPlan(v string) {
	o.Plan = &v
}

// GetPricing returns the Pricing field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPricing() AzureMarketplacePriceAndAvailabilityPrice {
	if o == nil || IsNil(o.Pricing) {
		var ret AzureMarketplacePriceAndAvailabilityPrice
		return ret
	}
	return *o.Pricing
}

// GetPricingOk returns a tuple with the Pricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPricingOk() (*AzureMarketplacePriceAndAvailabilityPrice, bool) {
	if o == nil || IsNil(o.Pricing) {
		return nil, false
	}
	return o.Pricing, true
}

// HasPricing returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasPricing() bool {
	if o != nil && !IsNil(o.Pricing) {
		return true
	}

	return false
}

// SetPricing gets a reference to the given AzureMarketplacePriceAndAvailabilityPrice and assigns it to the Pricing field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetPricing(v AzureMarketplacePriceAndAvailabilityPrice) {
	o.Pricing = &v
}

// GetPrivateAudiences returns the PrivateAudiences field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPrivateAudiences() []AzureMarketplacePriceAndAvailabilityAudience {
	if o == nil || IsNil(o.PrivateAudiences) {
		var ret []AzureMarketplacePriceAndAvailabilityAudience
		return ret
	}
	return o.PrivateAudiences
}

// GetPrivateAudiencesOk returns a tuple with the PrivateAudiences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetPrivateAudiencesOk() ([]AzureMarketplacePriceAndAvailabilityAudience, bool) {
	if o == nil || IsNil(o.PrivateAudiences) {
		return nil, false
	}
	return o.PrivateAudiences, true
}

// HasPrivateAudiences returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasPrivateAudiences() bool {
	if o != nil && !IsNil(o.PrivateAudiences) {
		return true
	}

	return false
}

// SetPrivateAudiences gets a reference to the given []AzureMarketplacePriceAndAvailabilityAudience and assigns it to the PrivateAudiences field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetPrivateAudiences(v []AzureMarketplacePriceAndAvailabilityAudience) {
	o.PrivateAudiences = v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetProduct(v string) {
	o.Product = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetSoftwareReservation returns the SoftwareReservation field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetSoftwareReservation() []AzureMarketplacePriceAndAvailabilitySoftwareReservation {
	if o == nil || IsNil(o.SoftwareReservation) {
		var ret []AzureMarketplacePriceAndAvailabilitySoftwareReservation
		return ret
	}
	return o.SoftwareReservation
}

// GetSoftwareReservationOk returns a tuple with the SoftwareReservation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetSoftwareReservationOk() ([]AzureMarketplacePriceAndAvailabilitySoftwareReservation, bool) {
	if o == nil || IsNil(o.SoftwareReservation) {
		return nil, false
	}
	return o.SoftwareReservation, true
}

// HasSoftwareReservation returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasSoftwareReservation() bool {
	if o != nil && !IsNil(o.SoftwareReservation) {
		return true
	}

	return false
}

// SetSoftwareReservation gets a reference to the given []AzureMarketplacePriceAndAvailabilitySoftwareReservation and assigns it to the SoftwareReservation field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetSoftwareReservation(v []AzureMarketplacePriceAndAvailabilitySoftwareReservation) {
	o.SoftwareReservation = v
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetTrial() AzureMarketplaceTerm {
	if o == nil || IsNil(o.Trial) {
		var ret AzureMarketplaceTerm
		return ret
	}
	return *o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetTrialOk() (*AzureMarketplaceTerm, bool) {
	if o == nil || IsNil(o.Trial) {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasTrial() bool {
	if o != nil && !IsNil(o.Trial) {
		return true
	}

	return false
}

// SetTrial gets a reference to the given AzureMarketplaceTerm and assigns it to the Trial field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetTrial(v AzureMarketplaceTerm) {
	o.Trial = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AzureMarketplacePriceAndAvailabilityPlan) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *AzureMarketplacePriceAndAvailabilityPlan) SetVisibility(v string) {
	o.Visibility = &v
}

func (o AzureMarketplacePriceAndAvailabilityPlan) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplacePriceAndAvailabilityPlan) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !IsNil(o.BillingTag) {
		toSerialize["billingTag"] = o.BillingTag
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Markets) {
		toSerialize["markets"] = o.Markets
	}
	if !IsNil(o.MeterDefine) {
		toSerialize["meterDefine"] = o.MeterDefine
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Pricing) {
		toSerialize["pricing"] = o.Pricing
	}
	if !IsNil(o.PrivateAudiences) {
		toSerialize["privateAudiences"] = o.PrivateAudiences
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.SoftwareReservation) {
		toSerialize["softwareReservation"] = o.SoftwareReservation
	}
	if !IsNil(o.Trial) {
		toSerialize["trial"] = o.Trial
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableAzureMarketplacePriceAndAvailabilityPlan struct {
	value *AzureMarketplacePriceAndAvailabilityPlan
	isSet bool
}

func (v NullableAzureMarketplacePriceAndAvailabilityPlan) Get() *AzureMarketplacePriceAndAvailabilityPlan {
	return v.value
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPlan) Set(val *AzureMarketplacePriceAndAvailabilityPlan) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplacePriceAndAvailabilityPlan) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPlan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplacePriceAndAvailabilityPlan(val *AzureMarketplacePriceAndAvailabilityPlan) *NullableAzureMarketplacePriceAndAvailabilityPlan {
	return &NullableAzureMarketplacePriceAndAvailabilityPlan{value: val, isSet: true}
}

func (v NullableAzureMarketplacePriceAndAvailabilityPlan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplacePriceAndAvailabilityPlan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
