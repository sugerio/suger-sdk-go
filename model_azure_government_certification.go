/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureGovernmentCertification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureGovernmentCertification{}

// AzureGovernmentCertification struct for AzureGovernmentCertification
type AzureGovernmentCertification struct {
	Title *string `json:"title,omitempty"`
	Uri *string `json:"uri,omitempty"`
	ValidationResults []AzureValidationResult `json:"validationResults,omitempty"`
}

// NewAzureGovernmentCertification instantiates a new AzureGovernmentCertification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureGovernmentCertification() *AzureGovernmentCertification {
	this := AzureGovernmentCertification{}
	return &this
}

// NewAzureGovernmentCertificationWithDefaults instantiates a new AzureGovernmentCertification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureGovernmentCertificationWithDefaults() *AzureGovernmentCertification {
	this := AzureGovernmentCertification{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AzureGovernmentCertification) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureGovernmentCertification) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AzureGovernmentCertification) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AzureGovernmentCertification) SetTitle(v string) {
	o.Title = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *AzureGovernmentCertification) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureGovernmentCertification) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *AzureGovernmentCertification) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *AzureGovernmentCertification) SetUri(v string) {
	o.Uri = &v
}

// GetValidationResults returns the ValidationResults field value if set, zero value otherwise.
func (o *AzureGovernmentCertification) GetValidationResults() []AzureValidationResult {
	if o == nil || IsNil(o.ValidationResults) {
		var ret []AzureValidationResult
		return ret
	}
	return o.ValidationResults
}

// GetValidationResultsOk returns a tuple with the ValidationResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureGovernmentCertification) GetValidationResultsOk() ([]AzureValidationResult, bool) {
	if o == nil || IsNil(o.ValidationResults) {
		return nil, false
	}
	return o.ValidationResults, true
}

// HasValidationResults returns a boolean if a field has been set.
func (o *AzureGovernmentCertification) HasValidationResults() bool {
	if o != nil && !IsNil(o.ValidationResults) {
		return true
	}

	return false
}

// SetValidationResults gets a reference to the given []AzureValidationResult and assigns it to the ValidationResults field.
func (o *AzureGovernmentCertification) SetValidationResults(v []AzureValidationResult) {
	o.ValidationResults = v
}

func (o AzureGovernmentCertification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureGovernmentCertification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.ValidationResults) {
		toSerialize["validationResults"] = o.ValidationResults
	}
	return toSerialize, nil
}

type NullableAzureGovernmentCertification struct {
	value *AzureGovernmentCertification
	isSet bool
}

func (v NullableAzureGovernmentCertification) Get() *AzureGovernmentCertification {
	return v.value
}

func (v *NullableAzureGovernmentCertification) Set(val *AzureGovernmentCertification) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureGovernmentCertification) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureGovernmentCertification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureGovernmentCertification(val *AzureGovernmentCertification) *NullableAzureGovernmentCertification {
	return &NullableAzureGovernmentCertification{value: val, isSet: true}
}

func (v NullableAzureGovernmentCertification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureGovernmentCertification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


