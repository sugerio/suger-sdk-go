/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the AwsMarketplaceIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceIntegration{}

// AwsMarketplaceIntegration The data struct to store integration info for Suger service to access the client's AWS services.
type AwsMarketplaceIntegration struct {
	// Is AWS Marketplace Basic Info (Private Offers, Entitlements/Agreements) full-sync done.
	BasicInfoFullSyncDone *bool `json:"basicInfoFullSyncDone,omitempty"`
	// If enabled, Suger will create an active entitlement based on the default offer when the new client is redirected from AWS Marketplace, but the notification evnet from AWS Marketplace is not received yet by Suger. If disabled, Suger will not create the entitlement when the new client is redirected from AWS Marketplace. So the redirect URL won't contain the sugerEntitlementId parameter.
	CreateEntitlementBeforeNotificationEnabled *bool `json:"createEntitlementBeforeNotificationEnabled,omitempty"`
	// Enable the use of AWS Marketplace beta APIs in the backend. If true, Suger will use the beta APIs.
	EnableMarketplaceBetaApi *bool `json:"enableMarketplaceBetaApi,omitempty"`
	// AWS EventBridge rule name for AWS Marketplace events.
	EventBridgeRuleName *string `json:"eventBridgeRuleName,omitempty"`
	// The external ID for assuming IAM role. If empty, means no external ID set or needed. Otherwise, it should be auth_id in table identity.organization.
	ExternalID *string `json:"externalID,omitempty"`
	// The AWS IAM role for Suger service to assume to access the client's AWS services.
	IamRoleArn *string `json:"iamRoleArn,omitempty"`
	// AWS Marketplace start date which comes from MDFS Full-Sync.
	MarketplaceStartDate *time.Time `json:"marketplaceStartDate,omitempty"`
	// Is AWS Marketplace Commerce Analytics Service (MCAS) full-sync done.
	McasFullSyncDone *bool `json:"mcasFullSyncDone,omitempty"`
	// IAM role ARN to allow AWS Marketplace to write to the S3 bucket and publish notifications to the SNS topic.
	McasIamRoleArn *string `json:"mcasIamRoleArn,omitempty"`
	// S3 bucket for AWS Marketplace Commerce Analytics Service (MCAS)
	McasS3Bucket *string `json:"mcasS3Bucket,omitempty"`
	// SNS topic ARN for AWS Marketplace Commerce Analytics Service (MCAS)
	McasSnsTopic *string `json:"mcasSnsTopic,omitempty"`
	// Disable Sync with AWS MCAS. If true, Suger stop to sync with MCAS.
	McasSyncDisabled *bool `json:"mcasSyncDisabled,omitempty"`
	// Is AWS Marketplace Data Feeds Service (MDFS) full-sync done.
	MdfsFullSyncDone *bool `json:"mdfsFullSyncDone,omitempty"`
	// KMS Key ARN for the S3 bucket of AWS Marketplace Data Feeds Service (MDFS)
	MdfsKmsKeyArn *string `json:"mdfsKmsKeyArn,omitempty"`
	// S3 bucket ARN for AWS Marketplace Data Feeds Service (MDFS)
	MdfsS3BucketArn *string `json:"mdfsS3BucketArn,omitempty"`
	// Disable Sync with AWS MDFS. If true, Suger stop to sync with MDFS.
	MdfsSyncDisabled *bool `json:"mdfsSyncDisabled,omitempty"`
	// The policy ARNs in the IAM role.
	PolicyArns []string `json:"policyArns,omitempty"`
	// Is AWS Marketplace Revenue Record full-sync done.
	RevenueRecordFullSyncDone *bool `json:"revenueRecordFullSyncDone,omitempty"`
	// If enabled, Suger will redirect the new client to the signup page even the entitlement is not found. If disabled, Suger will redirect the new client to the error page if the entitlement is not found.
	SignupRedirectWithoutEntitlementEnabled *bool `json:"signupRedirectWithoutEntitlementEnabled,omitempty"`
	// Disable Usage Metering to AWS Marketplace. If true, Suger stop to report usage records to AWS Marketplace.
	UsageMeteringDisabled *bool `json:"usageMeteringDisabled,omitempty"`
}

// NewAwsMarketplaceIntegration instantiates a new AwsMarketplaceIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceIntegration() *AwsMarketplaceIntegration {
	this := AwsMarketplaceIntegration{}
	return &this
}

// NewAwsMarketplaceIntegrationWithDefaults instantiates a new AwsMarketplaceIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceIntegrationWithDefaults() *AwsMarketplaceIntegration {
	this := AwsMarketplaceIntegration{}
	return &this
}

// GetBasicInfoFullSyncDone returns the BasicInfoFullSyncDone field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetBasicInfoFullSyncDone() bool {
	if o == nil || IsNil(o.BasicInfoFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.BasicInfoFullSyncDone
}

// GetBasicInfoFullSyncDoneOk returns a tuple with the BasicInfoFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetBasicInfoFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.BasicInfoFullSyncDone) {
		return nil, false
	}
	return o.BasicInfoFullSyncDone, true
}

// HasBasicInfoFullSyncDone returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasBasicInfoFullSyncDone() bool {
	if o != nil && !IsNil(o.BasicInfoFullSyncDone) {
		return true
	}

	return false
}

// SetBasicInfoFullSyncDone gets a reference to the given bool and assigns it to the BasicInfoFullSyncDone field.
func (o *AwsMarketplaceIntegration) SetBasicInfoFullSyncDone(v bool) {
	o.BasicInfoFullSyncDone = &v
}

// GetCreateEntitlementBeforeNotificationEnabled returns the CreateEntitlementBeforeNotificationEnabled field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetCreateEntitlementBeforeNotificationEnabled() bool {
	if o == nil || IsNil(o.CreateEntitlementBeforeNotificationEnabled) {
		var ret bool
		return ret
	}
	return *o.CreateEntitlementBeforeNotificationEnabled
}

// GetCreateEntitlementBeforeNotificationEnabledOk returns a tuple with the CreateEntitlementBeforeNotificationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetCreateEntitlementBeforeNotificationEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateEntitlementBeforeNotificationEnabled) {
		return nil, false
	}
	return o.CreateEntitlementBeforeNotificationEnabled, true
}

// HasCreateEntitlementBeforeNotificationEnabled returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasCreateEntitlementBeforeNotificationEnabled() bool {
	if o != nil && !IsNil(o.CreateEntitlementBeforeNotificationEnabled) {
		return true
	}

	return false
}

// SetCreateEntitlementBeforeNotificationEnabled gets a reference to the given bool and assigns it to the CreateEntitlementBeforeNotificationEnabled field.
func (o *AwsMarketplaceIntegration) SetCreateEntitlementBeforeNotificationEnabled(v bool) {
	o.CreateEntitlementBeforeNotificationEnabled = &v
}

// GetEnableMarketplaceBetaApi returns the EnableMarketplaceBetaApi field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetEnableMarketplaceBetaApi() bool {
	if o == nil || IsNil(o.EnableMarketplaceBetaApi) {
		var ret bool
		return ret
	}
	return *o.EnableMarketplaceBetaApi
}

// GetEnableMarketplaceBetaApiOk returns a tuple with the EnableMarketplaceBetaApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetEnableMarketplaceBetaApiOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMarketplaceBetaApi) {
		return nil, false
	}
	return o.EnableMarketplaceBetaApi, true
}

// HasEnableMarketplaceBetaApi returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasEnableMarketplaceBetaApi() bool {
	if o != nil && !IsNil(o.EnableMarketplaceBetaApi) {
		return true
	}

	return false
}

// SetEnableMarketplaceBetaApi gets a reference to the given bool and assigns it to the EnableMarketplaceBetaApi field.
func (o *AwsMarketplaceIntegration) SetEnableMarketplaceBetaApi(v bool) {
	o.EnableMarketplaceBetaApi = &v
}

// GetEventBridgeRuleName returns the EventBridgeRuleName field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetEventBridgeRuleName() string {
	if o == nil || IsNil(o.EventBridgeRuleName) {
		var ret string
		return ret
	}
	return *o.EventBridgeRuleName
}

// GetEventBridgeRuleNameOk returns a tuple with the EventBridgeRuleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetEventBridgeRuleNameOk() (*string, bool) {
	if o == nil || IsNil(o.EventBridgeRuleName) {
		return nil, false
	}
	return o.EventBridgeRuleName, true
}

// HasEventBridgeRuleName returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasEventBridgeRuleName() bool {
	if o != nil && !IsNil(o.EventBridgeRuleName) {
		return true
	}

	return false
}

// SetEventBridgeRuleName gets a reference to the given string and assigns it to the EventBridgeRuleName field.
func (o *AwsMarketplaceIntegration) SetEventBridgeRuleName(v string) {
	o.EventBridgeRuleName = &v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *AwsMarketplaceIntegration) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetIamRoleArn returns the IamRoleArn field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetIamRoleArn() string {
	if o == nil || IsNil(o.IamRoleArn) {
		var ret string
		return ret
	}
	return *o.IamRoleArn
}

// GetIamRoleArnOk returns a tuple with the IamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetIamRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.IamRoleArn) {
		return nil, false
	}
	return o.IamRoleArn, true
}

// HasIamRoleArn returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasIamRoleArn() bool {
	if o != nil && !IsNil(o.IamRoleArn) {
		return true
	}

	return false
}

// SetIamRoleArn gets a reference to the given string and assigns it to the IamRoleArn field.
func (o *AwsMarketplaceIntegration) SetIamRoleArn(v string) {
	o.IamRoleArn = &v
}

// GetMarketplaceStartDate returns the MarketplaceStartDate field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMarketplaceStartDate() time.Time {
	if o == nil || IsNil(o.MarketplaceStartDate) {
		var ret time.Time
		return ret
	}
	return *o.MarketplaceStartDate
}

// GetMarketplaceStartDateOk returns a tuple with the MarketplaceStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMarketplaceStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MarketplaceStartDate) {
		return nil, false
	}
	return o.MarketplaceStartDate, true
}

// HasMarketplaceStartDate returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMarketplaceStartDate() bool {
	if o != nil && !IsNil(o.MarketplaceStartDate) {
		return true
	}

	return false
}

// SetMarketplaceStartDate gets a reference to the given time.Time and assigns it to the MarketplaceStartDate field.
func (o *AwsMarketplaceIntegration) SetMarketplaceStartDate(v time.Time) {
	o.MarketplaceStartDate = &v
}

// GetMcasFullSyncDone returns the McasFullSyncDone field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMcasFullSyncDone() bool {
	if o == nil || IsNil(o.McasFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.McasFullSyncDone
}

// GetMcasFullSyncDoneOk returns a tuple with the McasFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMcasFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.McasFullSyncDone) {
		return nil, false
	}
	return o.McasFullSyncDone, true
}

// HasMcasFullSyncDone returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMcasFullSyncDone() bool {
	if o != nil && !IsNil(o.McasFullSyncDone) {
		return true
	}

	return false
}

// SetMcasFullSyncDone gets a reference to the given bool and assigns it to the McasFullSyncDone field.
func (o *AwsMarketplaceIntegration) SetMcasFullSyncDone(v bool) {
	o.McasFullSyncDone = &v
}

// GetMcasIamRoleArn returns the McasIamRoleArn field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMcasIamRoleArn() string {
	if o == nil || IsNil(o.McasIamRoleArn) {
		var ret string
		return ret
	}
	return *o.McasIamRoleArn
}

// GetMcasIamRoleArnOk returns a tuple with the McasIamRoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMcasIamRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.McasIamRoleArn) {
		return nil, false
	}
	return o.McasIamRoleArn, true
}

// HasMcasIamRoleArn returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMcasIamRoleArn() bool {
	if o != nil && !IsNil(o.McasIamRoleArn) {
		return true
	}

	return false
}

// SetMcasIamRoleArn gets a reference to the given string and assigns it to the McasIamRoleArn field.
func (o *AwsMarketplaceIntegration) SetMcasIamRoleArn(v string) {
	o.McasIamRoleArn = &v
}

// GetMcasS3Bucket returns the McasS3Bucket field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMcasS3Bucket() string {
	if o == nil || IsNil(o.McasS3Bucket) {
		var ret string
		return ret
	}
	return *o.McasS3Bucket
}

// GetMcasS3BucketOk returns a tuple with the McasS3Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMcasS3BucketOk() (*string, bool) {
	if o == nil || IsNil(o.McasS3Bucket) {
		return nil, false
	}
	return o.McasS3Bucket, true
}

// HasMcasS3Bucket returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMcasS3Bucket() bool {
	if o != nil && !IsNil(o.McasS3Bucket) {
		return true
	}

	return false
}

// SetMcasS3Bucket gets a reference to the given string and assigns it to the McasS3Bucket field.
func (o *AwsMarketplaceIntegration) SetMcasS3Bucket(v string) {
	o.McasS3Bucket = &v
}

// GetMcasSnsTopic returns the McasSnsTopic field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMcasSnsTopic() string {
	if o == nil || IsNil(o.McasSnsTopic) {
		var ret string
		return ret
	}
	return *o.McasSnsTopic
}

// GetMcasSnsTopicOk returns a tuple with the McasSnsTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMcasSnsTopicOk() (*string, bool) {
	if o == nil || IsNil(o.McasSnsTopic) {
		return nil, false
	}
	return o.McasSnsTopic, true
}

// HasMcasSnsTopic returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMcasSnsTopic() bool {
	if o != nil && !IsNil(o.McasSnsTopic) {
		return true
	}

	return false
}

// SetMcasSnsTopic gets a reference to the given string and assigns it to the McasSnsTopic field.
func (o *AwsMarketplaceIntegration) SetMcasSnsTopic(v string) {
	o.McasSnsTopic = &v
}

// GetMcasSyncDisabled returns the McasSyncDisabled field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMcasSyncDisabled() bool {
	if o == nil || IsNil(o.McasSyncDisabled) {
		var ret bool
		return ret
	}
	return *o.McasSyncDisabled
}

// GetMcasSyncDisabledOk returns a tuple with the McasSyncDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMcasSyncDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.McasSyncDisabled) {
		return nil, false
	}
	return o.McasSyncDisabled, true
}

// HasMcasSyncDisabled returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMcasSyncDisabled() bool {
	if o != nil && !IsNil(o.McasSyncDisabled) {
		return true
	}

	return false
}

// SetMcasSyncDisabled gets a reference to the given bool and assigns it to the McasSyncDisabled field.
func (o *AwsMarketplaceIntegration) SetMcasSyncDisabled(v bool) {
	o.McasSyncDisabled = &v
}

// GetMdfsFullSyncDone returns the MdfsFullSyncDone field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMdfsFullSyncDone() bool {
	if o == nil || IsNil(o.MdfsFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.MdfsFullSyncDone
}

// GetMdfsFullSyncDoneOk returns a tuple with the MdfsFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMdfsFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.MdfsFullSyncDone) {
		return nil, false
	}
	return o.MdfsFullSyncDone, true
}

// HasMdfsFullSyncDone returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMdfsFullSyncDone() bool {
	if o != nil && !IsNil(o.MdfsFullSyncDone) {
		return true
	}

	return false
}

// SetMdfsFullSyncDone gets a reference to the given bool and assigns it to the MdfsFullSyncDone field.
func (o *AwsMarketplaceIntegration) SetMdfsFullSyncDone(v bool) {
	o.MdfsFullSyncDone = &v
}

// GetMdfsKmsKeyArn returns the MdfsKmsKeyArn field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMdfsKmsKeyArn() string {
	if o == nil || IsNil(o.MdfsKmsKeyArn) {
		var ret string
		return ret
	}
	return *o.MdfsKmsKeyArn
}

// GetMdfsKmsKeyArnOk returns a tuple with the MdfsKmsKeyArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMdfsKmsKeyArnOk() (*string, bool) {
	if o == nil || IsNil(o.MdfsKmsKeyArn) {
		return nil, false
	}
	return o.MdfsKmsKeyArn, true
}

// HasMdfsKmsKeyArn returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMdfsKmsKeyArn() bool {
	if o != nil && !IsNil(o.MdfsKmsKeyArn) {
		return true
	}

	return false
}

// SetMdfsKmsKeyArn gets a reference to the given string and assigns it to the MdfsKmsKeyArn field.
func (o *AwsMarketplaceIntegration) SetMdfsKmsKeyArn(v string) {
	o.MdfsKmsKeyArn = &v
}

// GetMdfsS3BucketArn returns the MdfsS3BucketArn field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMdfsS3BucketArn() string {
	if o == nil || IsNil(o.MdfsS3BucketArn) {
		var ret string
		return ret
	}
	return *o.MdfsS3BucketArn
}

// GetMdfsS3BucketArnOk returns a tuple with the MdfsS3BucketArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMdfsS3BucketArnOk() (*string, bool) {
	if o == nil || IsNil(o.MdfsS3BucketArn) {
		return nil, false
	}
	return o.MdfsS3BucketArn, true
}

// HasMdfsS3BucketArn returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMdfsS3BucketArn() bool {
	if o != nil && !IsNil(o.MdfsS3BucketArn) {
		return true
	}

	return false
}

// SetMdfsS3BucketArn gets a reference to the given string and assigns it to the MdfsS3BucketArn field.
func (o *AwsMarketplaceIntegration) SetMdfsS3BucketArn(v string) {
	o.MdfsS3BucketArn = &v
}

// GetMdfsSyncDisabled returns the MdfsSyncDisabled field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetMdfsSyncDisabled() bool {
	if o == nil || IsNil(o.MdfsSyncDisabled) {
		var ret bool
		return ret
	}
	return *o.MdfsSyncDisabled
}

// GetMdfsSyncDisabledOk returns a tuple with the MdfsSyncDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetMdfsSyncDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MdfsSyncDisabled) {
		return nil, false
	}
	return o.MdfsSyncDisabled, true
}

// HasMdfsSyncDisabled returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasMdfsSyncDisabled() bool {
	if o != nil && !IsNil(o.MdfsSyncDisabled) {
		return true
	}

	return false
}

// SetMdfsSyncDisabled gets a reference to the given bool and assigns it to the MdfsSyncDisabled field.
func (o *AwsMarketplaceIntegration) SetMdfsSyncDisabled(v bool) {
	o.MdfsSyncDisabled = &v
}

// GetPolicyArns returns the PolicyArns field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetPolicyArns() []string {
	if o == nil || IsNil(o.PolicyArns) {
		var ret []string
		return ret
	}
	return o.PolicyArns
}

// GetPolicyArnsOk returns a tuple with the PolicyArns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetPolicyArnsOk() ([]string, bool) {
	if o == nil || IsNil(o.PolicyArns) {
		return nil, false
	}
	return o.PolicyArns, true
}

// HasPolicyArns returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasPolicyArns() bool {
	if o != nil && !IsNil(o.PolicyArns) {
		return true
	}

	return false
}

// SetPolicyArns gets a reference to the given []string and assigns it to the PolicyArns field.
func (o *AwsMarketplaceIntegration) SetPolicyArns(v []string) {
	o.PolicyArns = v
}

// GetRevenueRecordFullSyncDone returns the RevenueRecordFullSyncDone field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetRevenueRecordFullSyncDone() bool {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.RevenueRecordFullSyncDone
}

// GetRevenueRecordFullSyncDoneOk returns a tuple with the RevenueRecordFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetRevenueRecordFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		return nil, false
	}
	return o.RevenueRecordFullSyncDone, true
}

// HasRevenueRecordFullSyncDone returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasRevenueRecordFullSyncDone() bool {
	if o != nil && !IsNil(o.RevenueRecordFullSyncDone) {
		return true
	}

	return false
}

// SetRevenueRecordFullSyncDone gets a reference to the given bool and assigns it to the RevenueRecordFullSyncDone field.
func (o *AwsMarketplaceIntegration) SetRevenueRecordFullSyncDone(v bool) {
	o.RevenueRecordFullSyncDone = &v
}

// GetSignupRedirectWithoutEntitlementEnabled returns the SignupRedirectWithoutEntitlementEnabled field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetSignupRedirectWithoutEntitlementEnabled() bool {
	if o == nil || IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		var ret bool
		return ret
	}
	return *o.SignupRedirectWithoutEntitlementEnabled
}

// GetSignupRedirectWithoutEntitlementEnabledOk returns a tuple with the SignupRedirectWithoutEntitlementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetSignupRedirectWithoutEntitlementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		return nil, false
	}
	return o.SignupRedirectWithoutEntitlementEnabled, true
}

// HasSignupRedirectWithoutEntitlementEnabled returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasSignupRedirectWithoutEntitlementEnabled() bool {
	if o != nil && !IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		return true
	}

	return false
}

// SetSignupRedirectWithoutEntitlementEnabled gets a reference to the given bool and assigns it to the SignupRedirectWithoutEntitlementEnabled field.
func (o *AwsMarketplaceIntegration) SetSignupRedirectWithoutEntitlementEnabled(v bool) {
	o.SignupRedirectWithoutEntitlementEnabled = &v
}

// GetUsageMeteringDisabled returns the UsageMeteringDisabled field value if set, zero value otherwise.
func (o *AwsMarketplaceIntegration) GetUsageMeteringDisabled() bool {
	if o == nil || IsNil(o.UsageMeteringDisabled) {
		var ret bool
		return ret
	}
	return *o.UsageMeteringDisabled
}

// GetUsageMeteringDisabledOk returns a tuple with the UsageMeteringDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceIntegration) GetUsageMeteringDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.UsageMeteringDisabled) {
		return nil, false
	}
	return o.UsageMeteringDisabled, true
}

// HasUsageMeteringDisabled returns a boolean if a field has been set.
func (o *AwsMarketplaceIntegration) HasUsageMeteringDisabled() bool {
	if o != nil && !IsNil(o.UsageMeteringDisabled) {
		return true
	}

	return false
}

// SetUsageMeteringDisabled gets a reference to the given bool and assigns it to the UsageMeteringDisabled field.
func (o *AwsMarketplaceIntegration) SetUsageMeteringDisabled(v bool) {
	o.UsageMeteringDisabled = &v
}

func (o AwsMarketplaceIntegration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BasicInfoFullSyncDone) {
		toSerialize["basicInfoFullSyncDone"] = o.BasicInfoFullSyncDone
	}
	if !IsNil(o.CreateEntitlementBeforeNotificationEnabled) {
		toSerialize["createEntitlementBeforeNotificationEnabled"] = o.CreateEntitlementBeforeNotificationEnabled
	}
	if !IsNil(o.EnableMarketplaceBetaApi) {
		toSerialize["enableMarketplaceBetaApi"] = o.EnableMarketplaceBetaApi
	}
	if !IsNil(o.EventBridgeRuleName) {
		toSerialize["eventBridgeRuleName"] = o.EventBridgeRuleName
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.IamRoleArn) {
		toSerialize["iamRoleArn"] = o.IamRoleArn
	}
	if !IsNil(o.MarketplaceStartDate) {
		toSerialize["marketplaceStartDate"] = o.MarketplaceStartDate
	}
	if !IsNil(o.McasFullSyncDone) {
		toSerialize["mcasFullSyncDone"] = o.McasFullSyncDone
	}
	if !IsNil(o.McasIamRoleArn) {
		toSerialize["mcasIamRoleArn"] = o.McasIamRoleArn
	}
	if !IsNil(o.McasS3Bucket) {
		toSerialize["mcasS3Bucket"] = o.McasS3Bucket
	}
	if !IsNil(o.McasSnsTopic) {
		toSerialize["mcasSnsTopic"] = o.McasSnsTopic
	}
	if !IsNil(o.McasSyncDisabled) {
		toSerialize["mcasSyncDisabled"] = o.McasSyncDisabled
	}
	if !IsNil(o.MdfsFullSyncDone) {
		toSerialize["mdfsFullSyncDone"] = o.MdfsFullSyncDone
	}
	if !IsNil(o.MdfsKmsKeyArn) {
		toSerialize["mdfsKmsKeyArn"] = o.MdfsKmsKeyArn
	}
	if !IsNil(o.MdfsS3BucketArn) {
		toSerialize["mdfsS3BucketArn"] = o.MdfsS3BucketArn
	}
	if !IsNil(o.MdfsSyncDisabled) {
		toSerialize["mdfsSyncDisabled"] = o.MdfsSyncDisabled
	}
	if !IsNil(o.PolicyArns) {
		toSerialize["policyArns"] = o.PolicyArns
	}
	if !IsNil(o.RevenueRecordFullSyncDone) {
		toSerialize["revenueRecordFullSyncDone"] = o.RevenueRecordFullSyncDone
	}
	if !IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		toSerialize["signupRedirectWithoutEntitlementEnabled"] = o.SignupRedirectWithoutEntitlementEnabled
	}
	if !IsNil(o.UsageMeteringDisabled) {
		toSerialize["usageMeteringDisabled"] = o.UsageMeteringDisabled
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceIntegration struct {
	value *AwsMarketplaceIntegration
	isSet bool
}

func (v NullableAwsMarketplaceIntegration) Get() *AwsMarketplaceIntegration {
	return v.value
}

func (v *NullableAwsMarketplaceIntegration) Set(val *AwsMarketplaceIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceIntegration(val *AwsMarketplaceIntegration) *NullableAwsMarketplaceIntegration {
	return &NullableAwsMarketplaceIntegration{value: val, isSet: true}
}

func (v NullableAwsMarketplaceIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
