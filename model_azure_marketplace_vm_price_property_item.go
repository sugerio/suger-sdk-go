/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureMarketplaceVmPricePropertyItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceVmPricePropertyItem{}

// AzureMarketplaceVmPricePropertyItem struct for AzureMarketplaceVmPricePropertyItem
type AzureMarketplaceVmPricePropertyItem struct {
	Quantity                       *float32 `json:"quantity,omitempty"`
	UnitPricePerPaymentPeriodInUsd *float32 `json:"unitPricePerPaymentPeriodInUsd,omitempty"`
}

// NewAzureMarketplaceVmPricePropertyItem instantiates a new AzureMarketplaceVmPricePropertyItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceVmPricePropertyItem() *AzureMarketplaceVmPricePropertyItem {
	this := AzureMarketplaceVmPricePropertyItem{}
	return &this
}

// NewAzureMarketplaceVmPricePropertyItemWithDefaults instantiates a new AzureMarketplaceVmPricePropertyItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceVmPricePropertyItemWithDefaults() *AzureMarketplaceVmPricePropertyItem {
	this := AzureMarketplaceVmPricePropertyItem{}
	return &this
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AzureMarketplaceVmPricePropertyItem) GetQuantity() float32 {
	if o == nil || IsNil(o.Quantity) {
		var ret float32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceVmPricePropertyItem) GetQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *AzureMarketplaceVmPricePropertyItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given float32 and assigns it to the Quantity field.
func (o *AzureMarketplaceVmPricePropertyItem) SetQuantity(v float32) {
	o.Quantity = &v
}

// GetUnitPricePerPaymentPeriodInUsd returns the UnitPricePerPaymentPeriodInUsd field value if set, zero value otherwise.
func (o *AzureMarketplaceVmPricePropertyItem) GetUnitPricePerPaymentPeriodInUsd() float32 {
	if o == nil || IsNil(o.UnitPricePerPaymentPeriodInUsd) {
		var ret float32
		return ret
	}
	return *o.UnitPricePerPaymentPeriodInUsd
}

// GetUnitPricePerPaymentPeriodInUsdOk returns a tuple with the UnitPricePerPaymentPeriodInUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceVmPricePropertyItem) GetUnitPricePerPaymentPeriodInUsdOk() (*float32, bool) {
	if o == nil || IsNil(o.UnitPricePerPaymentPeriodInUsd) {
		return nil, false
	}
	return o.UnitPricePerPaymentPeriodInUsd, true
}

// HasUnitPricePerPaymentPeriodInUsd returns a boolean if a field has been set.
func (o *AzureMarketplaceVmPricePropertyItem) HasUnitPricePerPaymentPeriodInUsd() bool {
	if o != nil && !IsNil(o.UnitPricePerPaymentPeriodInUsd) {
		return true
	}

	return false
}

// SetUnitPricePerPaymentPeriodInUsd gets a reference to the given float32 and assigns it to the UnitPricePerPaymentPeriodInUsd field.
func (o *AzureMarketplaceVmPricePropertyItem) SetUnitPricePerPaymentPeriodInUsd(v float32) {
	o.UnitPricePerPaymentPeriodInUsd = &v
}

func (o AzureMarketplaceVmPricePropertyItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceVmPricePropertyItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.UnitPricePerPaymentPeriodInUsd) {
		toSerialize["unitPricePerPaymentPeriodInUsd"] = o.UnitPricePerPaymentPeriodInUsd
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceVmPricePropertyItem struct {
	value *AzureMarketplaceVmPricePropertyItem
	isSet bool
}

func (v NullableAzureMarketplaceVmPricePropertyItem) Get() *AzureMarketplaceVmPricePropertyItem {
	return v.value
}

func (v *NullableAzureMarketplaceVmPricePropertyItem) Set(val *AzureMarketplaceVmPricePropertyItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceVmPricePropertyItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceVmPricePropertyItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceVmPricePropertyItem(val *AzureMarketplaceVmPricePropertyItem) *NullableAzureMarketplaceVmPricePropertyItem {
	return &NullableAzureMarketplaceVmPricePropertyItem{value: val, isSet: true}
}

func (v NullableAzureMarketplaceVmPricePropertyItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceVmPricePropertyItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
