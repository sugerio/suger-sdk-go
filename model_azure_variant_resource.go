/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureVariantResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVariantResource{}

// AzureVariantResource struct for AzureVariantResource
type AzureVariantResource struct {
	Resources []AzureTypeValue `json:"resources,omitempty"`
	VariantID *string `json:"variantID,omitempty"`
}

// NewAzureVariantResource instantiates a new AzureVariantResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVariantResource() *AzureVariantResource {
	this := AzureVariantResource{}
	return &this
}

// NewAzureVariantResourceWithDefaults instantiates a new AzureVariantResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVariantResourceWithDefaults() *AzureVariantResource {
	this := AzureVariantResource{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AzureVariantResource) GetResources() []AzureTypeValue {
	if o == nil || IsNil(o.Resources) {
		var ret []AzureTypeValue
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVariantResource) GetResourcesOk() ([]AzureTypeValue, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AzureVariantResource) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given []AzureTypeValue and assigns it to the Resources field.
func (o *AzureVariantResource) SetResources(v []AzureTypeValue) {
	o.Resources = v
}

// GetVariantID returns the VariantID field value if set, zero value otherwise.
func (o *AzureVariantResource) GetVariantID() string {
	if o == nil || IsNil(o.VariantID) {
		var ret string
		return ret
	}
	return *o.VariantID
}

// GetVariantIDOk returns a tuple with the VariantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVariantResource) GetVariantIDOk() (*string, bool) {
	if o == nil || IsNil(o.VariantID) {
		return nil, false
	}
	return o.VariantID, true
}

// HasVariantID returns a boolean if a field has been set.
func (o *AzureVariantResource) HasVariantID() bool {
	if o != nil && !IsNil(o.VariantID) {
		return true
	}

	return false
}

// SetVariantID gets a reference to the given string and assigns it to the VariantID field.
func (o *AzureVariantResource) SetVariantID(v string) {
	o.VariantID = &v
}

func (o AzureVariantResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVariantResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.VariantID) {
		toSerialize["variantID"] = o.VariantID
	}
	return toSerialize, nil
}

type NullableAzureVariantResource struct {
	value *AzureVariantResource
	isSet bool
}

func (v NullableAzureVariantResource) Get() *AzureVariantResource {
	return v.value
}

func (v *NullableAzureVariantResource) Set(val *AzureVariantResource) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVariantResource) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVariantResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVariantResource(val *AzureVariantResource) *NullableAzureVariantResource {
	return &NullableAzureVariantResource{value: val, isSet: true}
}

func (v NullableAzureVariantResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVariantResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


