/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum the model 'GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum'
type GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum string

// List of github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum
const (
	UsageEventStatusEnumAccepted GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "Accepted"
	UsageEventStatusEnumExpired GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "Expired"
	UsageEventStatusEnumDuplicate GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "Duplicate"
	UsageEventStatusEnumError GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "Error"
	UsageEventStatusEnumResourceNotFound GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "ResourceNotFound"
	UsageEventStatusEnumResourceNotAuthorized GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "ResourceNotAuthorized"
	UsageEventStatusEnumInvalidDimension GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "InvalidDimension"
	UsageEventStatusEnumInvalidQuantity GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "InvalidQuantity"
	UsageEventStatusEnumBadArgument GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum = "BadArgument"
)

// All allowed values of GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum enum
var AllowedGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumEnumValues = []GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum{
	"Accepted",
	"Expired",
	"Duplicate",
	"Error",
	"ResourceNotFound",
	"ResourceNotAuthorized",
	"InvalidDimension",
	"InvalidQuantity",
	"BadArgument",
}

func (v *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum(value)
	for _, existing := range AllowedGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum", value)
}

// NewGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumFromValue returns a pointer to a valid GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumFromValue(v string) (*GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum, error) {
	ev := GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum: valid values are %v", v, AllowedGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) IsValid() bool {
	for _, existing := range AllowedGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnumEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum value
func (v GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) Ptr() *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum {
	return &v
}

type NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum struct {
	value *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum
	isSet bool
}

func (v NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) Get() *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum {
	return v.value
}

func (v *NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) Set(val *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum(val *GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) *NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum {
	return &NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum{value: val, isSet: true}
}

func (v NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1UsageEventStatusEnum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

