/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GcpMarketplaceOfferTemplatePolicies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceOfferTemplatePolicies{}

// GcpMarketplaceOfferTemplatePolicies struct for GcpMarketplaceOfferTemplatePolicies
type GcpMarketplaceOfferTemplatePolicies struct {
	AllowAutoRenewal        *bool `json:"allowAutoRenewal,omitempty"`
	AllowScheduledStartDate *bool `json:"allowScheduledStartDate,omitempty"`
	// such as \"3\"
	MaxRenewalTimes *string                       `json:"maxRenewalTimes,omitempty"`
	Proration       *GcpMarketplaceOfferProration `json:"proration,omitempty"`
}

// NewGcpMarketplaceOfferTemplatePolicies instantiates a new GcpMarketplaceOfferTemplatePolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceOfferTemplatePolicies() *GcpMarketplaceOfferTemplatePolicies {
	this := GcpMarketplaceOfferTemplatePolicies{}
	return &this
}

// NewGcpMarketplaceOfferTemplatePoliciesWithDefaults instantiates a new GcpMarketplaceOfferTemplatePolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceOfferTemplatePoliciesWithDefaults() *GcpMarketplaceOfferTemplatePolicies {
	this := GcpMarketplaceOfferTemplatePolicies{}
	return &this
}

// GetAllowAutoRenewal returns the AllowAutoRenewal field value if set, zero value otherwise.
func (o *GcpMarketplaceOfferTemplatePolicies) GetAllowAutoRenewal() bool {
	if o == nil || IsNil(o.AllowAutoRenewal) {
		var ret bool
		return ret
	}
	return *o.AllowAutoRenewal
}

// GetAllowAutoRenewalOk returns a tuple with the AllowAutoRenewal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) GetAllowAutoRenewalOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowAutoRenewal) {
		return nil, false
	}
	return o.AllowAutoRenewal, true
}

// HasAllowAutoRenewal returns a boolean if a field has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) HasAllowAutoRenewal() bool {
	if o != nil && !IsNil(o.AllowAutoRenewal) {
		return true
	}

	return false
}

// SetAllowAutoRenewal gets a reference to the given bool and assigns it to the AllowAutoRenewal field.
func (o *GcpMarketplaceOfferTemplatePolicies) SetAllowAutoRenewal(v bool) {
	o.AllowAutoRenewal = &v
}

// GetAllowScheduledStartDate returns the AllowScheduledStartDate field value if set, zero value otherwise.
func (o *GcpMarketplaceOfferTemplatePolicies) GetAllowScheduledStartDate() bool {
	if o == nil || IsNil(o.AllowScheduledStartDate) {
		var ret bool
		return ret
	}
	return *o.AllowScheduledStartDate
}

// GetAllowScheduledStartDateOk returns a tuple with the AllowScheduledStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) GetAllowScheduledStartDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowScheduledStartDate) {
		return nil, false
	}
	return o.AllowScheduledStartDate, true
}

// HasAllowScheduledStartDate returns a boolean if a field has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) HasAllowScheduledStartDate() bool {
	if o != nil && !IsNil(o.AllowScheduledStartDate) {
		return true
	}

	return false
}

// SetAllowScheduledStartDate gets a reference to the given bool and assigns it to the AllowScheduledStartDate field.
func (o *GcpMarketplaceOfferTemplatePolicies) SetAllowScheduledStartDate(v bool) {
	o.AllowScheduledStartDate = &v
}

// GetMaxRenewalTimes returns the MaxRenewalTimes field value if set, zero value otherwise.
func (o *GcpMarketplaceOfferTemplatePolicies) GetMaxRenewalTimes() string {
	if o == nil || IsNil(o.MaxRenewalTimes) {
		var ret string
		return ret
	}
	return *o.MaxRenewalTimes
}

// GetMaxRenewalTimesOk returns a tuple with the MaxRenewalTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) GetMaxRenewalTimesOk() (*string, bool) {
	if o == nil || IsNil(o.MaxRenewalTimes) {
		return nil, false
	}
	return o.MaxRenewalTimes, true
}

// HasMaxRenewalTimes returns a boolean if a field has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) HasMaxRenewalTimes() bool {
	if o != nil && !IsNil(o.MaxRenewalTimes) {
		return true
	}

	return false
}

// SetMaxRenewalTimes gets a reference to the given string and assigns it to the MaxRenewalTimes field.
func (o *GcpMarketplaceOfferTemplatePolicies) SetMaxRenewalTimes(v string) {
	o.MaxRenewalTimes = &v
}

// GetProration returns the Proration field value if set, zero value otherwise.
func (o *GcpMarketplaceOfferTemplatePolicies) GetProration() GcpMarketplaceOfferProration {
	if o == nil || IsNil(o.Proration) {
		var ret GcpMarketplaceOfferProration
		return ret
	}
	return *o.Proration
}

// GetProrationOk returns a tuple with the Proration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) GetProrationOk() (*GcpMarketplaceOfferProration, bool) {
	if o == nil || IsNil(o.Proration) {
		return nil, false
	}
	return o.Proration, true
}

// HasProration returns a boolean if a field has been set.
func (o *GcpMarketplaceOfferTemplatePolicies) HasProration() bool {
	if o != nil && !IsNil(o.Proration) {
		return true
	}

	return false
}

// SetProration gets a reference to the given GcpMarketplaceOfferProration and assigns it to the Proration field.
func (o *GcpMarketplaceOfferTemplatePolicies) SetProration(v GcpMarketplaceOfferProration) {
	o.Proration = &v
}

func (o GcpMarketplaceOfferTemplatePolicies) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceOfferTemplatePolicies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowAutoRenewal) {
		toSerialize["allowAutoRenewal"] = o.AllowAutoRenewal
	}
	if !IsNil(o.AllowScheduledStartDate) {
		toSerialize["allowScheduledStartDate"] = o.AllowScheduledStartDate
	}
	if !IsNil(o.MaxRenewalTimes) {
		toSerialize["maxRenewalTimes"] = o.MaxRenewalTimes
	}
	if !IsNil(o.Proration) {
		toSerialize["proration"] = o.Proration
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceOfferTemplatePolicies struct {
	value *GcpMarketplaceOfferTemplatePolicies
	isSet bool
}

func (v NullableGcpMarketplaceOfferTemplatePolicies) Get() *GcpMarketplaceOfferTemplatePolicies {
	return v.value
}

func (v *NullableGcpMarketplaceOfferTemplatePolicies) Set(val *GcpMarketplaceOfferTemplatePolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceOfferTemplatePolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceOfferTemplatePolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceOfferTemplatePolicies(val *GcpMarketplaceOfferTemplatePolicies) *NullableGcpMarketplaceOfferTemplatePolicies {
	return &NullableGcpMarketplaceOfferTemplatePolicies{value: val, isSet: true}
}

func (v NullableGcpMarketplaceOfferTemplatePolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceOfferTemplatePolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
