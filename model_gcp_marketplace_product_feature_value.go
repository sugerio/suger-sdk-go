/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductFeatureValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductFeatureValue{}

// GcpMarketplaceProductFeatureValue struct for GcpMarketplaceProductFeatureValue
type GcpMarketplaceProductFeatureValue struct {
	// such as \"CPU per VM\"
	FeatureDescription *string `json:"featureDescription,omitempty"`
	// such as \"cpu\"
	FeatureName *string `json:"featureName,omitempty"`
	// such as \"CPU\"
	FeatureTitle *string `json:"featureTitle,omitempty"`
	// such as \"2 CPU per VM\"
	FeatureValue *string `json:"featureValue,omitempty"`
}

// NewGcpMarketplaceProductFeatureValue instantiates a new GcpMarketplaceProductFeatureValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductFeatureValue() *GcpMarketplaceProductFeatureValue {
	this := GcpMarketplaceProductFeatureValue{}
	return &this
}

// NewGcpMarketplaceProductFeatureValueWithDefaults instantiates a new GcpMarketplaceProductFeatureValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductFeatureValueWithDefaults() *GcpMarketplaceProductFeatureValue {
	this := GcpMarketplaceProductFeatureValue{}
	return &this
}

// GetFeatureDescription returns the FeatureDescription field value if set, zero value otherwise.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureDescription() string {
	if o == nil || IsNil(o.FeatureDescription) {
		var ret string
		return ret
	}
	return *o.FeatureDescription
}

// GetFeatureDescriptionOk returns a tuple with the FeatureDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureDescription) {
		return nil, false
	}
	return o.FeatureDescription, true
}

// HasFeatureDescription returns a boolean if a field has been set.
func (o *GcpMarketplaceProductFeatureValue) HasFeatureDescription() bool {
	if o != nil && !IsNil(o.FeatureDescription) {
		return true
	}

	return false
}

// SetFeatureDescription gets a reference to the given string and assigns it to the FeatureDescription field.
func (o *GcpMarketplaceProductFeatureValue) SetFeatureDescription(v string) {
	o.FeatureDescription = &v
}

// GetFeatureName returns the FeatureName field value if set, zero value otherwise.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureName() string {
	if o == nil || IsNil(o.FeatureName) {
		var ret string
		return ret
	}
	return *o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureNameOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureName) {
		return nil, false
	}
	return o.FeatureName, true
}

// HasFeatureName returns a boolean if a field has been set.
func (o *GcpMarketplaceProductFeatureValue) HasFeatureName() bool {
	if o != nil && !IsNil(o.FeatureName) {
		return true
	}

	return false
}

// SetFeatureName gets a reference to the given string and assigns it to the FeatureName field.
func (o *GcpMarketplaceProductFeatureValue) SetFeatureName(v string) {
	o.FeatureName = &v
}

// GetFeatureTitle returns the FeatureTitle field value if set, zero value otherwise.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureTitle() string {
	if o == nil || IsNil(o.FeatureTitle) {
		var ret string
		return ret
	}
	return *o.FeatureTitle
}

// GetFeatureTitleOk returns a tuple with the FeatureTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureTitleOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureTitle) {
		return nil, false
	}
	return o.FeatureTitle, true
}

// HasFeatureTitle returns a boolean if a field has been set.
func (o *GcpMarketplaceProductFeatureValue) HasFeatureTitle() bool {
	if o != nil && !IsNil(o.FeatureTitle) {
		return true
	}

	return false
}

// SetFeatureTitle gets a reference to the given string and assigns it to the FeatureTitle field.
func (o *GcpMarketplaceProductFeatureValue) SetFeatureTitle(v string) {
	o.FeatureTitle = &v
}

// GetFeatureValue returns the FeatureValue field value if set, zero value otherwise.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureValue() string {
	if o == nil || IsNil(o.FeatureValue) {
		var ret string
		return ret
	}
	return *o.FeatureValue
}

// GetFeatureValueOk returns a tuple with the FeatureValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductFeatureValue) GetFeatureValueOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureValue) {
		return nil, false
	}
	return o.FeatureValue, true
}

// HasFeatureValue returns a boolean if a field has been set.
func (o *GcpMarketplaceProductFeatureValue) HasFeatureValue() bool {
	if o != nil && !IsNil(o.FeatureValue) {
		return true
	}

	return false
}

// SetFeatureValue gets a reference to the given string and assigns it to the FeatureValue field.
func (o *GcpMarketplaceProductFeatureValue) SetFeatureValue(v string) {
	o.FeatureValue = &v
}

func (o GcpMarketplaceProductFeatureValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductFeatureValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FeatureDescription) {
		toSerialize["featureDescription"] = o.FeatureDescription
	}
	if !IsNil(o.FeatureName) {
		toSerialize["featureName"] = o.FeatureName
	}
	if !IsNil(o.FeatureTitle) {
		toSerialize["featureTitle"] = o.FeatureTitle
	}
	if !IsNil(o.FeatureValue) {
		toSerialize["featureValue"] = o.FeatureValue
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductFeatureValue struct {
	value *GcpMarketplaceProductFeatureValue
	isSet bool
}

func (v NullableGcpMarketplaceProductFeatureValue) Get() *GcpMarketplaceProductFeatureValue {
	return v.value
}

func (v *NullableGcpMarketplaceProductFeatureValue) Set(val *GcpMarketplaceProductFeatureValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductFeatureValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductFeatureValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductFeatureValue(val *GcpMarketplaceProductFeatureValue) *NullableGcpMarketplaceProductFeatureValue {
	return &NullableGcpMarketplaceProductFeatureValue{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductFeatureValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductFeatureValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
