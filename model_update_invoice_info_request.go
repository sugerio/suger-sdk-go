/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the UpdateInvoiceInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInvoiceInfoRequest{}

// UpdateInvoiceInfoRequest struct for UpdateInvoiceInfoRequest
type UpdateInvoiceInfoRequest struct {
	DiscountAmount *float32 `json:"discountAmount,omitempty"`
	// The overall discount of the invoice.
	DiscountType *BillingDiscountType `json:"discountType,omitempty"`
	DueDate      *string              `json:"dueDate,omitempty"`
	Memo         *string              `json:"memo,omitempty"`
}

// NewUpdateInvoiceInfoRequest instantiates a new UpdateInvoiceInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInvoiceInfoRequest() *UpdateInvoiceInfoRequest {
	this := UpdateInvoiceInfoRequest{}
	return &this
}

// NewUpdateInvoiceInfoRequestWithDefaults instantiates a new UpdateInvoiceInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInvoiceInfoRequestWithDefaults() *UpdateInvoiceInfoRequest {
	this := UpdateInvoiceInfoRequest{}
	return &this
}

// GetDiscountAmount returns the DiscountAmount field value if set, zero value otherwise.
func (o *UpdateInvoiceInfoRequest) GetDiscountAmount() float32 {
	if o == nil || IsNil(o.DiscountAmount) {
		var ret float32
		return ret
	}
	return *o.DiscountAmount
}

// GetDiscountAmountOk returns a tuple with the DiscountAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInvoiceInfoRequest) GetDiscountAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountAmount) {
		return nil, false
	}
	return o.DiscountAmount, true
}

// HasDiscountAmount returns a boolean if a field has been set.
func (o *UpdateInvoiceInfoRequest) HasDiscountAmount() bool {
	if o != nil && !IsNil(o.DiscountAmount) {
		return true
	}

	return false
}

// SetDiscountAmount gets a reference to the given float32 and assigns it to the DiscountAmount field.
func (o *UpdateInvoiceInfoRequest) SetDiscountAmount(v float32) {
	o.DiscountAmount = &v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *UpdateInvoiceInfoRequest) GetDiscountType() BillingDiscountType {
	if o == nil || IsNil(o.DiscountType) {
		var ret BillingDiscountType
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInvoiceInfoRequest) GetDiscountTypeOk() (*BillingDiscountType, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *UpdateInvoiceInfoRequest) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given BillingDiscountType and assigns it to the DiscountType field.
func (o *UpdateInvoiceInfoRequest) SetDiscountType(v BillingDiscountType) {
	o.DiscountType = &v
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *UpdateInvoiceInfoRequest) GetDueDate() string {
	if o == nil || IsNil(o.DueDate) {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInvoiceInfoRequest) GetDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.DueDate) {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *UpdateInvoiceInfoRequest) HasDueDate() bool {
	if o != nil && !IsNil(o.DueDate) {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *UpdateInvoiceInfoRequest) SetDueDate(v string) {
	o.DueDate = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *UpdateInvoiceInfoRequest) GetMemo() string {
	if o == nil || IsNil(o.Memo) {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInvoiceInfoRequest) GetMemoOk() (*string, bool) {
	if o == nil || IsNil(o.Memo) {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *UpdateInvoiceInfoRequest) HasMemo() bool {
	if o != nil && !IsNil(o.Memo) {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *UpdateInvoiceInfoRequest) SetMemo(v string) {
	o.Memo = &v
}

func (o UpdateInvoiceInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInvoiceInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountAmount) {
		toSerialize["discountAmount"] = o.DiscountAmount
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discountType"] = o.DiscountType
	}
	if !IsNil(o.DueDate) {
		toSerialize["dueDate"] = o.DueDate
	}
	if !IsNil(o.Memo) {
		toSerialize["memo"] = o.Memo
	}
	return toSerialize, nil
}

type NullableUpdateInvoiceInfoRequest struct {
	value *UpdateInvoiceInfoRequest
	isSet bool
}

func (v NullableUpdateInvoiceInfoRequest) Get() *UpdateInvoiceInfoRequest {
	return v.value
}

func (v *NullableUpdateInvoiceInfoRequest) Set(val *UpdateInvoiceInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInvoiceInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInvoiceInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInvoiceInfoRequest(val *UpdateInvoiceInfoRequest) *NullableUpdateInvoiceInfoRequest {
	return &NullableUpdateInvoiceInfoRequest{value: val, isSet: true}
}

func (v NullableUpdateInvoiceInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInvoiceInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
