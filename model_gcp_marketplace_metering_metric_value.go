/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceMeteringMetricValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceMeteringMetricValue{}

// GcpMarketplaceMeteringMetricValue struct for GcpMarketplaceMeteringMetricValue
type GcpMarketplaceMeteringMetricValue struct {
	// BoolValue: A boolean value.
	BoolValue *bool `json:"boolValue,omitempty"`
	// DoubleValue: A double precision floating point value.
	DoubleValue *float32 `json:"doubleValue,omitempty"`
	// EndTime: The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.
	EndTime *string `json:"endTime,omitempty"`
	// Int64Value: A signed 64-bit integer value.
	Int64Value *string `json:"int64Value,omitempty"`
	// Labels: The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.
	Labels *map[string]string `json:"labels,omitempty"`
	// MoneyValue: A money value.
	MoneyValue *GcpMarketplaceMeteringMoney `json:"moneyValue,omitempty"`
	// StartTime: The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.
	StartTime *string `json:"startTime,omitempty"`
	// StringValue: A text string value.
	StringValue *string `json:"stringValue,omitempty"`
}

// NewGcpMarketplaceMeteringMetricValue instantiates a new GcpMarketplaceMeteringMetricValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceMeteringMetricValue() *GcpMarketplaceMeteringMetricValue {
	this := GcpMarketplaceMeteringMetricValue{}
	return &this
}

// NewGcpMarketplaceMeteringMetricValueWithDefaults instantiates a new GcpMarketplaceMeteringMetricValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceMeteringMetricValueWithDefaults() *GcpMarketplaceMeteringMetricValue {
	this := GcpMarketplaceMeteringMetricValue{}
	return &this
}

// GetBoolValue returns the BoolValue field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetBoolValue() bool {
	if o == nil || IsNil(o.BoolValue) {
		var ret bool
		return ret
	}
	return *o.BoolValue
}

// GetBoolValueOk returns a tuple with the BoolValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetBoolValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BoolValue) {
		return nil, false
	}
	return o.BoolValue, true
}

// HasBoolValue returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasBoolValue() bool {
	if o != nil && !IsNil(o.BoolValue) {
		return true
	}

	return false
}

// SetBoolValue gets a reference to the given bool and assigns it to the BoolValue field.
func (o *GcpMarketplaceMeteringMetricValue) SetBoolValue(v bool) {
	o.BoolValue = &v
}

// GetDoubleValue returns the DoubleValue field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetDoubleValue() float32 {
	if o == nil || IsNil(o.DoubleValue) {
		var ret float32
		return ret
	}
	return *o.DoubleValue
}

// GetDoubleValueOk returns a tuple with the DoubleValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetDoubleValueOk() (*float32, bool) {
	if o == nil || IsNil(o.DoubleValue) {
		return nil, false
	}
	return o.DoubleValue, true
}

// HasDoubleValue returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasDoubleValue() bool {
	if o != nil && !IsNil(o.DoubleValue) {
		return true
	}

	return false
}

// SetDoubleValue gets a reference to the given float32 and assigns it to the DoubleValue field.
func (o *GcpMarketplaceMeteringMetricValue) SetDoubleValue(v float32) {
	o.DoubleValue = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetEndTime() string {
	if o == nil || IsNil(o.EndTime) {
		var ret string
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetEndTimeOk() (*string, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given string and assigns it to the EndTime field.
func (o *GcpMarketplaceMeteringMetricValue) SetEndTime(v string) {
	o.EndTime = &v
}

// GetInt64Value returns the Int64Value field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetInt64Value() string {
	if o == nil || IsNil(o.Int64Value) {
		var ret string
		return ret
	}
	return *o.Int64Value
}

// GetInt64ValueOk returns a tuple with the Int64Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetInt64ValueOk() (*string, bool) {
	if o == nil || IsNil(o.Int64Value) {
		return nil, false
	}
	return o.Int64Value, true
}

// HasInt64Value returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasInt64Value() bool {
	if o != nil && !IsNil(o.Int64Value) {
		return true
	}

	return false
}

// SetInt64Value gets a reference to the given string and assigns it to the Int64Value field.
func (o *GcpMarketplaceMeteringMetricValue) SetInt64Value(v string) {
	o.Int64Value = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *GcpMarketplaceMeteringMetricValue) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetMoneyValue returns the MoneyValue field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetMoneyValue() GcpMarketplaceMeteringMoney {
	if o == nil || IsNil(o.MoneyValue) {
		var ret GcpMarketplaceMeteringMoney
		return ret
	}
	return *o.MoneyValue
}

// GetMoneyValueOk returns a tuple with the MoneyValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetMoneyValueOk() (*GcpMarketplaceMeteringMoney, bool) {
	if o == nil || IsNil(o.MoneyValue) {
		return nil, false
	}
	return o.MoneyValue, true
}

// HasMoneyValue returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasMoneyValue() bool {
	if o != nil && !IsNil(o.MoneyValue) {
		return true
	}

	return false
}

// SetMoneyValue gets a reference to the given GcpMarketplaceMeteringMoney and assigns it to the MoneyValue field.
func (o *GcpMarketplaceMeteringMetricValue) SetMoneyValue(v GcpMarketplaceMeteringMoney) {
	o.MoneyValue = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *GcpMarketplaceMeteringMetricValue) SetStartTime(v string) {
	o.StartTime = &v
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *GcpMarketplaceMeteringMetricValue) GetStringValue() string {
	if o == nil || IsNil(o.StringValue) {
		var ret string
		return ret
	}
	return *o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceMeteringMetricValue) GetStringValueOk() (*string, bool) {
	if o == nil || IsNil(o.StringValue) {
		return nil, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *GcpMarketplaceMeteringMetricValue) HasStringValue() bool {
	if o != nil && !IsNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given string and assigns it to the StringValue field.
func (o *GcpMarketplaceMeteringMetricValue) SetStringValue(v string) {
	o.StringValue = &v
}

func (o GcpMarketplaceMeteringMetricValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceMeteringMetricValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BoolValue) {
		toSerialize["boolValue"] = o.BoolValue
	}
	if !IsNil(o.DoubleValue) {
		toSerialize["doubleValue"] = o.DoubleValue
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Int64Value) {
		toSerialize["int64Value"] = o.Int64Value
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.MoneyValue) {
		toSerialize["moneyValue"] = o.MoneyValue
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.StringValue) {
		toSerialize["stringValue"] = o.StringValue
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceMeteringMetricValue struct {
	value *GcpMarketplaceMeteringMetricValue
	isSet bool
}

func (v NullableGcpMarketplaceMeteringMetricValue) Get() *GcpMarketplaceMeteringMetricValue {
	return v.value
}

func (v *NullableGcpMarketplaceMeteringMetricValue) Set(val *GcpMarketplaceMeteringMetricValue) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceMeteringMetricValue) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceMeteringMetricValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceMeteringMetricValue(val *GcpMarketplaceMeteringMetricValue) *NullableGcpMarketplaceMeteringMetricValue {
	return &NullableGcpMarketplaceMeteringMetricValue{value: val, isSet: true}
}

func (v NullableGcpMarketplaceMeteringMetricValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceMeteringMetricValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
