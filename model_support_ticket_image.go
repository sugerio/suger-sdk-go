/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SupportTicketImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupportTicketImage{}

// SupportTicketImage struct for SupportTicketImage
type SupportTicketImage struct {
	Extension       *string `json:"extension,omitempty"`
	Id              *string `json:"id,omitempty"`
	Name            *string `json:"name,omitempty"`
	ThumbnailLarge  *string `json:"thumbnail_large,omitempty"`
	ThumbnailMedium *string `json:"thumbnail_medium,omitempty"`
	ThumbnailSmall  *string `json:"thumbnail_small,omitempty"`
	Title           *string `json:"title,omitempty"`
	Type            *string `json:"type,omitempty"`
	Url             *string `json:"url,omitempty"`
}

// NewSupportTicketImage instantiates a new SupportTicketImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupportTicketImage() *SupportTicketImage {
	this := SupportTicketImage{}
	return &this
}

// NewSupportTicketImageWithDefaults instantiates a new SupportTicketImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupportTicketImageWithDefaults() *SupportTicketImage {
	this := SupportTicketImage{}
	return &this
}

// GetExtension returns the Extension field value if set, zero value otherwise.
func (o *SupportTicketImage) GetExtension() string {
	if o == nil || IsNil(o.Extension) {
		var ret string
		return ret
	}
	return *o.Extension
}

// GetExtensionOk returns a tuple with the Extension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetExtensionOk() (*string, bool) {
	if o == nil || IsNil(o.Extension) {
		return nil, false
	}
	return o.Extension, true
}

// HasExtension returns a boolean if a field has been set.
func (o *SupportTicketImage) HasExtension() bool {
	if o != nil && !IsNil(o.Extension) {
		return true
	}

	return false
}

// SetExtension gets a reference to the given string and assigns it to the Extension field.
func (o *SupportTicketImage) SetExtension(v string) {
	o.Extension = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SupportTicketImage) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SupportTicketImage) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SupportTicketImage) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SupportTicketImage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SupportTicketImage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SupportTicketImage) SetName(v string) {
	o.Name = &v
}

// GetThumbnailLarge returns the ThumbnailLarge field value if set, zero value otherwise.
func (o *SupportTicketImage) GetThumbnailLarge() string {
	if o == nil || IsNil(o.ThumbnailLarge) {
		var ret string
		return ret
	}
	return *o.ThumbnailLarge
}

// GetThumbnailLargeOk returns a tuple with the ThumbnailLarge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetThumbnailLargeOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailLarge) {
		return nil, false
	}
	return o.ThumbnailLarge, true
}

// HasThumbnailLarge returns a boolean if a field has been set.
func (o *SupportTicketImage) HasThumbnailLarge() bool {
	if o != nil && !IsNil(o.ThumbnailLarge) {
		return true
	}

	return false
}

// SetThumbnailLarge gets a reference to the given string and assigns it to the ThumbnailLarge field.
func (o *SupportTicketImage) SetThumbnailLarge(v string) {
	o.ThumbnailLarge = &v
}

// GetThumbnailMedium returns the ThumbnailMedium field value if set, zero value otherwise.
func (o *SupportTicketImage) GetThumbnailMedium() string {
	if o == nil || IsNil(o.ThumbnailMedium) {
		var ret string
		return ret
	}
	return *o.ThumbnailMedium
}

// GetThumbnailMediumOk returns a tuple with the ThumbnailMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetThumbnailMediumOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailMedium) {
		return nil, false
	}
	return o.ThumbnailMedium, true
}

// HasThumbnailMedium returns a boolean if a field has been set.
func (o *SupportTicketImage) HasThumbnailMedium() bool {
	if o != nil && !IsNil(o.ThumbnailMedium) {
		return true
	}

	return false
}

// SetThumbnailMedium gets a reference to the given string and assigns it to the ThumbnailMedium field.
func (o *SupportTicketImage) SetThumbnailMedium(v string) {
	o.ThumbnailMedium = &v
}

// GetThumbnailSmall returns the ThumbnailSmall field value if set, zero value otherwise.
func (o *SupportTicketImage) GetThumbnailSmall() string {
	if o == nil || IsNil(o.ThumbnailSmall) {
		var ret string
		return ret
	}
	return *o.ThumbnailSmall
}

// GetThumbnailSmallOk returns a tuple with the ThumbnailSmall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetThumbnailSmallOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailSmall) {
		return nil, false
	}
	return o.ThumbnailSmall, true
}

// HasThumbnailSmall returns a boolean if a field has been set.
func (o *SupportTicketImage) HasThumbnailSmall() bool {
	if o != nil && !IsNil(o.ThumbnailSmall) {
		return true
	}

	return false
}

// SetThumbnailSmall gets a reference to the given string and assigns it to the ThumbnailSmall field.
func (o *SupportTicketImage) SetThumbnailSmall(v string) {
	o.ThumbnailSmall = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SupportTicketImage) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SupportTicketImage) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SupportTicketImage) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SupportTicketImage) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SupportTicketImage) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SupportTicketImage) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SupportTicketImage) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupportTicketImage) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SupportTicketImage) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SupportTicketImage) SetUrl(v string) {
	o.Url = &v
}

func (o SupportTicketImage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupportTicketImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Extension) {
		toSerialize["extension"] = o.Extension
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ThumbnailLarge) {
		toSerialize["thumbnail_large"] = o.ThumbnailLarge
	}
	if !IsNil(o.ThumbnailMedium) {
		toSerialize["thumbnail_medium"] = o.ThumbnailMedium
	}
	if !IsNil(o.ThumbnailSmall) {
		toSerialize["thumbnail_small"] = o.ThumbnailSmall
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableSupportTicketImage struct {
	value *SupportTicketImage
	isSet bool
}

func (v NullableSupportTicketImage) Get() *SupportTicketImage {
	return v.value
}

func (v *NullableSupportTicketImage) Set(val *SupportTicketImage) {
	v.value = val
	v.isSet = true
}

func (v NullableSupportTicketImage) IsSet() bool {
	return v.isSet
}

func (v *NullableSupportTicketImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupportTicketImage(val *SupportTicketImage) *NullableSupportTicketImage {
	return &NullableSupportTicketImage{value: val, isSet: true}
}

func (v NullableSupportTicketImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupportTicketImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
