/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage{}

// GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage struct for GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage
type GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage struct {
	Abandoned                      *float32 `json:"abandoned,omitempty"`
	AccountID                      *string  `json:"accountID,omitempty"`
	BuyerID                        *string  `json:"buyerID,omitempty"`
	Charges                        *float32 `json:"charges,omitempty"`
	Currency                       *string  `json:"currency,omitempty"`
	DueVendor                      *float32 `json:"dueVendor,omitempty"`
	EntitlementID                  *string  `json:"entitlementID,omitempty"`
	GoogleEntity                   *string  `json:"googleEntity,omitempty"`
	InsightAccountID               *string  `json:"insightAccountID,omitempty"`
	OfferID                        *string  `json:"offerID,omitempty"`
	Ordinal                        *int32   `json:"ordinal,omitempty"`
	OrganizationID                 *string  `json:"organizationID,omitempty"`
	PaymentSchedule                *string  `json:"paymentSchedule,omitempty"`
	PaymentType                    *string  `json:"paymentType,omitempty"`
	PrepayCredits                  *float32 `json:"prepayCredits,omitempty"`
	ProductID                      *string  `json:"productID,omitempty"`
	RefundBalanceDeductedThisMonth *float32 `json:"refundBalanceDeductedThisMonth,omitempty"`
	RefundBalanceOutstanding       *float32 `json:"refundBalanceOutstanding,omitempty"`
	RefundReason                   *string  `json:"refundReason,omitempty"`
	Released                       *float32 `json:"released,omitempty"`
	ReportDate                     *string  `json:"reportDate,omitempty"`
	Resource                       *string  `json:"resource,omitempty"`
	Sku                            *string  `json:"sku,omitempty"`
	TrialUse                       *float32 `json:"trialUse,omitempty"`
	Unit                           *string  `json:"unit,omitempty"`
	Usage                          *float32 `json:"usage,omitempty"`
	UsedBy                         *string  `json:"usedBy,omitempty"`
	Withheld                       *float32 `json:"withheld,omitempty"`
}

// NewGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage instantiates a new GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage() *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage {
	this := GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage{}
	return &this
}

// NewGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsageWithDefaults instantiates a new GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsageWithDefaults() *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage {
	this := GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage{}
	return &this
}

// GetAbandoned returns the Abandoned field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetAbandoned() float32 {
	if o == nil || IsNil(o.Abandoned) {
		var ret float32
		return ret
	}
	return *o.Abandoned
}

// GetAbandonedOk returns a tuple with the Abandoned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetAbandonedOk() (*float32, bool) {
	if o == nil || IsNil(o.Abandoned) {
		return nil, false
	}
	return o.Abandoned, true
}

// HasAbandoned returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasAbandoned() bool {
	if o != nil && !IsNil(o.Abandoned) {
		return true
	}

	return false
}

// SetAbandoned gets a reference to the given float32 and assigns it to the Abandoned field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetAbandoned(v float32) {
	o.Abandoned = &v
}

// GetAccountID returns the AccountID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetAccountID() string {
	if o == nil || IsNil(o.AccountID) {
		var ret string
		return ret
	}
	return *o.AccountID
}

// GetAccountIDOk returns a tuple with the AccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.AccountID) {
		return nil, false
	}
	return o.AccountID, true
}

// HasAccountID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasAccountID() bool {
	if o != nil && !IsNil(o.AccountID) {
		return true
	}

	return false
}

// SetAccountID gets a reference to the given string and assigns it to the AccountID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetAccountID(v string) {
	o.AccountID = &v
}

// GetBuyerID returns the BuyerID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetBuyerID() string {
	if o == nil || IsNil(o.BuyerID) {
		var ret string
		return ret
	}
	return *o.BuyerID
}

// GetBuyerIDOk returns a tuple with the BuyerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetBuyerIDOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerID) {
		return nil, false
	}
	return o.BuyerID, true
}

// HasBuyerID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasBuyerID() bool {
	if o != nil && !IsNil(o.BuyerID) {
		return true
	}

	return false
}

// SetBuyerID gets a reference to the given string and assigns it to the BuyerID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetBuyerID(v string) {
	o.BuyerID = &v
}

// GetCharges returns the Charges field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetCharges() float32 {
	if o == nil || IsNil(o.Charges) {
		var ret float32
		return ret
	}
	return *o.Charges
}

// GetChargesOk returns a tuple with the Charges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetChargesOk() (*float32, bool) {
	if o == nil || IsNil(o.Charges) {
		return nil, false
	}
	return o.Charges, true
}

// HasCharges returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasCharges() bool {
	if o != nil && !IsNil(o.Charges) {
		return true
	}

	return false
}

// SetCharges gets a reference to the given float32 and assigns it to the Charges field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetCharges(v float32) {
	o.Charges = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetCurrency(v string) {
	o.Currency = &v
}

// GetDueVendor returns the DueVendor field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetDueVendor() float32 {
	if o == nil || IsNil(o.DueVendor) {
		var ret float32
		return ret
	}
	return *o.DueVendor
}

// GetDueVendorOk returns a tuple with the DueVendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetDueVendorOk() (*float32, bool) {
	if o == nil || IsNil(o.DueVendor) {
		return nil, false
	}
	return o.DueVendor, true
}

// HasDueVendor returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasDueVendor() bool {
	if o != nil && !IsNil(o.DueVendor) {
		return true
	}

	return false
}

// SetDueVendor gets a reference to the given float32 and assigns it to the DueVendor field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetDueVendor(v float32) {
	o.DueVendor = &v
}

// GetEntitlementID returns the EntitlementID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetEntitlementID() string {
	if o == nil || IsNil(o.EntitlementID) {
		var ret string
		return ret
	}
	return *o.EntitlementID
}

// GetEntitlementIDOk returns a tuple with the EntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetEntitlementIDOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementID) {
		return nil, false
	}
	return o.EntitlementID, true
}

// HasEntitlementID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasEntitlementID() bool {
	if o != nil && !IsNil(o.EntitlementID) {
		return true
	}

	return false
}

// SetEntitlementID gets a reference to the given string and assigns it to the EntitlementID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetEntitlementID(v string) {
	o.EntitlementID = &v
}

// GetGoogleEntity returns the GoogleEntity field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetGoogleEntity() string {
	if o == nil || IsNil(o.GoogleEntity) {
		var ret string
		return ret
	}
	return *o.GoogleEntity
}

// GetGoogleEntityOk returns a tuple with the GoogleEntity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetGoogleEntityOk() (*string, bool) {
	if o == nil || IsNil(o.GoogleEntity) {
		return nil, false
	}
	return o.GoogleEntity, true
}

// HasGoogleEntity returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasGoogleEntity() bool {
	if o != nil && !IsNil(o.GoogleEntity) {
		return true
	}

	return false
}

// SetGoogleEntity gets a reference to the given string and assigns it to the GoogleEntity field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetGoogleEntity(v string) {
	o.GoogleEntity = &v
}

// GetInsightAccountID returns the InsightAccountID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetInsightAccountID() string {
	if o == nil || IsNil(o.InsightAccountID) {
		var ret string
		return ret
	}
	return *o.InsightAccountID
}

// GetInsightAccountIDOk returns a tuple with the InsightAccountID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetInsightAccountIDOk() (*string, bool) {
	if o == nil || IsNil(o.InsightAccountID) {
		return nil, false
	}
	return o.InsightAccountID, true
}

// HasInsightAccountID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasInsightAccountID() bool {
	if o != nil && !IsNil(o.InsightAccountID) {
		return true
	}

	return false
}

// SetInsightAccountID gets a reference to the given string and assigns it to the InsightAccountID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetInsightAccountID(v string) {
	o.InsightAccountID = &v
}

// GetOfferID returns the OfferID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOfferID() string {
	if o == nil || IsNil(o.OfferID) {
		var ret string
		return ret
	}
	return *o.OfferID
}

// GetOfferIDOk returns a tuple with the OfferID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOfferIDOk() (*string, bool) {
	if o == nil || IsNil(o.OfferID) {
		return nil, false
	}
	return o.OfferID, true
}

// HasOfferID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasOfferID() bool {
	if o != nil && !IsNil(o.OfferID) {
		return true
	}

	return false
}

// SetOfferID gets a reference to the given string and assigns it to the OfferID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetOfferID(v string) {
	o.OfferID = &v
}

// GetOrdinal returns the Ordinal field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOrdinal() int32 {
	if o == nil || IsNil(o.Ordinal) {
		var ret int32
		return ret
	}
	return *o.Ordinal
}

// GetOrdinalOk returns a tuple with the Ordinal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOrdinalOk() (*int32, bool) {
	if o == nil || IsNil(o.Ordinal) {
		return nil, false
	}
	return o.Ordinal, true
}

// HasOrdinal returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasOrdinal() bool {
	if o != nil && !IsNil(o.Ordinal) {
		return true
	}

	return false
}

// SetOrdinal gets a reference to the given int32 and assigns it to the Ordinal field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetOrdinal(v int32) {
	o.Ordinal = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPaymentSchedule() string {
	if o == nil || IsNil(o.PaymentSchedule) {
		var ret string
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPaymentScheduleOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentSchedule) {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasPaymentSchedule() bool {
	if o != nil && !IsNil(o.PaymentSchedule) {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given string and assigns it to the PaymentSchedule field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetPaymentSchedule(v string) {
	o.PaymentSchedule = &v
}

// GetPaymentType returns the PaymentType field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPaymentType() string {
	if o == nil || IsNil(o.PaymentType) {
		var ret string
		return ret
	}
	return *o.PaymentType
}

// GetPaymentTypeOk returns a tuple with the PaymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPaymentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentType) {
		return nil, false
	}
	return o.PaymentType, true
}

// HasPaymentType returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasPaymentType() bool {
	if o != nil && !IsNil(o.PaymentType) {
		return true
	}

	return false
}

// SetPaymentType gets a reference to the given string and assigns it to the PaymentType field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetPaymentType(v string) {
	o.PaymentType = &v
}

// GetPrepayCredits returns the PrepayCredits field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPrepayCredits() float32 {
	if o == nil || IsNil(o.PrepayCredits) {
		var ret float32
		return ret
	}
	return *o.PrepayCredits
}

// GetPrepayCreditsOk returns a tuple with the PrepayCredits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetPrepayCreditsOk() (*float32, bool) {
	if o == nil || IsNil(o.PrepayCredits) {
		return nil, false
	}
	return o.PrepayCredits, true
}

// HasPrepayCredits returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasPrepayCredits() bool {
	if o != nil && !IsNil(o.PrepayCredits) {
		return true
	}

	return false
}

// SetPrepayCredits gets a reference to the given float32 and assigns it to the PrepayCredits field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetPrepayCredits(v float32) {
	o.PrepayCredits = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetProductID() string {
	if o == nil || IsNil(o.ProductID) {
		var ret string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetProductIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given string and assigns it to the ProductID field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetProductID(v string) {
	o.ProductID = &v
}

// GetRefundBalanceDeductedThisMonth returns the RefundBalanceDeductedThisMonth field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundBalanceDeductedThisMonth() float32 {
	if o == nil || IsNil(o.RefundBalanceDeductedThisMonth) {
		var ret float32
		return ret
	}
	return *o.RefundBalanceDeductedThisMonth
}

// GetRefundBalanceDeductedThisMonthOk returns a tuple with the RefundBalanceDeductedThisMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundBalanceDeductedThisMonthOk() (*float32, bool) {
	if o == nil || IsNil(o.RefundBalanceDeductedThisMonth) {
		return nil, false
	}
	return o.RefundBalanceDeductedThisMonth, true
}

// HasRefundBalanceDeductedThisMonth returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasRefundBalanceDeductedThisMonth() bool {
	if o != nil && !IsNil(o.RefundBalanceDeductedThisMonth) {
		return true
	}

	return false
}

// SetRefundBalanceDeductedThisMonth gets a reference to the given float32 and assigns it to the RefundBalanceDeductedThisMonth field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetRefundBalanceDeductedThisMonth(v float32) {
	o.RefundBalanceDeductedThisMonth = &v
}

// GetRefundBalanceOutstanding returns the RefundBalanceOutstanding field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundBalanceOutstanding() float32 {
	if o == nil || IsNil(o.RefundBalanceOutstanding) {
		var ret float32
		return ret
	}
	return *o.RefundBalanceOutstanding
}

// GetRefundBalanceOutstandingOk returns a tuple with the RefundBalanceOutstanding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundBalanceOutstandingOk() (*float32, bool) {
	if o == nil || IsNil(o.RefundBalanceOutstanding) {
		return nil, false
	}
	return o.RefundBalanceOutstanding, true
}

// HasRefundBalanceOutstanding returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasRefundBalanceOutstanding() bool {
	if o != nil && !IsNil(o.RefundBalanceOutstanding) {
		return true
	}

	return false
}

// SetRefundBalanceOutstanding gets a reference to the given float32 and assigns it to the RefundBalanceOutstanding field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetRefundBalanceOutstanding(v float32) {
	o.RefundBalanceOutstanding = &v
}

// GetRefundReason returns the RefundReason field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundReason() string {
	if o == nil || IsNil(o.RefundReason) {
		var ret string
		return ret
	}
	return *o.RefundReason
}

// GetRefundReasonOk returns a tuple with the RefundReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetRefundReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RefundReason) {
		return nil, false
	}
	return o.RefundReason, true
}

// HasRefundReason returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasRefundReason() bool {
	if o != nil && !IsNil(o.RefundReason) {
		return true
	}

	return false
}

// SetRefundReason gets a reference to the given string and assigns it to the RefundReason field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetRefundReason(v string) {
	o.RefundReason = &v
}

// GetReleased returns the Released field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetReleased() float32 {
	if o == nil || IsNil(o.Released) {
		var ret float32
		return ret
	}
	return *o.Released
}

// GetReleasedOk returns a tuple with the Released field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetReleasedOk() (*float32, bool) {
	if o == nil || IsNil(o.Released) {
		return nil, false
	}
	return o.Released, true
}

// HasReleased returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasReleased() bool {
	if o != nil && !IsNil(o.Released) {
		return true
	}

	return false
}

// SetReleased gets a reference to the given float32 and assigns it to the Released field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetReleased(v float32) {
	o.Released = &v
}

// GetReportDate returns the ReportDate field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetReportDate() string {
	if o == nil || IsNil(o.ReportDate) {
		var ret string
		return ret
	}
	return *o.ReportDate
}

// GetReportDateOk returns a tuple with the ReportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetReportDateOk() (*string, bool) {
	if o == nil || IsNil(o.ReportDate) {
		return nil, false
	}
	return o.ReportDate, true
}

// HasReportDate returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasReportDate() bool {
	if o != nil && !IsNil(o.ReportDate) {
		return true
	}

	return false
}

// SetReportDate gets a reference to the given string and assigns it to the ReportDate field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetReportDate(v string) {
	o.ReportDate = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetResource(v string) {
	o.Resource = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetSku(v string) {
	o.Sku = &v
}

// GetTrialUse returns the TrialUse field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetTrialUse() float32 {
	if o == nil || IsNil(o.TrialUse) {
		var ret float32
		return ret
	}
	return *o.TrialUse
}

// GetTrialUseOk returns a tuple with the TrialUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetTrialUseOk() (*float32, bool) {
	if o == nil || IsNil(o.TrialUse) {
		return nil, false
	}
	return o.TrialUse, true
}

// HasTrialUse returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasTrialUse() bool {
	if o != nil && !IsNil(o.TrialUse) {
		return true
	}

	return false
}

// SetTrialUse gets a reference to the given float32 and assigns it to the TrialUse field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetTrialUse(v float32) {
	o.TrialUse = &v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUnit() string {
	if o == nil || IsNil(o.Unit) {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUnitOk() (*string, bool) {
	if o == nil || IsNil(o.Unit) {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasUnit() bool {
	if o != nil && !IsNil(o.Unit) {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetUnit(v string) {
	o.Unit = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUsage() float32 {
	if o == nil || IsNil(o.Usage) {
		var ret float32
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUsageOk() (*float32, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given float32 and assigns it to the Usage field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetUsage(v float32) {
	o.Usage = &v
}

// GetUsedBy returns the UsedBy field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUsedBy() string {
	if o == nil || IsNil(o.UsedBy) {
		var ret string
		return ret
	}
	return *o.UsedBy
}

// GetUsedByOk returns a tuple with the UsedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetUsedByOk() (*string, bool) {
	if o == nil || IsNil(o.UsedBy) {
		return nil, false
	}
	return o.UsedBy, true
}

// HasUsedBy returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasUsedBy() bool {
	if o != nil && !IsNil(o.UsedBy) {
		return true
	}

	return false
}

// SetUsedBy gets a reference to the given string and assigns it to the UsedBy field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetUsedBy(v string) {
	o.UsedBy = &v
}

// GetWithheld returns the Withheld field value if set, zero value otherwise.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetWithheld() float32 {
	if o == nil || IsNil(o.Withheld) {
		var ret float32
		return ret
	}
	return *o.Withheld
}

// GetWithheldOk returns a tuple with the Withheld field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) GetWithheldOk() (*float32, bool) {
	if o == nil || IsNil(o.Withheld) {
		return nil, false
	}
	return o.Withheld, true
}

// HasWithheld returns a boolean if a field has been set.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) HasWithheld() bool {
	if o != nil && !IsNil(o.Withheld) {
		return true
	}

	return false
}

// SetWithheld gets a reference to the given float32 and assigns it to the Withheld field.
func (o *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) SetWithheld(v float32) {
	o.Withheld = &v
}

func (o GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Abandoned) {
		toSerialize["abandoned"] = o.Abandoned
	}
	if !IsNil(o.AccountID) {
		toSerialize["accountID"] = o.AccountID
	}
	if !IsNil(o.BuyerID) {
		toSerialize["buyerID"] = o.BuyerID
	}
	if !IsNil(o.Charges) {
		toSerialize["charges"] = o.Charges
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DueVendor) {
		toSerialize["dueVendor"] = o.DueVendor
	}
	if !IsNil(o.EntitlementID) {
		toSerialize["entitlementID"] = o.EntitlementID
	}
	if !IsNil(o.GoogleEntity) {
		toSerialize["googleEntity"] = o.GoogleEntity
	}
	if !IsNil(o.InsightAccountID) {
		toSerialize["insightAccountID"] = o.InsightAccountID
	}
	if !IsNil(o.OfferID) {
		toSerialize["offerID"] = o.OfferID
	}
	if !IsNil(o.Ordinal) {
		toSerialize["ordinal"] = o.Ordinal
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	if !IsNil(o.PaymentSchedule) {
		toSerialize["paymentSchedule"] = o.PaymentSchedule
	}
	if !IsNil(o.PaymentType) {
		toSerialize["paymentType"] = o.PaymentType
	}
	if !IsNil(o.PrepayCredits) {
		toSerialize["prepayCredits"] = o.PrepayCredits
	}
	if !IsNil(o.ProductID) {
		toSerialize["productID"] = o.ProductID
	}
	if !IsNil(o.RefundBalanceDeductedThisMonth) {
		toSerialize["refundBalanceDeductedThisMonth"] = o.RefundBalanceDeductedThisMonth
	}
	if !IsNil(o.RefundBalanceOutstanding) {
		toSerialize["refundBalanceOutstanding"] = o.RefundBalanceOutstanding
	}
	if !IsNil(o.RefundReason) {
		toSerialize["refundReason"] = o.RefundReason
	}
	if !IsNil(o.Released) {
		toSerialize["released"] = o.Released
	}
	if !IsNil(o.ReportDate) {
		toSerialize["reportDate"] = o.ReportDate
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Sku) {
		toSerialize["sku"] = o.Sku
	}
	if !IsNil(o.TrialUse) {
		toSerialize["trialUse"] = o.TrialUse
	}
	if !IsNil(o.Unit) {
		toSerialize["unit"] = o.Unit
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.UsedBy) {
		toSerialize["usedBy"] = o.UsedBy
	}
	if !IsNil(o.Withheld) {
		toSerialize["withheld"] = o.Withheld
	}
	return toSerialize, nil
}

type NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage struct {
	value *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage
	isSet bool
}

func (v NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) Get() *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage {
	return v.value
}

func (v *NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) Set(val *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage(val *GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) *NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage {
	return &NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage{value: val, isSet: true}
}

func (v NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingGcpChargeUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
