/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the WorkloadEntitlementTerm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadEntitlementTerm{}

// WorkloadEntitlementTerm struct for WorkloadEntitlementTerm
type WorkloadEntitlementTerm struct {
	BuyerID      *string  `json:"buyerID,omitempty"`
	CommitAmount *float32 `json:"commitAmount,omitempty"`
	CreditAmount *float32 `json:"creditAmount,omitempty"`
	// nullable
	EndTime               *time.Time           `json:"endTime,omitempty"`
	EntitlementID         *string              `json:"entitlementID,omitempty"`
	EntitlementInfo       *EntitlementInfo     `json:"entitlementInfo,omitempty"`
	ExternalEntitlementID *string              `json:"externalEntitlementID,omitempty"`
	Id                    *string              `json:"id,omitempty"`
	Info                  *EntitlementTermInfo `json:"info,omitempty"`
	OfferID               *string              `json:"offerID,omitempty"`
	OrganizationID        *string              `json:"organizationID,omitempty"`
	Partner               *Partner             `json:"partner,omitempty"`
	ProductID             *string              `json:"productID,omitempty"`
	ReportedAmount        *float32             `json:"reportedAmount,omitempty"`
	Service               *PartnerService      `json:"service,omitempty"`
	StartTime             *time.Time           `json:"startTime,omitempty"`
	UsedCommitAmount      *float32             `json:"usedCommitAmount,omitempty"`
	UsedCreditAmount      *float32             `json:"usedCreditAmount,omitempty"`
}

// NewWorkloadEntitlementTerm instantiates a new WorkloadEntitlementTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadEntitlementTerm() *WorkloadEntitlementTerm {
	this := WorkloadEntitlementTerm{}
	return &this
}

// NewWorkloadEntitlementTermWithDefaults instantiates a new WorkloadEntitlementTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadEntitlementTermWithDefaults() *WorkloadEntitlementTerm {
	this := WorkloadEntitlementTerm{}
	return &this
}

// GetBuyerID returns the BuyerID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetBuyerID() string {
	if o == nil || IsNil(o.BuyerID) {
		var ret string
		return ret
	}
	return *o.BuyerID
}

// GetBuyerIDOk returns a tuple with the BuyerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetBuyerIDOk() (*string, bool) {
	if o == nil || IsNil(o.BuyerID) {
		return nil, false
	}
	return o.BuyerID, true
}

// HasBuyerID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasBuyerID() bool {
	if o != nil && !IsNil(o.BuyerID) {
		return true
	}

	return false
}

// SetBuyerID gets a reference to the given string and assigns it to the BuyerID field.
func (o *WorkloadEntitlementTerm) SetBuyerID(v string) {
	o.BuyerID = &v
}

// GetCommitAmount returns the CommitAmount field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetCommitAmount() float32 {
	if o == nil || IsNil(o.CommitAmount) {
		var ret float32
		return ret
	}
	return *o.CommitAmount
}

// GetCommitAmountOk returns a tuple with the CommitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetCommitAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CommitAmount) {
		return nil, false
	}
	return o.CommitAmount, true
}

// HasCommitAmount returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasCommitAmount() bool {
	if o != nil && !IsNil(o.CommitAmount) {
		return true
	}

	return false
}

// SetCommitAmount gets a reference to the given float32 and assigns it to the CommitAmount field.
func (o *WorkloadEntitlementTerm) SetCommitAmount(v float32) {
	o.CommitAmount = &v
}

// GetCreditAmount returns the CreditAmount field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetCreditAmount() float32 {
	if o == nil || IsNil(o.CreditAmount) {
		var ret float32
		return ret
	}
	return *o.CreditAmount
}

// GetCreditAmountOk returns a tuple with the CreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetCreditAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CreditAmount) {
		return nil, false
	}
	return o.CreditAmount, true
}

// HasCreditAmount returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasCreditAmount() bool {
	if o != nil && !IsNil(o.CreditAmount) {
		return true
	}

	return false
}

// SetCreditAmount gets a reference to the given float32 and assigns it to the CreditAmount field.
func (o *WorkloadEntitlementTerm) SetCreditAmount(v float32) {
	o.CreditAmount = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetEndTime() time.Time {
	if o == nil || IsNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *WorkloadEntitlementTerm) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetEntitlementID returns the EntitlementID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetEntitlementID() string {
	if o == nil || IsNil(o.EntitlementID) {
		var ret string
		return ret
	}
	return *o.EntitlementID
}

// GetEntitlementIDOk returns a tuple with the EntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetEntitlementIDOk() (*string, bool) {
	if o == nil || IsNil(o.EntitlementID) {
		return nil, false
	}
	return o.EntitlementID, true
}

// HasEntitlementID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasEntitlementID() bool {
	if o != nil && !IsNil(o.EntitlementID) {
		return true
	}

	return false
}

// SetEntitlementID gets a reference to the given string and assigns it to the EntitlementID field.
func (o *WorkloadEntitlementTerm) SetEntitlementID(v string) {
	o.EntitlementID = &v
}

// GetEntitlementInfo returns the EntitlementInfo field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetEntitlementInfo() EntitlementInfo {
	if o == nil || IsNil(o.EntitlementInfo) {
		var ret EntitlementInfo
		return ret
	}
	return *o.EntitlementInfo
}

// GetEntitlementInfoOk returns a tuple with the EntitlementInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetEntitlementInfoOk() (*EntitlementInfo, bool) {
	if o == nil || IsNil(o.EntitlementInfo) {
		return nil, false
	}
	return o.EntitlementInfo, true
}

// HasEntitlementInfo returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasEntitlementInfo() bool {
	if o != nil && !IsNil(o.EntitlementInfo) {
		return true
	}

	return false
}

// SetEntitlementInfo gets a reference to the given EntitlementInfo and assigns it to the EntitlementInfo field.
func (o *WorkloadEntitlementTerm) SetEntitlementInfo(v EntitlementInfo) {
	o.EntitlementInfo = &v
}

// GetExternalEntitlementID returns the ExternalEntitlementID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetExternalEntitlementID() string {
	if o == nil || IsNil(o.ExternalEntitlementID) {
		var ret string
		return ret
	}
	return *o.ExternalEntitlementID
}

// GetExternalEntitlementIDOk returns a tuple with the ExternalEntitlementID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetExternalEntitlementIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalEntitlementID) {
		return nil, false
	}
	return o.ExternalEntitlementID, true
}

// HasExternalEntitlementID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasExternalEntitlementID() bool {
	if o != nil && !IsNil(o.ExternalEntitlementID) {
		return true
	}

	return false
}

// SetExternalEntitlementID gets a reference to the given string and assigns it to the ExternalEntitlementID field.
func (o *WorkloadEntitlementTerm) SetExternalEntitlementID(v string) {
	o.ExternalEntitlementID = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WorkloadEntitlementTerm) SetId(v string) {
	o.Id = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetInfo() EntitlementTermInfo {
	if o == nil || IsNil(o.Info) {
		var ret EntitlementTermInfo
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetInfoOk() (*EntitlementTermInfo, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given EntitlementTermInfo and assigns it to the Info field.
func (o *WorkloadEntitlementTerm) SetInfo(v EntitlementTermInfo) {
	o.Info = &v
}

// GetOfferID returns the OfferID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetOfferID() string {
	if o == nil || IsNil(o.OfferID) {
		var ret string
		return ret
	}
	return *o.OfferID
}

// GetOfferIDOk returns a tuple with the OfferID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetOfferIDOk() (*string, bool) {
	if o == nil || IsNil(o.OfferID) {
		return nil, false
	}
	return o.OfferID, true
}

// HasOfferID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasOfferID() bool {
	if o != nil && !IsNil(o.OfferID) {
		return true
	}

	return false
}

// SetOfferID gets a reference to the given string and assigns it to the OfferID field.
func (o *WorkloadEntitlementTerm) SetOfferID(v string) {
	o.OfferID = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *WorkloadEntitlementTerm) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetPartner() Partner {
	if o == nil || IsNil(o.Partner) {
		var ret Partner
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetPartnerOk() (*Partner, bool) {
	if o == nil || IsNil(o.Partner) {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasPartner() bool {
	if o != nil && !IsNil(o.Partner) {
		return true
	}

	return false
}

// SetPartner gets a reference to the given Partner and assigns it to the Partner field.
func (o *WorkloadEntitlementTerm) SetPartner(v Partner) {
	o.Partner = &v
}

// GetProductID returns the ProductID field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetProductID() string {
	if o == nil || IsNil(o.ProductID) {
		var ret string
		return ret
	}
	return *o.ProductID
}

// GetProductIDOk returns a tuple with the ProductID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetProductIDOk() (*string, bool) {
	if o == nil || IsNil(o.ProductID) {
		return nil, false
	}
	return o.ProductID, true
}

// HasProductID returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasProductID() bool {
	if o != nil && !IsNil(o.ProductID) {
		return true
	}

	return false
}

// SetProductID gets a reference to the given string and assigns it to the ProductID field.
func (o *WorkloadEntitlementTerm) SetProductID(v string) {
	o.ProductID = &v
}

// GetReportedAmount returns the ReportedAmount field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetReportedAmount() float32 {
	if o == nil || IsNil(o.ReportedAmount) {
		var ret float32
		return ret
	}
	return *o.ReportedAmount
}

// GetReportedAmountOk returns a tuple with the ReportedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetReportedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ReportedAmount) {
		return nil, false
	}
	return o.ReportedAmount, true
}

// HasReportedAmount returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasReportedAmount() bool {
	if o != nil && !IsNil(o.ReportedAmount) {
		return true
	}

	return false
}

// SetReportedAmount gets a reference to the given float32 and assigns it to the ReportedAmount field.
func (o *WorkloadEntitlementTerm) SetReportedAmount(v float32) {
	o.ReportedAmount = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetService() PartnerService {
	if o == nil || IsNil(o.Service) {
		var ret PartnerService
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetServiceOk() (*PartnerService, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given PartnerService and assigns it to the Service field.
func (o *WorkloadEntitlementTerm) SetService(v PartnerService) {
	o.Service = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *WorkloadEntitlementTerm) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetUsedCommitAmount returns the UsedCommitAmount field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetUsedCommitAmount() float32 {
	if o == nil || IsNil(o.UsedCommitAmount) {
		var ret float32
		return ret
	}
	return *o.UsedCommitAmount
}

// GetUsedCommitAmountOk returns a tuple with the UsedCommitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetUsedCommitAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.UsedCommitAmount) {
		return nil, false
	}
	return o.UsedCommitAmount, true
}

// HasUsedCommitAmount returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasUsedCommitAmount() bool {
	if o != nil && !IsNil(o.UsedCommitAmount) {
		return true
	}

	return false
}

// SetUsedCommitAmount gets a reference to the given float32 and assigns it to the UsedCommitAmount field.
func (o *WorkloadEntitlementTerm) SetUsedCommitAmount(v float32) {
	o.UsedCommitAmount = &v
}

// GetUsedCreditAmount returns the UsedCreditAmount field value if set, zero value otherwise.
func (o *WorkloadEntitlementTerm) GetUsedCreditAmount() float32 {
	if o == nil || IsNil(o.UsedCreditAmount) {
		var ret float32
		return ret
	}
	return *o.UsedCreditAmount
}

// GetUsedCreditAmountOk returns a tuple with the UsedCreditAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadEntitlementTerm) GetUsedCreditAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.UsedCreditAmount) {
		return nil, false
	}
	return o.UsedCreditAmount, true
}

// HasUsedCreditAmount returns a boolean if a field has been set.
func (o *WorkloadEntitlementTerm) HasUsedCreditAmount() bool {
	if o != nil && !IsNil(o.UsedCreditAmount) {
		return true
	}

	return false
}

// SetUsedCreditAmount gets a reference to the given float32 and assigns it to the UsedCreditAmount field.
func (o *WorkloadEntitlementTerm) SetUsedCreditAmount(v float32) {
	o.UsedCreditAmount = &v
}

func (o WorkloadEntitlementTerm) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadEntitlementTerm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuyerID) {
		toSerialize["buyerID"] = o.BuyerID
	}
	if !IsNil(o.CommitAmount) {
		toSerialize["commitAmount"] = o.CommitAmount
	}
	if !IsNil(o.CreditAmount) {
		toSerialize["creditAmount"] = o.CreditAmount
	}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.EntitlementID) {
		toSerialize["entitlementID"] = o.EntitlementID
	}
	if !IsNil(o.EntitlementInfo) {
		toSerialize["entitlementInfo"] = o.EntitlementInfo
	}
	if !IsNil(o.ExternalEntitlementID) {
		toSerialize["externalEntitlementID"] = o.ExternalEntitlementID
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.OfferID) {
		toSerialize["offerID"] = o.OfferID
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	if !IsNil(o.Partner) {
		toSerialize["partner"] = o.Partner
	}
	if !IsNil(o.ProductID) {
		toSerialize["productID"] = o.ProductID
	}
	if !IsNil(o.ReportedAmount) {
		toSerialize["reportedAmount"] = o.ReportedAmount
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.UsedCommitAmount) {
		toSerialize["usedCommitAmount"] = o.UsedCommitAmount
	}
	if !IsNil(o.UsedCreditAmount) {
		toSerialize["usedCreditAmount"] = o.UsedCreditAmount
	}
	return toSerialize, nil
}

type NullableWorkloadEntitlementTerm struct {
	value *WorkloadEntitlementTerm
	isSet bool
}

func (v NullableWorkloadEntitlementTerm) Get() *WorkloadEntitlementTerm {
	return v.value
}

func (v *NullableWorkloadEntitlementTerm) Set(val *WorkloadEntitlementTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadEntitlementTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadEntitlementTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadEntitlementTerm(val *WorkloadEntitlementTerm) *NullableWorkloadEntitlementTerm {
	return &NullableWorkloadEntitlementTerm{value: val, isSet: true}
}

func (v NullableWorkloadEntitlementTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadEntitlementTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
