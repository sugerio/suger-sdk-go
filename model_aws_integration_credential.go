/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsIntegrationCredential type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsIntegrationCredential{}

// AwsIntegrationCredential struct for AwsIntegrationCredential
type AwsIntegrationCredential struct {
	// The access key ID of the IAM user for Suger service to access the client's AWS services.
	AccessKeyId *string `json:"accessKeyId,omitempty"`
	// The ARN of the IAM user for Suger service to access the client's AWS services.
	IamUserArn *string `json:"iamUserArn,omitempty"`
	// The secret access key of the IAM user for Suger service to access the client's AWS services.
	SecretAccessKey *string `json:"secretAccessKey,omitempty"`
}

// NewAwsIntegrationCredential instantiates a new AwsIntegrationCredential object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsIntegrationCredential() *AwsIntegrationCredential {
	this := AwsIntegrationCredential{}
	return &this
}

// NewAwsIntegrationCredentialWithDefaults instantiates a new AwsIntegrationCredential object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsIntegrationCredentialWithDefaults() *AwsIntegrationCredential {
	this := AwsIntegrationCredential{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *AwsIntegrationCredential) GetAccessKeyId() string {
	if o == nil || IsNil(o.AccessKeyId) {
		var ret string
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsIntegrationCredential) GetAccessKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeyId) {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *AwsIntegrationCredential) HasAccessKeyId() bool {
	if o != nil && !IsNil(o.AccessKeyId) {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given string and assigns it to the AccessKeyId field.
func (o *AwsIntegrationCredential) SetAccessKeyId(v string) {
	o.AccessKeyId = &v
}

// GetIamUserArn returns the IamUserArn field value if set, zero value otherwise.
func (o *AwsIntegrationCredential) GetIamUserArn() string {
	if o == nil || IsNil(o.IamUserArn) {
		var ret string
		return ret
	}
	return *o.IamUserArn
}

// GetIamUserArnOk returns a tuple with the IamUserArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsIntegrationCredential) GetIamUserArnOk() (*string, bool) {
	if o == nil || IsNil(o.IamUserArn) {
		return nil, false
	}
	return o.IamUserArn, true
}

// HasIamUserArn returns a boolean if a field has been set.
func (o *AwsIntegrationCredential) HasIamUserArn() bool {
	if o != nil && !IsNil(o.IamUserArn) {
		return true
	}

	return false
}

// SetIamUserArn gets a reference to the given string and assigns it to the IamUserArn field.
func (o *AwsIntegrationCredential) SetIamUserArn(v string) {
	o.IamUserArn = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *AwsIntegrationCredential) GetSecretAccessKey() string {
	if o == nil || IsNil(o.SecretAccessKey) {
		var ret string
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsIntegrationCredential) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretAccessKey) {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *AwsIntegrationCredential) HasSecretAccessKey() bool {
	if o != nil && !IsNil(o.SecretAccessKey) {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given string and assigns it to the SecretAccessKey field.
func (o *AwsIntegrationCredential) SetSecretAccessKey(v string) {
	o.SecretAccessKey = &v
}

func (o AwsIntegrationCredential) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsIntegrationCredential) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKeyId) {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if !IsNil(o.IamUserArn) {
		toSerialize["iamUserArn"] = o.IamUserArn
	}
	if !IsNil(o.SecretAccessKey) {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	return toSerialize, nil
}

type NullableAwsIntegrationCredential struct {
	value *AwsIntegrationCredential
	isSet bool
}

func (v NullableAwsIntegrationCredential) Get() *AwsIntegrationCredential {
	return v.value
}

func (v *NullableAwsIntegrationCredential) Set(val *AwsIntegrationCredential) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsIntegrationCredential) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsIntegrationCredential) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsIntegrationCredential(val *AwsIntegrationCredential) *NullableAwsIntegrationCredential {
	return &NullableAwsIntegrationCredential{value: val, isSet: true}
}

func (v NullableAwsIntegrationCredential) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsIntegrationCredential) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
