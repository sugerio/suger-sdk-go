/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrbItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrbItem{}

// OrbItem struct for OrbItem
type OrbItem struct {
	CreatedAt *string `json:"created_at,omitempty"`
	ExternalConnections []OrbExternalConnection `json:"external_connections,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewOrbItem instantiates a new OrbItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrbItem() *OrbItem {
	this := OrbItem{}
	return &this
}

// NewOrbItemWithDefaults instantiates a new OrbItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrbItemWithDefaults() *OrbItem {
	this := OrbItem{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OrbItem) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbItem) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OrbItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OrbItem) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExternalConnections returns the ExternalConnections field value if set, zero value otherwise.
func (o *OrbItem) GetExternalConnections() []OrbExternalConnection {
	if o == nil || IsNil(o.ExternalConnections) {
		var ret []OrbExternalConnection
		return ret
	}
	return o.ExternalConnections
}

// GetExternalConnectionsOk returns a tuple with the ExternalConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbItem) GetExternalConnectionsOk() ([]OrbExternalConnection, bool) {
	if o == nil || IsNil(o.ExternalConnections) {
		return nil, false
	}
	return o.ExternalConnections, true
}

// HasExternalConnections returns a boolean if a field has been set.
func (o *OrbItem) HasExternalConnections() bool {
	if o != nil && !IsNil(o.ExternalConnections) {
		return true
	}

	return false
}

// SetExternalConnections gets a reference to the given []OrbExternalConnection and assigns it to the ExternalConnections field.
func (o *OrbItem) SetExternalConnections(v []OrbExternalConnection) {
	o.ExternalConnections = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrbItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrbItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrbItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrbItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrbItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrbItem) SetName(v string) {
	o.Name = &v
}

func (o OrbItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrbItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ExternalConnections) {
		toSerialize["external_connections"] = o.ExternalConnections
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableOrbItem struct {
	value *OrbItem
	isSet bool
}

func (v NullableOrbItem) Get() *OrbItem {
	return v.value
}

func (v *NullableOrbItem) Set(val *OrbItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOrbItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOrbItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrbItem(val *OrbItem) *NullableOrbItem {
	return &NullableOrbItem{value: val, isSet: true}
}

func (v NullableOrbItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrbItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


