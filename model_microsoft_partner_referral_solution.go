/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralSolution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralSolution{}

// MicrosoftPartnerReferralSolution struct for MicrosoftPartnerReferralSolution
type MicrosoftPartnerReferralSolution struct {
	ClosingDateTime map[string]interface{} `json:"closingDateTime,omitempty"`
	Currency map[string]interface{} `json:"currency,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Price map[string]interface{} `json:"price,omitempty"`
	PublisherName *string `json:"publisherName,omitempty"`
	Quantity map[string]interface{} `json:"quantity,omitempty"`
	SolutionType *string `json:"solutionType,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewMicrosoftPartnerReferralSolution instantiates a new MicrosoftPartnerReferralSolution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralSolution() *MicrosoftPartnerReferralSolution {
	this := MicrosoftPartnerReferralSolution{}
	return &this
}

// NewMicrosoftPartnerReferralSolutionWithDefaults instantiates a new MicrosoftPartnerReferralSolution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralSolutionWithDefaults() *MicrosoftPartnerReferralSolution {
	this := MicrosoftPartnerReferralSolution{}
	return &this
}

// GetClosingDateTime returns the ClosingDateTime field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetClosingDateTime() map[string]interface{} {
	if o == nil || IsNil(o.ClosingDateTime) {
		var ret map[string]interface{}
		return ret
	}
	return o.ClosingDateTime
}

// GetClosingDateTimeOk returns a tuple with the ClosingDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetClosingDateTimeOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ClosingDateTime) {
		return map[string]interface{}{}, false
	}
	return o.ClosingDateTime, true
}

// HasClosingDateTime returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasClosingDateTime() bool {
	if o != nil && !IsNil(o.ClosingDateTime) {
		return true
	}

	return false
}

// SetClosingDateTime gets a reference to the given map[string]interface{} and assigns it to the ClosingDateTime field.
func (o *MicrosoftPartnerReferralSolution) SetClosingDateTime(v map[string]interface{}) {
	o.ClosingDateTime = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetCurrency() map[string]interface{} {
	if o == nil || IsNil(o.Currency) {
		var ret map[string]interface{}
		return ret
	}
	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetCurrencyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Currency) {
		return map[string]interface{}{}, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given map[string]interface{} and assigns it to the Currency field.
func (o *MicrosoftPartnerReferralSolution) SetCurrency(v map[string]interface{}) {
	o.Currency = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MicrosoftPartnerReferralSolution) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MicrosoftPartnerReferralSolution) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetPrice() map[string]interface{} {
	if o == nil || IsNil(o.Price) {
		var ret map[string]interface{}
		return ret
	}
	return o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetPriceOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Price) {
		return map[string]interface{}{}, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given map[string]interface{} and assigns it to the Price field.
func (o *MicrosoftPartnerReferralSolution) SetPrice(v map[string]interface{}) {
	o.Price = v
}

// GetPublisherName returns the PublisherName field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetPublisherName() string {
	if o == nil || IsNil(o.PublisherName) {
		var ret string
		return ret
	}
	return *o.PublisherName
}

// GetPublisherNameOk returns a tuple with the PublisherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetPublisherNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublisherName) {
		return nil, false
	}
	return o.PublisherName, true
}

// HasPublisherName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasPublisherName() bool {
	if o != nil && !IsNil(o.PublisherName) {
		return true
	}

	return false
}

// SetPublisherName gets a reference to the given string and assigns it to the PublisherName field.
func (o *MicrosoftPartnerReferralSolution) SetPublisherName(v string) {
	o.PublisherName = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetQuantity() map[string]interface{} {
	if o == nil || IsNil(o.Quantity) {
		var ret map[string]interface{}
		return ret
	}
	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetQuantityOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Quantity) {
		return map[string]interface{}{}, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given map[string]interface{} and assigns it to the Quantity field.
func (o *MicrosoftPartnerReferralSolution) SetQuantity(v map[string]interface{}) {
	o.Quantity = v
}

// GetSolutionType returns the SolutionType field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetSolutionType() string {
	if o == nil || IsNil(o.SolutionType) {
		var ret string
		return ret
	}
	return *o.SolutionType
}

// GetSolutionTypeOk returns a tuple with the SolutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetSolutionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SolutionType) {
		return nil, false
	}
	return o.SolutionType, true
}

// HasSolutionType returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasSolutionType() bool {
	if o != nil && !IsNil(o.SolutionType) {
		return true
	}

	return false
}

// SetSolutionType gets a reference to the given string and assigns it to the SolutionType field.
func (o *MicrosoftPartnerReferralSolution) SetSolutionType(v string) {
	o.SolutionType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralSolution) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralSolution) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralSolution) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MicrosoftPartnerReferralSolution) SetType(v string) {
	o.Type = &v
}

func (o MicrosoftPartnerReferralSolution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralSolution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClosingDateTime) {
		toSerialize["closingDateTime"] = o.ClosingDateTime
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PublisherName) {
		toSerialize["publisherName"] = o.PublisherName
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.SolutionType) {
		toSerialize["solutionType"] = o.SolutionType
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralSolution struct {
	value *MicrosoftPartnerReferralSolution
	isSet bool
}

func (v NullableMicrosoftPartnerReferralSolution) Get() *MicrosoftPartnerReferralSolution {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralSolution) Set(val *MicrosoftPartnerReferralSolution) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralSolution) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralSolution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralSolution(val *MicrosoftPartnerReferralSolution) *NullableMicrosoftPartnerReferralSolution {
	return &NullableMicrosoftPartnerReferralSolution{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralSolution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralSolution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


