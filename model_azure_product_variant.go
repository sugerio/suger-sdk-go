/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureProductVariant type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureProductVariant{}

// AzureProductVariant struct for AzureProductVariant
type AzureProductVariant struct {
	AzureGovernmentCertifications []AzureGovernmentCertification `json:"azureGovernmentCertifications,omitempty"`
	CloudAvailabilities []string `json:"cloudAvailabilities,omitempty"`
	ConversionPaths *string `json:"conversionPaths,omitempty"`
	ExtendedProperties []AzureTypeValue `json:"extendedProperties,omitempty"`
	ExternalID *string `json:"externalID,omitempty"`
	// Not original fields. They are populated by other API calls
	FeatureAvailabilities []AzureProductFeatureAvailability `json:"featureAvailabilities,omitempty"`
	FriendlyName *string `json:"friendlyName,omitempty"`
	Id *string `json:"id,omitempty"`
	LeadGenID *string `json:"leadGenID,omitempty"`
	ReferenceVariantID *string `json:"referenceVariantID,omitempty"`
	ResourceType *string `json:"resourceType,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewAzureProductVariant instantiates a new AzureProductVariant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureProductVariant() *AzureProductVariant {
	this := AzureProductVariant{}
	return &this
}

// NewAzureProductVariantWithDefaults instantiates a new AzureProductVariant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureProductVariantWithDefaults() *AzureProductVariant {
	this := AzureProductVariant{}
	return &this
}

// GetAzureGovernmentCertifications returns the AzureGovernmentCertifications field value if set, zero value otherwise.
func (o *AzureProductVariant) GetAzureGovernmentCertifications() []AzureGovernmentCertification {
	if o == nil || IsNil(o.AzureGovernmentCertifications) {
		var ret []AzureGovernmentCertification
		return ret
	}
	return o.AzureGovernmentCertifications
}

// GetAzureGovernmentCertificationsOk returns a tuple with the AzureGovernmentCertifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetAzureGovernmentCertificationsOk() ([]AzureGovernmentCertification, bool) {
	if o == nil || IsNil(o.AzureGovernmentCertifications) {
		return nil, false
	}
	return o.AzureGovernmentCertifications, true
}

// HasAzureGovernmentCertifications returns a boolean if a field has been set.
func (o *AzureProductVariant) HasAzureGovernmentCertifications() bool {
	if o != nil && !IsNil(o.AzureGovernmentCertifications) {
		return true
	}

	return false
}

// SetAzureGovernmentCertifications gets a reference to the given []AzureGovernmentCertification and assigns it to the AzureGovernmentCertifications field.
func (o *AzureProductVariant) SetAzureGovernmentCertifications(v []AzureGovernmentCertification) {
	o.AzureGovernmentCertifications = v
}

// GetCloudAvailabilities returns the CloudAvailabilities field value if set, zero value otherwise.
func (o *AzureProductVariant) GetCloudAvailabilities() []string {
	if o == nil || IsNil(o.CloudAvailabilities) {
		var ret []string
		return ret
	}
	return o.CloudAvailabilities
}

// GetCloudAvailabilitiesOk returns a tuple with the CloudAvailabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetCloudAvailabilitiesOk() ([]string, bool) {
	if o == nil || IsNil(o.CloudAvailabilities) {
		return nil, false
	}
	return o.CloudAvailabilities, true
}

// HasCloudAvailabilities returns a boolean if a field has been set.
func (o *AzureProductVariant) HasCloudAvailabilities() bool {
	if o != nil && !IsNil(o.CloudAvailabilities) {
		return true
	}

	return false
}

// SetCloudAvailabilities gets a reference to the given []string and assigns it to the CloudAvailabilities field.
func (o *AzureProductVariant) SetCloudAvailabilities(v []string) {
	o.CloudAvailabilities = v
}

// GetConversionPaths returns the ConversionPaths field value if set, zero value otherwise.
func (o *AzureProductVariant) GetConversionPaths() string {
	if o == nil || IsNil(o.ConversionPaths) {
		var ret string
		return ret
	}
	return *o.ConversionPaths
}

// GetConversionPathsOk returns a tuple with the ConversionPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetConversionPathsOk() (*string, bool) {
	if o == nil || IsNil(o.ConversionPaths) {
		return nil, false
	}
	return o.ConversionPaths, true
}

// HasConversionPaths returns a boolean if a field has been set.
func (o *AzureProductVariant) HasConversionPaths() bool {
	if o != nil && !IsNil(o.ConversionPaths) {
		return true
	}

	return false
}

// SetConversionPaths gets a reference to the given string and assigns it to the ConversionPaths field.
func (o *AzureProductVariant) SetConversionPaths(v string) {
	o.ConversionPaths = &v
}

// GetExtendedProperties returns the ExtendedProperties field value if set, zero value otherwise.
func (o *AzureProductVariant) GetExtendedProperties() []AzureTypeValue {
	if o == nil || IsNil(o.ExtendedProperties) {
		var ret []AzureTypeValue
		return ret
	}
	return o.ExtendedProperties
}

// GetExtendedPropertiesOk returns a tuple with the ExtendedProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetExtendedPropertiesOk() ([]AzureTypeValue, bool) {
	if o == nil || IsNil(o.ExtendedProperties) {
		return nil, false
	}
	return o.ExtendedProperties, true
}

// HasExtendedProperties returns a boolean if a field has been set.
func (o *AzureProductVariant) HasExtendedProperties() bool {
	if o != nil && !IsNil(o.ExtendedProperties) {
		return true
	}

	return false
}

// SetExtendedProperties gets a reference to the given []AzureTypeValue and assigns it to the ExtendedProperties field.
func (o *AzureProductVariant) SetExtendedProperties(v []AzureTypeValue) {
	o.ExtendedProperties = v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *AzureProductVariant) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *AzureProductVariant) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *AzureProductVariant) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetFeatureAvailabilities returns the FeatureAvailabilities field value if set, zero value otherwise.
func (o *AzureProductVariant) GetFeatureAvailabilities() []AzureProductFeatureAvailability {
	if o == nil || IsNil(o.FeatureAvailabilities) {
		var ret []AzureProductFeatureAvailability
		return ret
	}
	return o.FeatureAvailabilities
}

// GetFeatureAvailabilitiesOk returns a tuple with the FeatureAvailabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetFeatureAvailabilitiesOk() ([]AzureProductFeatureAvailability, bool) {
	if o == nil || IsNil(o.FeatureAvailabilities) {
		return nil, false
	}
	return o.FeatureAvailabilities, true
}

// HasFeatureAvailabilities returns a boolean if a field has been set.
func (o *AzureProductVariant) HasFeatureAvailabilities() bool {
	if o != nil && !IsNil(o.FeatureAvailabilities) {
		return true
	}

	return false
}

// SetFeatureAvailabilities gets a reference to the given []AzureProductFeatureAvailability and assigns it to the FeatureAvailabilities field.
func (o *AzureProductVariant) SetFeatureAvailabilities(v []AzureProductFeatureAvailability) {
	o.FeatureAvailabilities = v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *AzureProductVariant) GetFriendlyName() string {
	if o == nil || IsNil(o.FriendlyName) {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetFriendlyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FriendlyName) {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *AzureProductVariant) HasFriendlyName() bool {
	if o != nil && !IsNil(o.FriendlyName) {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *AzureProductVariant) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureProductVariant) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureProductVariant) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureProductVariant) SetId(v string) {
	o.Id = &v
}

// GetLeadGenID returns the LeadGenID field value if set, zero value otherwise.
func (o *AzureProductVariant) GetLeadGenID() string {
	if o == nil || IsNil(o.LeadGenID) {
		var ret string
		return ret
	}
	return *o.LeadGenID
}

// GetLeadGenIDOk returns a tuple with the LeadGenID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetLeadGenIDOk() (*string, bool) {
	if o == nil || IsNil(o.LeadGenID) {
		return nil, false
	}
	return o.LeadGenID, true
}

// HasLeadGenID returns a boolean if a field has been set.
func (o *AzureProductVariant) HasLeadGenID() bool {
	if o != nil && !IsNil(o.LeadGenID) {
		return true
	}

	return false
}

// SetLeadGenID gets a reference to the given string and assigns it to the LeadGenID field.
func (o *AzureProductVariant) SetLeadGenID(v string) {
	o.LeadGenID = &v
}

// GetReferenceVariantID returns the ReferenceVariantID field value if set, zero value otherwise.
func (o *AzureProductVariant) GetReferenceVariantID() string {
	if o == nil || IsNil(o.ReferenceVariantID) {
		var ret string
		return ret
	}
	return *o.ReferenceVariantID
}

// GetReferenceVariantIDOk returns a tuple with the ReferenceVariantID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetReferenceVariantIDOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceVariantID) {
		return nil, false
	}
	return o.ReferenceVariantID, true
}

// HasReferenceVariantID returns a boolean if a field has been set.
func (o *AzureProductVariant) HasReferenceVariantID() bool {
	if o != nil && !IsNil(o.ReferenceVariantID) {
		return true
	}

	return false
}

// SetReferenceVariantID gets a reference to the given string and assigns it to the ReferenceVariantID field.
func (o *AzureProductVariant) SetReferenceVariantID(v string) {
	o.ReferenceVariantID = &v
}

// GetResourceType returns the ResourceType field value if set, zero value otherwise.
func (o *AzureProductVariant) GetResourceType() string {
	if o == nil || IsNil(o.ResourceType) {
		var ret string
		return ret
	}
	return *o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceType) {
		return nil, false
	}
	return o.ResourceType, true
}

// HasResourceType returns a boolean if a field has been set.
func (o *AzureProductVariant) HasResourceType() bool {
	if o != nil && !IsNil(o.ResourceType) {
		return true
	}

	return false
}

// SetResourceType gets a reference to the given string and assigns it to the ResourceType field.
func (o *AzureProductVariant) SetResourceType(v string) {
	o.ResourceType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *AzureProductVariant) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureProductVariant) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *AzureProductVariant) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *AzureProductVariant) SetState(v string) {
	o.State = &v
}

func (o AzureProductVariant) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureProductVariant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AzureGovernmentCertifications) {
		toSerialize["azureGovernmentCertifications"] = o.AzureGovernmentCertifications
	}
	if !IsNil(o.CloudAvailabilities) {
		toSerialize["cloudAvailabilities"] = o.CloudAvailabilities
	}
	if !IsNil(o.ConversionPaths) {
		toSerialize["conversionPaths"] = o.ConversionPaths
	}
	if !IsNil(o.ExtendedProperties) {
		toSerialize["extendedProperties"] = o.ExtendedProperties
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.FeatureAvailabilities) {
		toSerialize["featureAvailabilities"] = o.FeatureAvailabilities
	}
	if !IsNil(o.FriendlyName) {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LeadGenID) {
		toSerialize["leadGenID"] = o.LeadGenID
	}
	if !IsNil(o.ReferenceVariantID) {
		toSerialize["referenceVariantID"] = o.ReferenceVariantID
	}
	if !IsNil(o.ResourceType) {
		toSerialize["resourceType"] = o.ResourceType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableAzureProductVariant struct {
	value *AzureProductVariant
	isSet bool
}

func (v NullableAzureProductVariant) Get() *AzureProductVariant {
	return v.value
}

func (v *NullableAzureProductVariant) Set(val *AzureProductVariant) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureProductVariant) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureProductVariant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureProductVariant(val *AzureProductVariant) *NullableAzureProductVariant {
	return &NullableAzureProductVariant{value: val, isSet: true}
}

func (v NullableAzureProductVariant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureProductVariant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


