/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AwsProductDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsProductDescription{}

// AwsProductDescription struct for AwsProductDescription
type AwsProductDescription struct {
	AssociatedProducts map[string]interface{}           `json:"AssociatedProducts,omitempty"`
	Categories         []string                         `json:"Categories,omitempty"`
	EuW8Submitted      *bool                            `json:"EuW8Submitted,omitempty"`
	Highlights         []string                         `json:"Highlights,omitempty"`
	LongDescription    *string                          `json:"LongDescription,omitempty"`
	Manufacturer       *string                          `json:"Manufacturer,omitempty"`
	ProductCode        *string                          `json:"ProductCode,omitempty"`
	ProductTitle       *string                          `json:"ProductTitle,omitempty"`
	Registered         *bool                            `json:"Registered,omitempty"`
	SearchKeywords     []string                         `json:"SearchKeywords,omitempty"`
	ShortDescription   *string                          `json:"ShortDescription,omitempty"`
	Sku                *string                          `json:"Sku,omitempty"`
	UsW9Submitted      *bool                            `json:"UsW9Submitted,omitempty"`
	Visibility         *AwsMarketplaceProductVisibility `json:"Visibility,omitempty"`
}

// NewAwsProductDescription instantiates a new AwsProductDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsProductDescription() *AwsProductDescription {
	this := AwsProductDescription{}
	return &this
}

// NewAwsProductDescriptionWithDefaults instantiates a new AwsProductDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsProductDescriptionWithDefaults() *AwsProductDescription {
	this := AwsProductDescription{}
	return &this
}

// GetAssociatedProducts returns the AssociatedProducts field value if set, zero value otherwise.
func (o *AwsProductDescription) GetAssociatedProducts() map[string]interface{} {
	if o == nil || IsNil(o.AssociatedProducts) {
		var ret map[string]interface{}
		return ret
	}
	return o.AssociatedProducts
}

// GetAssociatedProductsOk returns a tuple with the AssociatedProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetAssociatedProductsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AssociatedProducts) {
		return map[string]interface{}{}, false
	}
	return o.AssociatedProducts, true
}

// HasAssociatedProducts returns a boolean if a field has been set.
func (o *AwsProductDescription) HasAssociatedProducts() bool {
	if o != nil && !IsNil(o.AssociatedProducts) {
		return true
	}

	return false
}

// SetAssociatedProducts gets a reference to the given map[string]interface{} and assigns it to the AssociatedProducts field.
func (o *AwsProductDescription) SetAssociatedProducts(v map[string]interface{}) {
	o.AssociatedProducts = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *AwsProductDescription) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *AwsProductDescription) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *AwsProductDescription) SetCategories(v []string) {
	o.Categories = v
}

// GetEuW8Submitted returns the EuW8Submitted field value if set, zero value otherwise.
func (o *AwsProductDescription) GetEuW8Submitted() bool {
	if o == nil || IsNil(o.EuW8Submitted) {
		var ret bool
		return ret
	}
	return *o.EuW8Submitted
}

// GetEuW8SubmittedOk returns a tuple with the EuW8Submitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetEuW8SubmittedOk() (*bool, bool) {
	if o == nil || IsNil(o.EuW8Submitted) {
		return nil, false
	}
	return o.EuW8Submitted, true
}

// HasEuW8Submitted returns a boolean if a field has been set.
func (o *AwsProductDescription) HasEuW8Submitted() bool {
	if o != nil && !IsNil(o.EuW8Submitted) {
		return true
	}

	return false
}

// SetEuW8Submitted gets a reference to the given bool and assigns it to the EuW8Submitted field.
func (o *AwsProductDescription) SetEuW8Submitted(v bool) {
	o.EuW8Submitted = &v
}

// GetHighlights returns the Highlights field value if set, zero value otherwise.
func (o *AwsProductDescription) GetHighlights() []string {
	if o == nil || IsNil(o.Highlights) {
		var ret []string
		return ret
	}
	return o.Highlights
}

// GetHighlightsOk returns a tuple with the Highlights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetHighlightsOk() ([]string, bool) {
	if o == nil || IsNil(o.Highlights) {
		return nil, false
	}
	return o.Highlights, true
}

// HasHighlights returns a boolean if a field has been set.
func (o *AwsProductDescription) HasHighlights() bool {
	if o != nil && !IsNil(o.Highlights) {
		return true
	}

	return false
}

// SetHighlights gets a reference to the given []string and assigns it to the Highlights field.
func (o *AwsProductDescription) SetHighlights(v []string) {
	o.Highlights = v
}

// GetLongDescription returns the LongDescription field value if set, zero value otherwise.
func (o *AwsProductDescription) GetLongDescription() string {
	if o == nil || IsNil(o.LongDescription) {
		var ret string
		return ret
	}
	return *o.LongDescription
}

// GetLongDescriptionOk returns a tuple with the LongDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetLongDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.LongDescription) {
		return nil, false
	}
	return o.LongDescription, true
}

// HasLongDescription returns a boolean if a field has been set.
func (o *AwsProductDescription) HasLongDescription() bool {
	if o != nil && !IsNil(o.LongDescription) {
		return true
	}

	return false
}

// SetLongDescription gets a reference to the given string and assigns it to the LongDescription field.
func (o *AwsProductDescription) SetLongDescription(v string) {
	o.LongDescription = &v
}

// GetManufacturer returns the Manufacturer field value if set, zero value otherwise.
func (o *AwsProductDescription) GetManufacturer() string {
	if o == nil || IsNil(o.Manufacturer) {
		var ret string
		return ret
	}
	return *o.Manufacturer
}

// GetManufacturerOk returns a tuple with the Manufacturer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetManufacturerOk() (*string, bool) {
	if o == nil || IsNil(o.Manufacturer) {
		return nil, false
	}
	return o.Manufacturer, true
}

// HasManufacturer returns a boolean if a field has been set.
func (o *AwsProductDescription) HasManufacturer() bool {
	if o != nil && !IsNil(o.Manufacturer) {
		return true
	}

	return false
}

// SetManufacturer gets a reference to the given string and assigns it to the Manufacturer field.
func (o *AwsProductDescription) SetManufacturer(v string) {
	o.Manufacturer = &v
}

// GetProductCode returns the ProductCode field value if set, zero value otherwise.
func (o *AwsProductDescription) GetProductCode() string {
	if o == nil || IsNil(o.ProductCode) {
		var ret string
		return ret
	}
	return *o.ProductCode
}

// GetProductCodeOk returns a tuple with the ProductCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetProductCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ProductCode) {
		return nil, false
	}
	return o.ProductCode, true
}

// HasProductCode returns a boolean if a field has been set.
func (o *AwsProductDescription) HasProductCode() bool {
	if o != nil && !IsNil(o.ProductCode) {
		return true
	}

	return false
}

// SetProductCode gets a reference to the given string and assigns it to the ProductCode field.
func (o *AwsProductDescription) SetProductCode(v string) {
	o.ProductCode = &v
}

// GetProductTitle returns the ProductTitle field value if set, zero value otherwise.
func (o *AwsProductDescription) GetProductTitle() string {
	if o == nil || IsNil(o.ProductTitle) {
		var ret string
		return ret
	}
	return *o.ProductTitle
}

// GetProductTitleOk returns a tuple with the ProductTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetProductTitleOk() (*string, bool) {
	if o == nil || IsNil(o.ProductTitle) {
		return nil, false
	}
	return o.ProductTitle, true
}

// HasProductTitle returns a boolean if a field has been set.
func (o *AwsProductDescription) HasProductTitle() bool {
	if o != nil && !IsNil(o.ProductTitle) {
		return true
	}

	return false
}

// SetProductTitle gets a reference to the given string and assigns it to the ProductTitle field.
func (o *AwsProductDescription) SetProductTitle(v string) {
	o.ProductTitle = &v
}

// GetRegistered returns the Registered field value if set, zero value otherwise.
func (o *AwsProductDescription) GetRegistered() bool {
	if o == nil || IsNil(o.Registered) {
		var ret bool
		return ret
	}
	return *o.Registered
}

// GetRegisteredOk returns a tuple with the Registered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetRegisteredOk() (*bool, bool) {
	if o == nil || IsNil(o.Registered) {
		return nil, false
	}
	return o.Registered, true
}

// HasRegistered returns a boolean if a field has been set.
func (o *AwsProductDescription) HasRegistered() bool {
	if o != nil && !IsNil(o.Registered) {
		return true
	}

	return false
}

// SetRegistered gets a reference to the given bool and assigns it to the Registered field.
func (o *AwsProductDescription) SetRegistered(v bool) {
	o.Registered = &v
}

// GetSearchKeywords returns the SearchKeywords field value if set, zero value otherwise.
func (o *AwsProductDescription) GetSearchKeywords() []string {
	if o == nil || IsNil(o.SearchKeywords) {
		var ret []string
		return ret
	}
	return o.SearchKeywords
}

// GetSearchKeywordsOk returns a tuple with the SearchKeywords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetSearchKeywordsOk() ([]string, bool) {
	if o == nil || IsNil(o.SearchKeywords) {
		return nil, false
	}
	return o.SearchKeywords, true
}

// HasSearchKeywords returns a boolean if a field has been set.
func (o *AwsProductDescription) HasSearchKeywords() bool {
	if o != nil && !IsNil(o.SearchKeywords) {
		return true
	}

	return false
}

// SetSearchKeywords gets a reference to the given []string and assigns it to the SearchKeywords field.
func (o *AwsProductDescription) SetSearchKeywords(v []string) {
	o.SearchKeywords = v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *AwsProductDescription) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *AwsProductDescription) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *AwsProductDescription) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetSku returns the Sku field value if set, zero value otherwise.
func (o *AwsProductDescription) GetSku() string {
	if o == nil || IsNil(o.Sku) {
		var ret string
		return ret
	}
	return *o.Sku
}

// GetSkuOk returns a tuple with the Sku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetSkuOk() (*string, bool) {
	if o == nil || IsNil(o.Sku) {
		return nil, false
	}
	return o.Sku, true
}

// HasSku returns a boolean if a field has been set.
func (o *AwsProductDescription) HasSku() bool {
	if o != nil && !IsNil(o.Sku) {
		return true
	}

	return false
}

// SetSku gets a reference to the given string and assigns it to the Sku field.
func (o *AwsProductDescription) SetSku(v string) {
	o.Sku = &v
}

// GetUsW9Submitted returns the UsW9Submitted field value if set, zero value otherwise.
func (o *AwsProductDescription) GetUsW9Submitted() bool {
	if o == nil || IsNil(o.UsW9Submitted) {
		var ret bool
		return ret
	}
	return *o.UsW9Submitted
}

// GetUsW9SubmittedOk returns a tuple with the UsW9Submitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetUsW9SubmittedOk() (*bool, bool) {
	if o == nil || IsNil(o.UsW9Submitted) {
		return nil, false
	}
	return o.UsW9Submitted, true
}

// HasUsW9Submitted returns a boolean if a field has been set.
func (o *AwsProductDescription) HasUsW9Submitted() bool {
	if o != nil && !IsNil(o.UsW9Submitted) {
		return true
	}

	return false
}

// SetUsW9Submitted gets a reference to the given bool and assigns it to the UsW9Submitted field.
func (o *AwsProductDescription) SetUsW9Submitted(v bool) {
	o.UsW9Submitted = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *AwsProductDescription) GetVisibility() AwsMarketplaceProductVisibility {
	if o == nil || IsNil(o.Visibility) {
		var ret AwsMarketplaceProductVisibility
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductDescription) GetVisibilityOk() (*AwsMarketplaceProductVisibility, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *AwsProductDescription) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given AwsMarketplaceProductVisibility and assigns it to the Visibility field.
func (o *AwsProductDescription) SetVisibility(v AwsMarketplaceProductVisibility) {
	o.Visibility = &v
}

func (o AwsProductDescription) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsProductDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociatedProducts) {
		toSerialize["AssociatedProducts"] = o.AssociatedProducts
	}
	if !IsNil(o.Categories) {
		toSerialize["Categories"] = o.Categories
	}
	if !IsNil(o.EuW8Submitted) {
		toSerialize["EuW8Submitted"] = o.EuW8Submitted
	}
	if !IsNil(o.Highlights) {
		toSerialize["Highlights"] = o.Highlights
	}
	if !IsNil(o.LongDescription) {
		toSerialize["LongDescription"] = o.LongDescription
	}
	if !IsNil(o.Manufacturer) {
		toSerialize["Manufacturer"] = o.Manufacturer
	}
	if !IsNil(o.ProductCode) {
		toSerialize["ProductCode"] = o.ProductCode
	}
	if !IsNil(o.ProductTitle) {
		toSerialize["ProductTitle"] = o.ProductTitle
	}
	if !IsNil(o.Registered) {
		toSerialize["Registered"] = o.Registered
	}
	if !IsNil(o.SearchKeywords) {
		toSerialize["SearchKeywords"] = o.SearchKeywords
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["ShortDescription"] = o.ShortDescription
	}
	if !IsNil(o.Sku) {
		toSerialize["Sku"] = o.Sku
	}
	if !IsNil(o.UsW9Submitted) {
		toSerialize["UsW9Submitted"] = o.UsW9Submitted
	}
	if !IsNil(o.Visibility) {
		toSerialize["Visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableAwsProductDescription struct {
	value *AwsProductDescription
	isSet bool
}

func (v NullableAwsProductDescription) Get() *AwsProductDescription {
	return v.value
}

func (v *NullableAwsProductDescription) Set(val *AwsProductDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsProductDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsProductDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsProductDescription(val *AwsProductDescription) *NullableAwsProductDescription {
	return &NullableAwsProductDescription{value: val, isSet: true}
}

func (v NullableAwsProductDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsProductDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
