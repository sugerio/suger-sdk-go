/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the OfferInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferInfo{}

// OfferInfo struct for OfferInfo
type OfferInfo struct {
	// The URL of the additional EULA files. Only applicable when EulaType = CUSTOM. The additional EULA files will be attached to the EULA file in the EulaUrl, and form a single EULA file.
	AdditionalEulaUrls []string `json:"additionalEulaUrls,omitempty"`
	// The URL of the additional reseller EULA files. Only applicable when ResellerEulaType = CUSTOM.
	AdditionalResellerEulaUrls []string `json:"additionalResellerEulaUrls,omitempty"`
	// Attach the standard EULA file to the CUSTOM EULA file. Only applicable when EulaType = CUSTOM
	AttachEulaType *EulaType `json:"attachEulaType,omitempty"`
	// Is this offer Auto Renew enabled.
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// Aws private subscription offer Usage duration. ISO8601 format. P300D means the contract Usage start date At acceptance, and with duration 300 days.
	AwsAgreementDuration *string `json:"awsAgreementDuration,omitempty"`
	// The AWS channel partner (reseller), only applicable for AWS Marketplace CPPO_OUT or CPPO offers.
	AwsChannelPartner *AwsChannelPartner `json:"awsChannelPartner,omitempty"`
	// AWS EventBridge Event, only applicable for AWS Marketplace CPPO offers.
	AwsCppoEventDetail *AwsMarketplaceEventBridgeEventDetail `json:"awsCppoEventDetail,omitempty"`
	// AWS CPPO Opportunity, only applicable for AWS Marketplace CPPO_OUT or CPPO_IN offers.
	AwsCppoOpportunity *AwsMarketplaceCppoOpportunity `json:"awsCppoOpportunity,omitempty"`
	// AWS private reseller offer using markup percentage. 10.0 represent 10% partner margin.
	AwsMarkupPercentage *float32 `json:"awsMarkupPercentage,omitempty"`
	// AWS ResaleAuthorizationId(CPPO_IN offer id) for CPPO offers of the reseller.
	AwsResaleAuthorizationId *string `json:"awsResaleAuthorizationId,omitempty"`
	// The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.
	AzureOriginalPlan *AzureMarketplacePriceAndAvailabilityPrivateOfferPlan `json:"azureOriginalPlan,omitempty"`
	// The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.
	AzurePrivateOffer *AzureMarketplacePrivateOffer `json:"azurePrivateOffer,omitempty"`
	// For Azure marketplace only.
	AzureProductVariant *AzureProductVariant `json:"azureProductVariant,omitempty"`
	// Usage based metering dimensions based on Billable Metrics, managed by Suger only.
	BillableDimensions []BillableDimension `json:"billableDimensions,omitempty"`
	// Billing Cycle for the offer.
	BillingCycle *BillingCycle `json:"billingCycle,omitempty"`
	// The buyers' AWS Account IDs of this offer.
	BuyerAwsAccountIds []string `json:"buyerAwsAccountIds,omitempty"`
	// The buyers' Azure tenants of this offer.
	BuyerAzureTenants []AzureAudience `json:"buyerAzureTenants,omitempty"`
	// The amount that the buyer has committed to pay, before discount if applicable. It can be monthly commitment or total commitment. For frontend display or analysis purposes, not used for billing.
	CommitAmount *float32 `json:"commitAmount,omitempty"`
	// Billing interval in months for commitDimensions
	CommitBillingIntervalInMonths *int32 `json:"commitBillingIntervalInMonths,omitempty"`
	// Recurring flat fee for the offer, managed by cloud marketplaces or Suger.
	Commits []CommitDimension `json:"commits,omitempty"`
	// The currency code of the offer. ISO 4217 format.
	Currency *string `json:"currency,omitempty"`
	// Usage based metering dimensions defined on cloud marketplaces, managed by Cloud marketplaces only.
	Dimensions []MeteringDimension `json:"dimensions,omitempty"`
	// The discount percentage off the original price. For example, 20 means 20% off. 0 means no discount. It can be discount off the commitment amount or discount off the usage price.
	DiscountPercentage *float32  `json:"discountPercentage,omitempty"`
	EulaType           *EulaType `json:"eulaType,omitempty"`
	EulaUrl            *string   `json:"eulaUrl,omitempty"`
	// Only required when creating GCP Marketplace private offer.
	GcpCustomerInfo *GcpMarketplacePrivateOfferCustomerInfo `json:"gcpCustomerInfo,omitempty"`
	// The duration of the offer in months. Only required when creating GCP Marketplace private offer.
	GcpDuration *int32 `json:"gcpDuration,omitempty"`
	// Only applicable for GCP Marketplace Offers (the default or private offer)
	GcpMetrics []GcpMarketplaceProductMeteringMetric `json:"gcpMetrics,omitempty"`
	// Only required when creating GCP Marketplace private offer, to specify the payment schedule for the private offer. TODO: It will be deprecated in the future and replaced by PaymentSchedule.
	GcpPaymentSchedule *PaymentScheduleType `json:"gcpPaymentSchedule,omitempty"`
	// Only applicable for GCP Marketplace
	GcpPlans []GcpMarketplaceProductPurchaseOptionSpec `json:"gcpPlans,omitempty"`
	// The private offer for GCP Marketplace. Only applicable for GCP Marketplace private offers.
	GcpPrivateOffer *GcpMarketplacePrivateOffer `json:"gcpPrivateOffer,omitempty"`
	// Only required when creating GCP Marketplace private offer.
	GcpProviderInfo *GcpMarketplacePrivateOfferProviderInfo `json:"gcpProviderInfo,omitempty"`
	// Optional when creating GCP Marketplace private offer. The internal note for the seller/ISV. It is only visible to the seller/ISV.
	GcpProviderInternalNote *string `json:"gcpProviderInternalNote,omitempty"`
	// Optional when creating GCP Marketplace private offer. By default, it is the same as offer name. The public note for the buyer. It is visible to the buyer.
	GcpProviderPublicNote       *string                                 `json:"gcpProviderPublicNote,omitempty"`
	GcpResellerPrivateOfferPlan *GcpMarketplaceResellerPrivateOfferPlan `json:"gcpResellerPrivateOfferPlan,omitempty"`
	// Only applicable for GCP Marketplace with Usage plan. Not appliable for Subscription plan.
	GcpUsagePlanPriceModel *GcpMarketplaceUsagePlanPriceModel `json:"gcpUsagePlanPriceModel,omitempty"`
	// The grace period in days for the offer. This is the number of days during which invoices remain in draft status, for reviewing. This filed can be overridden at the entitlement level.
	GracePeriodInDays *int32 `json:"gracePeriodInDays,omitempty"`
	// The net terms in days for the offer. This is the number of days the buyer has to pay the invoice. This filed can be overridden at the entitlement level.
	NetTermsInDays *int32 `json:"netTermsInDays,omitempty"`
	// For flexible payment schedule, managed by cloud marketplaces or Suger.
	PaymentInstallments []PaymentInstallment `json:"paymentInstallments,omitempty"`
	// The payment schedule for the offer. PREPAY means the buyer pays before the service is provided. POSTPAY means the buyer pays after the service is provided.
	PaymentSchedule *PaymentScheduleType `json:"paymentSchedule,omitempty"`
	// The URL of the private offer sent to buyers to accept. Only applicable for private offer.
	PrivateOfferUrl *string `json:"privateOfferUrl,omitempty"`
	// Prorated billing for the offer. If true, the billing is prorated based on the start date and end date. If false, the billing is not prorated. This filed can be overridden at the entitlement level.
	ProratedBilling          *bool   `json:"proratedBilling,omitempty"`
	RefundCancellationPolicy *string `json:"refundCancellationPolicy,omitempty"`
	// Attach the standard EULA file to the CUSTOM EULA file. Only applicable when EulaType = CUSTOM
	ResellerAttachEulaType *EulaType `json:"resellerAttachEulaType,omitempty"`
	// The type of the reseller EULA. Only applicable for CPPO offers.
	ResellerEulaType *EulaType `json:"resellerEulaType,omitempty"`
	ResellerEulaUrl  *string   `json:"resellerEulaUrl,omitempty"`
	SellerNotes      *string   `json:"sellerNotes,omitempty"`
	// Optional when creating AWS or GCP Marketplace private offer on the contract product. The future start time of the offer if it is not started on the acceptance.
	StartTime *time.Time `json:"startTime,omitempty"`
	// Tax ids for the offer, used to calculate the tax amount for the offer. This field can be overridden at the entitlement level.
	TaxIds []string `json:"taxIds,omitempty"`
	// The offer for Direct. Only applicable for Direct offers. It is used in Stripe, Adyen, and other direct payment providers. The trial configuration for the offer.
	TrialConfig *TrialConfig `json:"trialConfig,omitempty"`
	// Billing interval in months for billableDimensions
	UsageBillingIntervalInMonths *int32 `json:"usageBillingIntervalInMonths,omitempty"`
	// The default visibility of offer is PRIVATE.
	Visibility *string `json:"visibility,omitempty"`
}

// NewOfferInfo instantiates a new OfferInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferInfo() *OfferInfo {
	this := OfferInfo{}
	return &this
}

// NewOfferInfoWithDefaults instantiates a new OfferInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferInfoWithDefaults() *OfferInfo {
	this := OfferInfo{}
	return &this
}

// GetAdditionalEulaUrls returns the AdditionalEulaUrls field value if set, zero value otherwise.
func (o *OfferInfo) GetAdditionalEulaUrls() []string {
	if o == nil || IsNil(o.AdditionalEulaUrls) {
		var ret []string
		return ret
	}
	return o.AdditionalEulaUrls
}

// GetAdditionalEulaUrlsOk returns a tuple with the AdditionalEulaUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAdditionalEulaUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalEulaUrls) {
		return nil, false
	}
	return o.AdditionalEulaUrls, true
}

// HasAdditionalEulaUrls returns a boolean if a field has been set.
func (o *OfferInfo) HasAdditionalEulaUrls() bool {
	if o != nil && !IsNil(o.AdditionalEulaUrls) {
		return true
	}

	return false
}

// SetAdditionalEulaUrls gets a reference to the given []string and assigns it to the AdditionalEulaUrls field.
func (o *OfferInfo) SetAdditionalEulaUrls(v []string) {
	o.AdditionalEulaUrls = v
}

// GetAdditionalResellerEulaUrls returns the AdditionalResellerEulaUrls field value if set, zero value otherwise.
func (o *OfferInfo) GetAdditionalResellerEulaUrls() []string {
	if o == nil || IsNil(o.AdditionalResellerEulaUrls) {
		var ret []string
		return ret
	}
	return o.AdditionalResellerEulaUrls
}

// GetAdditionalResellerEulaUrlsOk returns a tuple with the AdditionalResellerEulaUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAdditionalResellerEulaUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalResellerEulaUrls) {
		return nil, false
	}
	return o.AdditionalResellerEulaUrls, true
}

// HasAdditionalResellerEulaUrls returns a boolean if a field has been set.
func (o *OfferInfo) HasAdditionalResellerEulaUrls() bool {
	if o != nil && !IsNil(o.AdditionalResellerEulaUrls) {
		return true
	}

	return false
}

// SetAdditionalResellerEulaUrls gets a reference to the given []string and assigns it to the AdditionalResellerEulaUrls field.
func (o *OfferInfo) SetAdditionalResellerEulaUrls(v []string) {
	o.AdditionalResellerEulaUrls = v
}

// GetAttachEulaType returns the AttachEulaType field value if set, zero value otherwise.
func (o *OfferInfo) GetAttachEulaType() EulaType {
	if o == nil || IsNil(o.AttachEulaType) {
		var ret EulaType
		return ret
	}
	return *o.AttachEulaType
}

// GetAttachEulaTypeOk returns a tuple with the AttachEulaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAttachEulaTypeOk() (*EulaType, bool) {
	if o == nil || IsNil(o.AttachEulaType) {
		return nil, false
	}
	return o.AttachEulaType, true
}

// HasAttachEulaType returns a boolean if a field has been set.
func (o *OfferInfo) HasAttachEulaType() bool {
	if o != nil && !IsNil(o.AttachEulaType) {
		return true
	}

	return false
}

// SetAttachEulaType gets a reference to the given EulaType and assigns it to the AttachEulaType field.
func (o *OfferInfo) SetAttachEulaType(v EulaType) {
	o.AttachEulaType = &v
}

// GetAutoRenew returns the AutoRenew field value if set, zero value otherwise.
func (o *OfferInfo) GetAutoRenew() bool {
	if o == nil || IsNil(o.AutoRenew) {
		var ret bool
		return ret
	}
	return *o.AutoRenew
}

// GetAutoRenewOk returns a tuple with the AutoRenew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAutoRenewOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRenew) {
		return nil, false
	}
	return o.AutoRenew, true
}

// HasAutoRenew returns a boolean if a field has been set.
func (o *OfferInfo) HasAutoRenew() bool {
	if o != nil && !IsNil(o.AutoRenew) {
		return true
	}

	return false
}

// SetAutoRenew gets a reference to the given bool and assigns it to the AutoRenew field.
func (o *OfferInfo) SetAutoRenew(v bool) {
	o.AutoRenew = &v
}

// GetAwsAgreementDuration returns the AwsAgreementDuration field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsAgreementDuration() string {
	if o == nil || IsNil(o.AwsAgreementDuration) {
		var ret string
		return ret
	}
	return *o.AwsAgreementDuration
}

// GetAwsAgreementDurationOk returns a tuple with the AwsAgreementDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsAgreementDurationOk() (*string, bool) {
	if o == nil || IsNil(o.AwsAgreementDuration) {
		return nil, false
	}
	return o.AwsAgreementDuration, true
}

// HasAwsAgreementDuration returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsAgreementDuration() bool {
	if o != nil && !IsNil(o.AwsAgreementDuration) {
		return true
	}

	return false
}

// SetAwsAgreementDuration gets a reference to the given string and assigns it to the AwsAgreementDuration field.
func (o *OfferInfo) SetAwsAgreementDuration(v string) {
	o.AwsAgreementDuration = &v
}

// GetAwsChannelPartner returns the AwsChannelPartner field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsChannelPartner() AwsChannelPartner {
	if o == nil || IsNil(o.AwsChannelPartner) {
		var ret AwsChannelPartner
		return ret
	}
	return *o.AwsChannelPartner
}

// GetAwsChannelPartnerOk returns a tuple with the AwsChannelPartner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsChannelPartnerOk() (*AwsChannelPartner, bool) {
	if o == nil || IsNil(o.AwsChannelPartner) {
		return nil, false
	}
	return o.AwsChannelPartner, true
}

// HasAwsChannelPartner returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsChannelPartner() bool {
	if o != nil && !IsNil(o.AwsChannelPartner) {
		return true
	}

	return false
}

// SetAwsChannelPartner gets a reference to the given AwsChannelPartner and assigns it to the AwsChannelPartner field.
func (o *OfferInfo) SetAwsChannelPartner(v AwsChannelPartner) {
	o.AwsChannelPartner = &v
}

// GetAwsCppoEventDetail returns the AwsCppoEventDetail field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsCppoEventDetail() AwsMarketplaceEventBridgeEventDetail {
	if o == nil || IsNil(o.AwsCppoEventDetail) {
		var ret AwsMarketplaceEventBridgeEventDetail
		return ret
	}
	return *o.AwsCppoEventDetail
}

// GetAwsCppoEventDetailOk returns a tuple with the AwsCppoEventDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsCppoEventDetailOk() (*AwsMarketplaceEventBridgeEventDetail, bool) {
	if o == nil || IsNil(o.AwsCppoEventDetail) {
		return nil, false
	}
	return o.AwsCppoEventDetail, true
}

// HasAwsCppoEventDetail returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsCppoEventDetail() bool {
	if o != nil && !IsNil(o.AwsCppoEventDetail) {
		return true
	}

	return false
}

// SetAwsCppoEventDetail gets a reference to the given AwsMarketplaceEventBridgeEventDetail and assigns it to the AwsCppoEventDetail field.
func (o *OfferInfo) SetAwsCppoEventDetail(v AwsMarketplaceEventBridgeEventDetail) {
	o.AwsCppoEventDetail = &v
}

// GetAwsCppoOpportunity returns the AwsCppoOpportunity field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsCppoOpportunity() AwsMarketplaceCppoOpportunity {
	if o == nil || IsNil(o.AwsCppoOpportunity) {
		var ret AwsMarketplaceCppoOpportunity
		return ret
	}
	return *o.AwsCppoOpportunity
}

// GetAwsCppoOpportunityOk returns a tuple with the AwsCppoOpportunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsCppoOpportunityOk() (*AwsMarketplaceCppoOpportunity, bool) {
	if o == nil || IsNil(o.AwsCppoOpportunity) {
		return nil, false
	}
	return o.AwsCppoOpportunity, true
}

// HasAwsCppoOpportunity returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsCppoOpportunity() bool {
	if o != nil && !IsNil(o.AwsCppoOpportunity) {
		return true
	}

	return false
}

// SetAwsCppoOpportunity gets a reference to the given AwsMarketplaceCppoOpportunity and assigns it to the AwsCppoOpportunity field.
func (o *OfferInfo) SetAwsCppoOpportunity(v AwsMarketplaceCppoOpportunity) {
	o.AwsCppoOpportunity = &v
}

// GetAwsMarkupPercentage returns the AwsMarkupPercentage field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsMarkupPercentage() float32 {
	if o == nil || IsNil(o.AwsMarkupPercentage) {
		var ret float32
		return ret
	}
	return *o.AwsMarkupPercentage
}

// GetAwsMarkupPercentageOk returns a tuple with the AwsMarkupPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsMarkupPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.AwsMarkupPercentage) {
		return nil, false
	}
	return o.AwsMarkupPercentage, true
}

// HasAwsMarkupPercentage returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsMarkupPercentage() bool {
	if o != nil && !IsNil(o.AwsMarkupPercentage) {
		return true
	}

	return false
}

// SetAwsMarkupPercentage gets a reference to the given float32 and assigns it to the AwsMarkupPercentage field.
func (o *OfferInfo) SetAwsMarkupPercentage(v float32) {
	o.AwsMarkupPercentage = &v
}

// GetAwsResaleAuthorizationId returns the AwsResaleAuthorizationId field value if set, zero value otherwise.
func (o *OfferInfo) GetAwsResaleAuthorizationId() string {
	if o == nil || IsNil(o.AwsResaleAuthorizationId) {
		var ret string
		return ret
	}
	return *o.AwsResaleAuthorizationId
}

// GetAwsResaleAuthorizationIdOk returns a tuple with the AwsResaleAuthorizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAwsResaleAuthorizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.AwsResaleAuthorizationId) {
		return nil, false
	}
	return o.AwsResaleAuthorizationId, true
}

// HasAwsResaleAuthorizationId returns a boolean if a field has been set.
func (o *OfferInfo) HasAwsResaleAuthorizationId() bool {
	if o != nil && !IsNil(o.AwsResaleAuthorizationId) {
		return true
	}

	return false
}

// SetAwsResaleAuthorizationId gets a reference to the given string and assigns it to the AwsResaleAuthorizationId field.
func (o *OfferInfo) SetAwsResaleAuthorizationId(v string) {
	o.AwsResaleAuthorizationId = &v
}

// GetAzureOriginalPlan returns the AzureOriginalPlan field value if set, zero value otherwise.
func (o *OfferInfo) GetAzureOriginalPlan() AzureMarketplacePriceAndAvailabilityPrivateOfferPlan {
	if o == nil || IsNil(o.AzureOriginalPlan) {
		var ret AzureMarketplacePriceAndAvailabilityPrivateOfferPlan
		return ret
	}
	return *o.AzureOriginalPlan
}

// GetAzureOriginalPlanOk returns a tuple with the AzureOriginalPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAzureOriginalPlanOk() (*AzureMarketplacePriceAndAvailabilityPrivateOfferPlan, bool) {
	if o == nil || IsNil(o.AzureOriginalPlan) {
		return nil, false
	}
	return o.AzureOriginalPlan, true
}

// HasAzureOriginalPlan returns a boolean if a field has been set.
func (o *OfferInfo) HasAzureOriginalPlan() bool {
	if o != nil && !IsNil(o.AzureOriginalPlan) {
		return true
	}

	return false
}

// SetAzureOriginalPlan gets a reference to the given AzureMarketplacePriceAndAvailabilityPrivateOfferPlan and assigns it to the AzureOriginalPlan field.
func (o *OfferInfo) SetAzureOriginalPlan(v AzureMarketplacePriceAndAvailabilityPrivateOfferPlan) {
	o.AzureOriginalPlan = &v
}

// GetAzurePrivateOffer returns the AzurePrivateOffer field value if set, zero value otherwise.
func (o *OfferInfo) GetAzurePrivateOffer() AzureMarketplacePrivateOffer {
	if o == nil || IsNil(o.AzurePrivateOffer) {
		var ret AzureMarketplacePrivateOffer
		return ret
	}
	return *o.AzurePrivateOffer
}

// GetAzurePrivateOfferOk returns a tuple with the AzurePrivateOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAzurePrivateOfferOk() (*AzureMarketplacePrivateOffer, bool) {
	if o == nil || IsNil(o.AzurePrivateOffer) {
		return nil, false
	}
	return o.AzurePrivateOffer, true
}

// HasAzurePrivateOffer returns a boolean if a field has been set.
func (o *OfferInfo) HasAzurePrivateOffer() bool {
	if o != nil && !IsNil(o.AzurePrivateOffer) {
		return true
	}

	return false
}

// SetAzurePrivateOffer gets a reference to the given AzureMarketplacePrivateOffer and assigns it to the AzurePrivateOffer field.
func (o *OfferInfo) SetAzurePrivateOffer(v AzureMarketplacePrivateOffer) {
	o.AzurePrivateOffer = &v
}

// GetAzureProductVariant returns the AzureProductVariant field value if set, zero value otherwise.
func (o *OfferInfo) GetAzureProductVariant() AzureProductVariant {
	if o == nil || IsNil(o.AzureProductVariant) {
		var ret AzureProductVariant
		return ret
	}
	return *o.AzureProductVariant
}

// GetAzureProductVariantOk returns a tuple with the AzureProductVariant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetAzureProductVariantOk() (*AzureProductVariant, bool) {
	if o == nil || IsNil(o.AzureProductVariant) {
		return nil, false
	}
	return o.AzureProductVariant, true
}

// HasAzureProductVariant returns a boolean if a field has been set.
func (o *OfferInfo) HasAzureProductVariant() bool {
	if o != nil && !IsNil(o.AzureProductVariant) {
		return true
	}

	return false
}

// SetAzureProductVariant gets a reference to the given AzureProductVariant and assigns it to the AzureProductVariant field.
func (o *OfferInfo) SetAzureProductVariant(v AzureProductVariant) {
	o.AzureProductVariant = &v
}

// GetBillableDimensions returns the BillableDimensions field value if set, zero value otherwise.
func (o *OfferInfo) GetBillableDimensions() []BillableDimension {
	if o == nil || IsNil(o.BillableDimensions) {
		var ret []BillableDimension
		return ret
	}
	return o.BillableDimensions
}

// GetBillableDimensionsOk returns a tuple with the BillableDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetBillableDimensionsOk() ([]BillableDimension, bool) {
	if o == nil || IsNil(o.BillableDimensions) {
		return nil, false
	}
	return o.BillableDimensions, true
}

// HasBillableDimensions returns a boolean if a field has been set.
func (o *OfferInfo) HasBillableDimensions() bool {
	if o != nil && !IsNil(o.BillableDimensions) {
		return true
	}

	return false
}

// SetBillableDimensions gets a reference to the given []BillableDimension and assigns it to the BillableDimensions field.
func (o *OfferInfo) SetBillableDimensions(v []BillableDimension) {
	o.BillableDimensions = v
}

// GetBillingCycle returns the BillingCycle field value if set, zero value otherwise.
func (o *OfferInfo) GetBillingCycle() BillingCycle {
	if o == nil || IsNil(o.BillingCycle) {
		var ret BillingCycle
		return ret
	}
	return *o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetBillingCycleOk() (*BillingCycle, bool) {
	if o == nil || IsNil(o.BillingCycle) {
		return nil, false
	}
	return o.BillingCycle, true
}

// HasBillingCycle returns a boolean if a field has been set.
func (o *OfferInfo) HasBillingCycle() bool {
	if o != nil && !IsNil(o.BillingCycle) {
		return true
	}

	return false
}

// SetBillingCycle gets a reference to the given BillingCycle and assigns it to the BillingCycle field.
func (o *OfferInfo) SetBillingCycle(v BillingCycle) {
	o.BillingCycle = &v
}

// GetBuyerAwsAccountIds returns the BuyerAwsAccountIds field value if set, zero value otherwise.
func (o *OfferInfo) GetBuyerAwsAccountIds() []string {
	if o == nil || IsNil(o.BuyerAwsAccountIds) {
		var ret []string
		return ret
	}
	return o.BuyerAwsAccountIds
}

// GetBuyerAwsAccountIdsOk returns a tuple with the BuyerAwsAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetBuyerAwsAccountIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.BuyerAwsAccountIds) {
		return nil, false
	}
	return o.BuyerAwsAccountIds, true
}

// HasBuyerAwsAccountIds returns a boolean if a field has been set.
func (o *OfferInfo) HasBuyerAwsAccountIds() bool {
	if o != nil && !IsNil(o.BuyerAwsAccountIds) {
		return true
	}

	return false
}

// SetBuyerAwsAccountIds gets a reference to the given []string and assigns it to the BuyerAwsAccountIds field.
func (o *OfferInfo) SetBuyerAwsAccountIds(v []string) {
	o.BuyerAwsAccountIds = v
}

// GetBuyerAzureTenants returns the BuyerAzureTenants field value if set, zero value otherwise.
func (o *OfferInfo) GetBuyerAzureTenants() []AzureAudience {
	if o == nil || IsNil(o.BuyerAzureTenants) {
		var ret []AzureAudience
		return ret
	}
	return o.BuyerAzureTenants
}

// GetBuyerAzureTenantsOk returns a tuple with the BuyerAzureTenants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetBuyerAzureTenantsOk() ([]AzureAudience, bool) {
	if o == nil || IsNil(o.BuyerAzureTenants) {
		return nil, false
	}
	return o.BuyerAzureTenants, true
}

// HasBuyerAzureTenants returns a boolean if a field has been set.
func (o *OfferInfo) HasBuyerAzureTenants() bool {
	if o != nil && !IsNil(o.BuyerAzureTenants) {
		return true
	}

	return false
}

// SetBuyerAzureTenants gets a reference to the given []AzureAudience and assigns it to the BuyerAzureTenants field.
func (o *OfferInfo) SetBuyerAzureTenants(v []AzureAudience) {
	o.BuyerAzureTenants = v
}

// GetCommitAmount returns the CommitAmount field value if set, zero value otherwise.
func (o *OfferInfo) GetCommitAmount() float32 {
	if o == nil || IsNil(o.CommitAmount) {
		var ret float32
		return ret
	}
	return *o.CommitAmount
}

// GetCommitAmountOk returns a tuple with the CommitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetCommitAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.CommitAmount) {
		return nil, false
	}
	return o.CommitAmount, true
}

// HasCommitAmount returns a boolean if a field has been set.
func (o *OfferInfo) HasCommitAmount() bool {
	if o != nil && !IsNil(o.CommitAmount) {
		return true
	}

	return false
}

// SetCommitAmount gets a reference to the given float32 and assigns it to the CommitAmount field.
func (o *OfferInfo) SetCommitAmount(v float32) {
	o.CommitAmount = &v
}

// GetCommitBillingIntervalInMonths returns the CommitBillingIntervalInMonths field value if set, zero value otherwise.
func (o *OfferInfo) GetCommitBillingIntervalInMonths() int32 {
	if o == nil || IsNil(o.CommitBillingIntervalInMonths) {
		var ret int32
		return ret
	}
	return *o.CommitBillingIntervalInMonths
}

// GetCommitBillingIntervalInMonthsOk returns a tuple with the CommitBillingIntervalInMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetCommitBillingIntervalInMonthsOk() (*int32, bool) {
	if o == nil || IsNil(o.CommitBillingIntervalInMonths) {
		return nil, false
	}
	return o.CommitBillingIntervalInMonths, true
}

// HasCommitBillingIntervalInMonths returns a boolean if a field has been set.
func (o *OfferInfo) HasCommitBillingIntervalInMonths() bool {
	if o != nil && !IsNil(o.CommitBillingIntervalInMonths) {
		return true
	}

	return false
}

// SetCommitBillingIntervalInMonths gets a reference to the given int32 and assigns it to the CommitBillingIntervalInMonths field.
func (o *OfferInfo) SetCommitBillingIntervalInMonths(v int32) {
	o.CommitBillingIntervalInMonths = &v
}

// GetCommits returns the Commits field value if set, zero value otherwise.
func (o *OfferInfo) GetCommits() []CommitDimension {
	if o == nil || IsNil(o.Commits) {
		var ret []CommitDimension
		return ret
	}
	return o.Commits
}

// GetCommitsOk returns a tuple with the Commits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetCommitsOk() ([]CommitDimension, bool) {
	if o == nil || IsNil(o.Commits) {
		return nil, false
	}
	return o.Commits, true
}

// HasCommits returns a boolean if a field has been set.
func (o *OfferInfo) HasCommits() bool {
	if o != nil && !IsNil(o.Commits) {
		return true
	}

	return false
}

// SetCommits gets a reference to the given []CommitDimension and assigns it to the Commits field.
func (o *OfferInfo) SetCommits(v []CommitDimension) {
	o.Commits = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OfferInfo) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OfferInfo) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OfferInfo) SetCurrency(v string) {
	o.Currency = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *OfferInfo) GetDimensions() []MeteringDimension {
	if o == nil || IsNil(o.Dimensions) {
		var ret []MeteringDimension
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetDimensionsOk() ([]MeteringDimension, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *OfferInfo) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []MeteringDimension and assigns it to the Dimensions field.
func (o *OfferInfo) SetDimensions(v []MeteringDimension) {
	o.Dimensions = v
}

// GetDiscountPercentage returns the DiscountPercentage field value if set, zero value otherwise.
func (o *OfferInfo) GetDiscountPercentage() float32 {
	if o == nil || IsNil(o.DiscountPercentage) {
		var ret float32
		return ret
	}
	return *o.DiscountPercentage
}

// GetDiscountPercentageOk returns a tuple with the DiscountPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetDiscountPercentageOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountPercentage) {
		return nil, false
	}
	return o.DiscountPercentage, true
}

// HasDiscountPercentage returns a boolean if a field has been set.
func (o *OfferInfo) HasDiscountPercentage() bool {
	if o != nil && !IsNil(o.DiscountPercentage) {
		return true
	}

	return false
}

// SetDiscountPercentage gets a reference to the given float32 and assigns it to the DiscountPercentage field.
func (o *OfferInfo) SetDiscountPercentage(v float32) {
	o.DiscountPercentage = &v
}

// GetEulaType returns the EulaType field value if set, zero value otherwise.
func (o *OfferInfo) GetEulaType() EulaType {
	if o == nil || IsNil(o.EulaType) {
		var ret EulaType
		return ret
	}
	return *o.EulaType
}

// GetEulaTypeOk returns a tuple with the EulaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetEulaTypeOk() (*EulaType, bool) {
	if o == nil || IsNil(o.EulaType) {
		return nil, false
	}
	return o.EulaType, true
}

// HasEulaType returns a boolean if a field has been set.
func (o *OfferInfo) HasEulaType() bool {
	if o != nil && !IsNil(o.EulaType) {
		return true
	}

	return false
}

// SetEulaType gets a reference to the given EulaType and assigns it to the EulaType field.
func (o *OfferInfo) SetEulaType(v EulaType) {
	o.EulaType = &v
}

// GetEulaUrl returns the EulaUrl field value if set, zero value otherwise.
func (o *OfferInfo) GetEulaUrl() string {
	if o == nil || IsNil(o.EulaUrl) {
		var ret string
		return ret
	}
	return *o.EulaUrl
}

// GetEulaUrlOk returns a tuple with the EulaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetEulaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EulaUrl) {
		return nil, false
	}
	return o.EulaUrl, true
}

// HasEulaUrl returns a boolean if a field has been set.
func (o *OfferInfo) HasEulaUrl() bool {
	if o != nil && !IsNil(o.EulaUrl) {
		return true
	}

	return false
}

// SetEulaUrl gets a reference to the given string and assigns it to the EulaUrl field.
func (o *OfferInfo) SetEulaUrl(v string) {
	o.EulaUrl = &v
}

// GetGcpCustomerInfo returns the GcpCustomerInfo field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpCustomerInfo() GcpMarketplacePrivateOfferCustomerInfo {
	if o == nil || IsNil(o.GcpCustomerInfo) {
		var ret GcpMarketplacePrivateOfferCustomerInfo
		return ret
	}
	return *o.GcpCustomerInfo
}

// GetGcpCustomerInfoOk returns a tuple with the GcpCustomerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpCustomerInfoOk() (*GcpMarketplacePrivateOfferCustomerInfo, bool) {
	if o == nil || IsNil(o.GcpCustomerInfo) {
		return nil, false
	}
	return o.GcpCustomerInfo, true
}

// HasGcpCustomerInfo returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpCustomerInfo() bool {
	if o != nil && !IsNil(o.GcpCustomerInfo) {
		return true
	}

	return false
}

// SetGcpCustomerInfo gets a reference to the given GcpMarketplacePrivateOfferCustomerInfo and assigns it to the GcpCustomerInfo field.
func (o *OfferInfo) SetGcpCustomerInfo(v GcpMarketplacePrivateOfferCustomerInfo) {
	o.GcpCustomerInfo = &v
}

// GetGcpDuration returns the GcpDuration field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpDuration() int32 {
	if o == nil || IsNil(o.GcpDuration) {
		var ret int32
		return ret
	}
	return *o.GcpDuration
}

// GetGcpDurationOk returns a tuple with the GcpDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.GcpDuration) {
		return nil, false
	}
	return o.GcpDuration, true
}

// HasGcpDuration returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpDuration() bool {
	if o != nil && !IsNil(o.GcpDuration) {
		return true
	}

	return false
}

// SetGcpDuration gets a reference to the given int32 and assigns it to the GcpDuration field.
func (o *OfferInfo) SetGcpDuration(v int32) {
	o.GcpDuration = &v
}

// GetGcpMetrics returns the GcpMetrics field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpMetrics() []GcpMarketplaceProductMeteringMetric {
	if o == nil || IsNil(o.GcpMetrics) {
		var ret []GcpMarketplaceProductMeteringMetric
		return ret
	}
	return o.GcpMetrics
}

// GetGcpMetricsOk returns a tuple with the GcpMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpMetricsOk() ([]GcpMarketplaceProductMeteringMetric, bool) {
	if o == nil || IsNil(o.GcpMetrics) {
		return nil, false
	}
	return o.GcpMetrics, true
}

// HasGcpMetrics returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpMetrics() bool {
	if o != nil && !IsNil(o.GcpMetrics) {
		return true
	}

	return false
}

// SetGcpMetrics gets a reference to the given []GcpMarketplaceProductMeteringMetric and assigns it to the GcpMetrics field.
func (o *OfferInfo) SetGcpMetrics(v []GcpMarketplaceProductMeteringMetric) {
	o.GcpMetrics = v
}

// GetGcpPaymentSchedule returns the GcpPaymentSchedule field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpPaymentSchedule() PaymentScheduleType {
	if o == nil || IsNil(o.GcpPaymentSchedule) {
		var ret PaymentScheduleType
		return ret
	}
	return *o.GcpPaymentSchedule
}

// GetGcpPaymentScheduleOk returns a tuple with the GcpPaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpPaymentScheduleOk() (*PaymentScheduleType, bool) {
	if o == nil || IsNil(o.GcpPaymentSchedule) {
		return nil, false
	}
	return o.GcpPaymentSchedule, true
}

// HasGcpPaymentSchedule returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpPaymentSchedule() bool {
	if o != nil && !IsNil(o.GcpPaymentSchedule) {
		return true
	}

	return false
}

// SetGcpPaymentSchedule gets a reference to the given PaymentScheduleType and assigns it to the GcpPaymentSchedule field.
func (o *OfferInfo) SetGcpPaymentSchedule(v PaymentScheduleType) {
	o.GcpPaymentSchedule = &v
}

// GetGcpPlans returns the GcpPlans field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpPlans() []GcpMarketplaceProductPurchaseOptionSpec {
	if o == nil || IsNil(o.GcpPlans) {
		var ret []GcpMarketplaceProductPurchaseOptionSpec
		return ret
	}
	return o.GcpPlans
}

// GetGcpPlansOk returns a tuple with the GcpPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpPlansOk() ([]GcpMarketplaceProductPurchaseOptionSpec, bool) {
	if o == nil || IsNil(o.GcpPlans) {
		return nil, false
	}
	return o.GcpPlans, true
}

// HasGcpPlans returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpPlans() bool {
	if o != nil && !IsNil(o.GcpPlans) {
		return true
	}

	return false
}

// SetGcpPlans gets a reference to the given []GcpMarketplaceProductPurchaseOptionSpec and assigns it to the GcpPlans field.
func (o *OfferInfo) SetGcpPlans(v []GcpMarketplaceProductPurchaseOptionSpec) {
	o.GcpPlans = v
}

// GetGcpPrivateOffer returns the GcpPrivateOffer field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpPrivateOffer() GcpMarketplacePrivateOffer {
	if o == nil || IsNil(o.GcpPrivateOffer) {
		var ret GcpMarketplacePrivateOffer
		return ret
	}
	return *o.GcpPrivateOffer
}

// GetGcpPrivateOfferOk returns a tuple with the GcpPrivateOffer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpPrivateOfferOk() (*GcpMarketplacePrivateOffer, bool) {
	if o == nil || IsNil(o.GcpPrivateOffer) {
		return nil, false
	}
	return o.GcpPrivateOffer, true
}

// HasGcpPrivateOffer returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpPrivateOffer() bool {
	if o != nil && !IsNil(o.GcpPrivateOffer) {
		return true
	}

	return false
}

// SetGcpPrivateOffer gets a reference to the given GcpMarketplacePrivateOffer and assigns it to the GcpPrivateOffer field.
func (o *OfferInfo) SetGcpPrivateOffer(v GcpMarketplacePrivateOffer) {
	o.GcpPrivateOffer = &v
}

// GetGcpProviderInfo returns the GcpProviderInfo field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpProviderInfo() GcpMarketplacePrivateOfferProviderInfo {
	if o == nil || IsNil(o.GcpProviderInfo) {
		var ret GcpMarketplacePrivateOfferProviderInfo
		return ret
	}
	return *o.GcpProviderInfo
}

// GetGcpProviderInfoOk returns a tuple with the GcpProviderInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpProviderInfoOk() (*GcpMarketplacePrivateOfferProviderInfo, bool) {
	if o == nil || IsNil(o.GcpProviderInfo) {
		return nil, false
	}
	return o.GcpProviderInfo, true
}

// HasGcpProviderInfo returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpProviderInfo() bool {
	if o != nil && !IsNil(o.GcpProviderInfo) {
		return true
	}

	return false
}

// SetGcpProviderInfo gets a reference to the given GcpMarketplacePrivateOfferProviderInfo and assigns it to the GcpProviderInfo field.
func (o *OfferInfo) SetGcpProviderInfo(v GcpMarketplacePrivateOfferProviderInfo) {
	o.GcpProviderInfo = &v
}

// GetGcpProviderInternalNote returns the GcpProviderInternalNote field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpProviderInternalNote() string {
	if o == nil || IsNil(o.GcpProviderInternalNote) {
		var ret string
		return ret
	}
	return *o.GcpProviderInternalNote
}

// GetGcpProviderInternalNoteOk returns a tuple with the GcpProviderInternalNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpProviderInternalNoteOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProviderInternalNote) {
		return nil, false
	}
	return o.GcpProviderInternalNote, true
}

// HasGcpProviderInternalNote returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpProviderInternalNote() bool {
	if o != nil && !IsNil(o.GcpProviderInternalNote) {
		return true
	}

	return false
}

// SetGcpProviderInternalNote gets a reference to the given string and assigns it to the GcpProviderInternalNote field.
func (o *OfferInfo) SetGcpProviderInternalNote(v string) {
	o.GcpProviderInternalNote = &v
}

// GetGcpProviderPublicNote returns the GcpProviderPublicNote field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpProviderPublicNote() string {
	if o == nil || IsNil(o.GcpProviderPublicNote) {
		var ret string
		return ret
	}
	return *o.GcpProviderPublicNote
}

// GetGcpProviderPublicNoteOk returns a tuple with the GcpProviderPublicNote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpProviderPublicNoteOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProviderPublicNote) {
		return nil, false
	}
	return o.GcpProviderPublicNote, true
}

// HasGcpProviderPublicNote returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpProviderPublicNote() bool {
	if o != nil && !IsNil(o.GcpProviderPublicNote) {
		return true
	}

	return false
}

// SetGcpProviderPublicNote gets a reference to the given string and assigns it to the GcpProviderPublicNote field.
func (o *OfferInfo) SetGcpProviderPublicNote(v string) {
	o.GcpProviderPublicNote = &v
}

// GetGcpResellerPrivateOfferPlan returns the GcpResellerPrivateOfferPlan field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpResellerPrivateOfferPlan() GcpMarketplaceResellerPrivateOfferPlan {
	if o == nil || IsNil(o.GcpResellerPrivateOfferPlan) {
		var ret GcpMarketplaceResellerPrivateOfferPlan
		return ret
	}
	return *o.GcpResellerPrivateOfferPlan
}

// GetGcpResellerPrivateOfferPlanOk returns a tuple with the GcpResellerPrivateOfferPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpResellerPrivateOfferPlanOk() (*GcpMarketplaceResellerPrivateOfferPlan, bool) {
	if o == nil || IsNil(o.GcpResellerPrivateOfferPlan) {
		return nil, false
	}
	return o.GcpResellerPrivateOfferPlan, true
}

// HasGcpResellerPrivateOfferPlan returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpResellerPrivateOfferPlan() bool {
	if o != nil && !IsNil(o.GcpResellerPrivateOfferPlan) {
		return true
	}

	return false
}

// SetGcpResellerPrivateOfferPlan gets a reference to the given GcpMarketplaceResellerPrivateOfferPlan and assigns it to the GcpResellerPrivateOfferPlan field.
func (o *OfferInfo) SetGcpResellerPrivateOfferPlan(v GcpMarketplaceResellerPrivateOfferPlan) {
	o.GcpResellerPrivateOfferPlan = &v
}

// GetGcpUsagePlanPriceModel returns the GcpUsagePlanPriceModel field value if set, zero value otherwise.
func (o *OfferInfo) GetGcpUsagePlanPriceModel() GcpMarketplaceUsagePlanPriceModel {
	if o == nil || IsNil(o.GcpUsagePlanPriceModel) {
		var ret GcpMarketplaceUsagePlanPriceModel
		return ret
	}
	return *o.GcpUsagePlanPriceModel
}

// GetGcpUsagePlanPriceModelOk returns a tuple with the GcpUsagePlanPriceModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGcpUsagePlanPriceModelOk() (*GcpMarketplaceUsagePlanPriceModel, bool) {
	if o == nil || IsNil(o.GcpUsagePlanPriceModel) {
		return nil, false
	}
	return o.GcpUsagePlanPriceModel, true
}

// HasGcpUsagePlanPriceModel returns a boolean if a field has been set.
func (o *OfferInfo) HasGcpUsagePlanPriceModel() bool {
	if o != nil && !IsNil(o.GcpUsagePlanPriceModel) {
		return true
	}

	return false
}

// SetGcpUsagePlanPriceModel gets a reference to the given GcpMarketplaceUsagePlanPriceModel and assigns it to the GcpUsagePlanPriceModel field.
func (o *OfferInfo) SetGcpUsagePlanPriceModel(v GcpMarketplaceUsagePlanPriceModel) {
	o.GcpUsagePlanPriceModel = &v
}

// GetGracePeriodInDays returns the GracePeriodInDays field value if set, zero value otherwise.
func (o *OfferInfo) GetGracePeriodInDays() int32 {
	if o == nil || IsNil(o.GracePeriodInDays) {
		var ret int32
		return ret
	}
	return *o.GracePeriodInDays
}

// GetGracePeriodInDaysOk returns a tuple with the GracePeriodInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetGracePeriodInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.GracePeriodInDays) {
		return nil, false
	}
	return o.GracePeriodInDays, true
}

// HasGracePeriodInDays returns a boolean if a field has been set.
func (o *OfferInfo) HasGracePeriodInDays() bool {
	if o != nil && !IsNil(o.GracePeriodInDays) {
		return true
	}

	return false
}

// SetGracePeriodInDays gets a reference to the given int32 and assigns it to the GracePeriodInDays field.
func (o *OfferInfo) SetGracePeriodInDays(v int32) {
	o.GracePeriodInDays = &v
}

// GetNetTermsInDays returns the NetTermsInDays field value if set, zero value otherwise.
func (o *OfferInfo) GetNetTermsInDays() int32 {
	if o == nil || IsNil(o.NetTermsInDays) {
		var ret int32
		return ret
	}
	return *o.NetTermsInDays
}

// GetNetTermsInDaysOk returns a tuple with the NetTermsInDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetNetTermsInDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.NetTermsInDays) {
		return nil, false
	}
	return o.NetTermsInDays, true
}

// HasNetTermsInDays returns a boolean if a field has been set.
func (o *OfferInfo) HasNetTermsInDays() bool {
	if o != nil && !IsNil(o.NetTermsInDays) {
		return true
	}

	return false
}

// SetNetTermsInDays gets a reference to the given int32 and assigns it to the NetTermsInDays field.
func (o *OfferInfo) SetNetTermsInDays(v int32) {
	o.NetTermsInDays = &v
}

// GetPaymentInstallments returns the PaymentInstallments field value if set, zero value otherwise.
func (o *OfferInfo) GetPaymentInstallments() []PaymentInstallment {
	if o == nil || IsNil(o.PaymentInstallments) {
		var ret []PaymentInstallment
		return ret
	}
	return o.PaymentInstallments
}

// GetPaymentInstallmentsOk returns a tuple with the PaymentInstallments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetPaymentInstallmentsOk() ([]PaymentInstallment, bool) {
	if o == nil || IsNil(o.PaymentInstallments) {
		return nil, false
	}
	return o.PaymentInstallments, true
}

// HasPaymentInstallments returns a boolean if a field has been set.
func (o *OfferInfo) HasPaymentInstallments() bool {
	if o != nil && !IsNil(o.PaymentInstallments) {
		return true
	}

	return false
}

// SetPaymentInstallments gets a reference to the given []PaymentInstallment and assigns it to the PaymentInstallments field.
func (o *OfferInfo) SetPaymentInstallments(v []PaymentInstallment) {
	o.PaymentInstallments = v
}

// GetPaymentSchedule returns the PaymentSchedule field value if set, zero value otherwise.
func (o *OfferInfo) GetPaymentSchedule() PaymentScheduleType {
	if o == nil || IsNil(o.PaymentSchedule) {
		var ret PaymentScheduleType
		return ret
	}
	return *o.PaymentSchedule
}

// GetPaymentScheduleOk returns a tuple with the PaymentSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetPaymentScheduleOk() (*PaymentScheduleType, bool) {
	if o == nil || IsNil(o.PaymentSchedule) {
		return nil, false
	}
	return o.PaymentSchedule, true
}

// HasPaymentSchedule returns a boolean if a field has been set.
func (o *OfferInfo) HasPaymentSchedule() bool {
	if o != nil && !IsNil(o.PaymentSchedule) {
		return true
	}

	return false
}

// SetPaymentSchedule gets a reference to the given PaymentScheduleType and assigns it to the PaymentSchedule field.
func (o *OfferInfo) SetPaymentSchedule(v PaymentScheduleType) {
	o.PaymentSchedule = &v
}

// GetPrivateOfferUrl returns the PrivateOfferUrl field value if set, zero value otherwise.
func (o *OfferInfo) GetPrivateOfferUrl() string {
	if o == nil || IsNil(o.PrivateOfferUrl) {
		var ret string
		return ret
	}
	return *o.PrivateOfferUrl
}

// GetPrivateOfferUrlOk returns a tuple with the PrivateOfferUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetPrivateOfferUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateOfferUrl) {
		return nil, false
	}
	return o.PrivateOfferUrl, true
}

// HasPrivateOfferUrl returns a boolean if a field has been set.
func (o *OfferInfo) HasPrivateOfferUrl() bool {
	if o != nil && !IsNil(o.PrivateOfferUrl) {
		return true
	}

	return false
}

// SetPrivateOfferUrl gets a reference to the given string and assigns it to the PrivateOfferUrl field.
func (o *OfferInfo) SetPrivateOfferUrl(v string) {
	o.PrivateOfferUrl = &v
}

// GetProratedBilling returns the ProratedBilling field value if set, zero value otherwise.
func (o *OfferInfo) GetProratedBilling() bool {
	if o == nil || IsNil(o.ProratedBilling) {
		var ret bool
		return ret
	}
	return *o.ProratedBilling
}

// GetProratedBillingOk returns a tuple with the ProratedBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetProratedBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.ProratedBilling) {
		return nil, false
	}
	return o.ProratedBilling, true
}

// HasProratedBilling returns a boolean if a field has been set.
func (o *OfferInfo) HasProratedBilling() bool {
	if o != nil && !IsNil(o.ProratedBilling) {
		return true
	}

	return false
}

// SetProratedBilling gets a reference to the given bool and assigns it to the ProratedBilling field.
func (o *OfferInfo) SetProratedBilling(v bool) {
	o.ProratedBilling = &v
}

// GetRefundCancellationPolicy returns the RefundCancellationPolicy field value if set, zero value otherwise.
func (o *OfferInfo) GetRefundCancellationPolicy() string {
	if o == nil || IsNil(o.RefundCancellationPolicy) {
		var ret string
		return ret
	}
	return *o.RefundCancellationPolicy
}

// GetRefundCancellationPolicyOk returns a tuple with the RefundCancellationPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetRefundCancellationPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.RefundCancellationPolicy) {
		return nil, false
	}
	return o.RefundCancellationPolicy, true
}

// HasRefundCancellationPolicy returns a boolean if a field has been set.
func (o *OfferInfo) HasRefundCancellationPolicy() bool {
	if o != nil && !IsNil(o.RefundCancellationPolicy) {
		return true
	}

	return false
}

// SetRefundCancellationPolicy gets a reference to the given string and assigns it to the RefundCancellationPolicy field.
func (o *OfferInfo) SetRefundCancellationPolicy(v string) {
	o.RefundCancellationPolicy = &v
}

// GetResellerAttachEulaType returns the ResellerAttachEulaType field value if set, zero value otherwise.
func (o *OfferInfo) GetResellerAttachEulaType() EulaType {
	if o == nil || IsNil(o.ResellerAttachEulaType) {
		var ret EulaType
		return ret
	}
	return *o.ResellerAttachEulaType
}

// GetResellerAttachEulaTypeOk returns a tuple with the ResellerAttachEulaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetResellerAttachEulaTypeOk() (*EulaType, bool) {
	if o == nil || IsNil(o.ResellerAttachEulaType) {
		return nil, false
	}
	return o.ResellerAttachEulaType, true
}

// HasResellerAttachEulaType returns a boolean if a field has been set.
func (o *OfferInfo) HasResellerAttachEulaType() bool {
	if o != nil && !IsNil(o.ResellerAttachEulaType) {
		return true
	}

	return false
}

// SetResellerAttachEulaType gets a reference to the given EulaType and assigns it to the ResellerAttachEulaType field.
func (o *OfferInfo) SetResellerAttachEulaType(v EulaType) {
	o.ResellerAttachEulaType = &v
}

// GetResellerEulaType returns the ResellerEulaType field value if set, zero value otherwise.
func (o *OfferInfo) GetResellerEulaType() EulaType {
	if o == nil || IsNil(o.ResellerEulaType) {
		var ret EulaType
		return ret
	}
	return *o.ResellerEulaType
}

// GetResellerEulaTypeOk returns a tuple with the ResellerEulaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetResellerEulaTypeOk() (*EulaType, bool) {
	if o == nil || IsNil(o.ResellerEulaType) {
		return nil, false
	}
	return o.ResellerEulaType, true
}

// HasResellerEulaType returns a boolean if a field has been set.
func (o *OfferInfo) HasResellerEulaType() bool {
	if o != nil && !IsNil(o.ResellerEulaType) {
		return true
	}

	return false
}

// SetResellerEulaType gets a reference to the given EulaType and assigns it to the ResellerEulaType field.
func (o *OfferInfo) SetResellerEulaType(v EulaType) {
	o.ResellerEulaType = &v
}

// GetResellerEulaUrl returns the ResellerEulaUrl field value if set, zero value otherwise.
func (o *OfferInfo) GetResellerEulaUrl() string {
	if o == nil || IsNil(o.ResellerEulaUrl) {
		var ret string
		return ret
	}
	return *o.ResellerEulaUrl
}

// GetResellerEulaUrlOk returns a tuple with the ResellerEulaUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetResellerEulaUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ResellerEulaUrl) {
		return nil, false
	}
	return o.ResellerEulaUrl, true
}

// HasResellerEulaUrl returns a boolean if a field has been set.
func (o *OfferInfo) HasResellerEulaUrl() bool {
	if o != nil && !IsNil(o.ResellerEulaUrl) {
		return true
	}

	return false
}

// SetResellerEulaUrl gets a reference to the given string and assigns it to the ResellerEulaUrl field.
func (o *OfferInfo) SetResellerEulaUrl(v string) {
	o.ResellerEulaUrl = &v
}

// GetSellerNotes returns the SellerNotes field value if set, zero value otherwise.
func (o *OfferInfo) GetSellerNotes() string {
	if o == nil || IsNil(o.SellerNotes) {
		var ret string
		return ret
	}
	return *o.SellerNotes
}

// GetSellerNotesOk returns a tuple with the SellerNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetSellerNotesOk() (*string, bool) {
	if o == nil || IsNil(o.SellerNotes) {
		return nil, false
	}
	return o.SellerNotes, true
}

// HasSellerNotes returns a boolean if a field has been set.
func (o *OfferInfo) HasSellerNotes() bool {
	if o != nil && !IsNil(o.SellerNotes) {
		return true
	}

	return false
}

// SetSellerNotes gets a reference to the given string and assigns it to the SellerNotes field.
func (o *OfferInfo) SetSellerNotes(v string) {
	o.SellerNotes = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *OfferInfo) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *OfferInfo) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *OfferInfo) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetTaxIds returns the TaxIds field value if set, zero value otherwise.
func (o *OfferInfo) GetTaxIds() []string {
	if o == nil || IsNil(o.TaxIds) {
		var ret []string
		return ret
	}
	return o.TaxIds
}

// GetTaxIdsOk returns a tuple with the TaxIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetTaxIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TaxIds) {
		return nil, false
	}
	return o.TaxIds, true
}

// HasTaxIds returns a boolean if a field has been set.
func (o *OfferInfo) HasTaxIds() bool {
	if o != nil && !IsNil(o.TaxIds) {
		return true
	}

	return false
}

// SetTaxIds gets a reference to the given []string and assigns it to the TaxIds field.
func (o *OfferInfo) SetTaxIds(v []string) {
	o.TaxIds = v
}

// GetTrialConfig returns the TrialConfig field value if set, zero value otherwise.
func (o *OfferInfo) GetTrialConfig() TrialConfig {
	if o == nil || IsNil(o.TrialConfig) {
		var ret TrialConfig
		return ret
	}
	return *o.TrialConfig
}

// GetTrialConfigOk returns a tuple with the TrialConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetTrialConfigOk() (*TrialConfig, bool) {
	if o == nil || IsNil(o.TrialConfig) {
		return nil, false
	}
	return o.TrialConfig, true
}

// HasTrialConfig returns a boolean if a field has been set.
func (o *OfferInfo) HasTrialConfig() bool {
	if o != nil && !IsNil(o.TrialConfig) {
		return true
	}

	return false
}

// SetTrialConfig gets a reference to the given TrialConfig and assigns it to the TrialConfig field.
func (o *OfferInfo) SetTrialConfig(v TrialConfig) {
	o.TrialConfig = &v
}

// GetUsageBillingIntervalInMonths returns the UsageBillingIntervalInMonths field value if set, zero value otherwise.
func (o *OfferInfo) GetUsageBillingIntervalInMonths() int32 {
	if o == nil || IsNil(o.UsageBillingIntervalInMonths) {
		var ret int32
		return ret
	}
	return *o.UsageBillingIntervalInMonths
}

// GetUsageBillingIntervalInMonthsOk returns a tuple with the UsageBillingIntervalInMonths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetUsageBillingIntervalInMonthsOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageBillingIntervalInMonths) {
		return nil, false
	}
	return o.UsageBillingIntervalInMonths, true
}

// HasUsageBillingIntervalInMonths returns a boolean if a field has been set.
func (o *OfferInfo) HasUsageBillingIntervalInMonths() bool {
	if o != nil && !IsNil(o.UsageBillingIntervalInMonths) {
		return true
	}

	return false
}

// SetUsageBillingIntervalInMonths gets a reference to the given int32 and assigns it to the UsageBillingIntervalInMonths field.
func (o *OfferInfo) SetUsageBillingIntervalInMonths(v int32) {
	o.UsageBillingIntervalInMonths = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OfferInfo) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferInfo) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *OfferInfo) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OfferInfo) SetVisibility(v string) {
	o.Visibility = &v
}

func (o OfferInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalEulaUrls) {
		toSerialize["additionalEulaUrls"] = o.AdditionalEulaUrls
	}
	if !IsNil(o.AdditionalResellerEulaUrls) {
		toSerialize["additionalResellerEulaUrls"] = o.AdditionalResellerEulaUrls
	}
	if !IsNil(o.AttachEulaType) {
		toSerialize["attachEulaType"] = o.AttachEulaType
	}
	if !IsNil(o.AutoRenew) {
		toSerialize["autoRenew"] = o.AutoRenew
	}
	if !IsNil(o.AwsAgreementDuration) {
		toSerialize["awsAgreementDuration"] = o.AwsAgreementDuration
	}
	if !IsNil(o.AwsChannelPartner) {
		toSerialize["awsChannelPartner"] = o.AwsChannelPartner
	}
	if !IsNil(o.AwsCppoEventDetail) {
		toSerialize["awsCppoEventDetail"] = o.AwsCppoEventDetail
	}
	if !IsNil(o.AwsCppoOpportunity) {
		toSerialize["awsCppoOpportunity"] = o.AwsCppoOpportunity
	}
	if !IsNil(o.AwsMarkupPercentage) {
		toSerialize["awsMarkupPercentage"] = o.AwsMarkupPercentage
	}
	if !IsNil(o.AwsResaleAuthorizationId) {
		toSerialize["awsResaleAuthorizationId"] = o.AwsResaleAuthorizationId
	}
	if !IsNil(o.AzureOriginalPlan) {
		toSerialize["azureOriginalPlan"] = o.AzureOriginalPlan
	}
	if !IsNil(o.AzurePrivateOffer) {
		toSerialize["azurePrivateOffer"] = o.AzurePrivateOffer
	}
	if !IsNil(o.AzureProductVariant) {
		toSerialize["azureProductVariant"] = o.AzureProductVariant
	}
	if !IsNil(o.BillableDimensions) {
		toSerialize["billableDimensions"] = o.BillableDimensions
	}
	if !IsNil(o.BillingCycle) {
		toSerialize["billingCycle"] = o.BillingCycle
	}
	if !IsNil(o.BuyerAwsAccountIds) {
		toSerialize["buyerAwsAccountIds"] = o.BuyerAwsAccountIds
	}
	if !IsNil(o.BuyerAzureTenants) {
		toSerialize["buyerAzureTenants"] = o.BuyerAzureTenants
	}
	if !IsNil(o.CommitAmount) {
		toSerialize["commitAmount"] = o.CommitAmount
	}
	if !IsNil(o.CommitBillingIntervalInMonths) {
		toSerialize["commitBillingIntervalInMonths"] = o.CommitBillingIntervalInMonths
	}
	if !IsNil(o.Commits) {
		toSerialize["commits"] = o.Commits
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Dimensions) {
		toSerialize["dimensions"] = o.Dimensions
	}
	if !IsNil(o.DiscountPercentage) {
		toSerialize["discountPercentage"] = o.DiscountPercentage
	}
	if !IsNil(o.EulaType) {
		toSerialize["eulaType"] = o.EulaType
	}
	if !IsNil(o.EulaUrl) {
		toSerialize["eulaUrl"] = o.EulaUrl
	}
	if !IsNil(o.GcpCustomerInfo) {
		toSerialize["gcpCustomerInfo"] = o.GcpCustomerInfo
	}
	if !IsNil(o.GcpDuration) {
		toSerialize["gcpDuration"] = o.GcpDuration
	}
	if !IsNil(o.GcpMetrics) {
		toSerialize["gcpMetrics"] = o.GcpMetrics
	}
	if !IsNil(o.GcpPaymentSchedule) {
		toSerialize["gcpPaymentSchedule"] = o.GcpPaymentSchedule
	}
	if !IsNil(o.GcpPlans) {
		toSerialize["gcpPlans"] = o.GcpPlans
	}
	if !IsNil(o.GcpPrivateOffer) {
		toSerialize["gcpPrivateOffer"] = o.GcpPrivateOffer
	}
	if !IsNil(o.GcpProviderInfo) {
		toSerialize["gcpProviderInfo"] = o.GcpProviderInfo
	}
	if !IsNil(o.GcpProviderInternalNote) {
		toSerialize["gcpProviderInternalNote"] = o.GcpProviderInternalNote
	}
	if !IsNil(o.GcpProviderPublicNote) {
		toSerialize["gcpProviderPublicNote"] = o.GcpProviderPublicNote
	}
	if !IsNil(o.GcpResellerPrivateOfferPlan) {
		toSerialize["gcpResellerPrivateOfferPlan"] = o.GcpResellerPrivateOfferPlan
	}
	if !IsNil(o.GcpUsagePlanPriceModel) {
		toSerialize["gcpUsagePlanPriceModel"] = o.GcpUsagePlanPriceModel
	}
	if !IsNil(o.GracePeriodInDays) {
		toSerialize["gracePeriodInDays"] = o.GracePeriodInDays
	}
	if !IsNil(o.NetTermsInDays) {
		toSerialize["netTermsInDays"] = o.NetTermsInDays
	}
	if !IsNil(o.PaymentInstallments) {
		toSerialize["paymentInstallments"] = o.PaymentInstallments
	}
	if !IsNil(o.PaymentSchedule) {
		toSerialize["paymentSchedule"] = o.PaymentSchedule
	}
	if !IsNil(o.PrivateOfferUrl) {
		toSerialize["privateOfferUrl"] = o.PrivateOfferUrl
	}
	if !IsNil(o.ProratedBilling) {
		toSerialize["proratedBilling"] = o.ProratedBilling
	}
	if !IsNil(o.RefundCancellationPolicy) {
		toSerialize["refundCancellationPolicy"] = o.RefundCancellationPolicy
	}
	if !IsNil(o.ResellerAttachEulaType) {
		toSerialize["resellerAttachEulaType"] = o.ResellerAttachEulaType
	}
	if !IsNil(o.ResellerEulaType) {
		toSerialize["resellerEulaType"] = o.ResellerEulaType
	}
	if !IsNil(o.ResellerEulaUrl) {
		toSerialize["resellerEulaUrl"] = o.ResellerEulaUrl
	}
	if !IsNil(o.SellerNotes) {
		toSerialize["sellerNotes"] = o.SellerNotes
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.TaxIds) {
		toSerialize["taxIds"] = o.TaxIds
	}
	if !IsNil(o.TrialConfig) {
		toSerialize["trialConfig"] = o.TrialConfig
	}
	if !IsNil(o.UsageBillingIntervalInMonths) {
		toSerialize["usageBillingIntervalInMonths"] = o.UsageBillingIntervalInMonths
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	return toSerialize, nil
}

type NullableOfferInfo struct {
	value *OfferInfo
	isSet bool
}

func (v NullableOfferInfo) Get() *OfferInfo {
	return v.value
}

func (v *NullableOfferInfo) Set(val *OfferInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferInfo(val *OfferInfo) *NullableOfferInfo {
	return &NullableOfferInfo{value: val, isSet: true}
}

func (v NullableOfferInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
