/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsProductPromotionalResources type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsProductPromotionalResources{}

// AwsProductPromotionalResources struct for AwsProductPromotionalResources
type AwsProductPromotionalResources struct {
	AdditionalResources []AwsProductAdditionalResource `json:"AdditionalResources,omitempty"`
	LogoUrl             *string                        `json:"LogoUrl,omitempty"`
	Videos              []AwsProductVideo              `json:"Videos,omitempty"`
}

// NewAwsProductPromotionalResources instantiates a new AwsProductPromotionalResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsProductPromotionalResources() *AwsProductPromotionalResources {
	this := AwsProductPromotionalResources{}
	return &this
}

// NewAwsProductPromotionalResourcesWithDefaults instantiates a new AwsProductPromotionalResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsProductPromotionalResourcesWithDefaults() *AwsProductPromotionalResources {
	this := AwsProductPromotionalResources{}
	return &this
}

// GetAdditionalResources returns the AdditionalResources field value if set, zero value otherwise.
func (o *AwsProductPromotionalResources) GetAdditionalResources() []AwsProductAdditionalResource {
	if o == nil || IsNil(o.AdditionalResources) {
		var ret []AwsProductAdditionalResource
		return ret
	}
	return o.AdditionalResources
}

// GetAdditionalResourcesOk returns a tuple with the AdditionalResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductPromotionalResources) GetAdditionalResourcesOk() ([]AwsProductAdditionalResource, bool) {
	if o == nil || IsNil(o.AdditionalResources) {
		return nil, false
	}
	return o.AdditionalResources, true
}

// HasAdditionalResources returns a boolean if a field has been set.
func (o *AwsProductPromotionalResources) HasAdditionalResources() bool {
	if o != nil && !IsNil(o.AdditionalResources) {
		return true
	}

	return false
}

// SetAdditionalResources gets a reference to the given []AwsProductAdditionalResource and assigns it to the AdditionalResources field.
func (o *AwsProductPromotionalResources) SetAdditionalResources(v []AwsProductAdditionalResource) {
	o.AdditionalResources = v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *AwsProductPromotionalResources) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductPromotionalResources) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *AwsProductPromotionalResources) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *AwsProductPromotionalResources) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetVideos returns the Videos field value if set, zero value otherwise.
func (o *AwsProductPromotionalResources) GetVideos() []AwsProductVideo {
	if o == nil || IsNil(o.Videos) {
		var ret []AwsProductVideo
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsProductPromotionalResources) GetVideosOk() ([]AwsProductVideo, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *AwsProductPromotionalResources) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []AwsProductVideo and assigns it to the Videos field.
func (o *AwsProductPromotionalResources) SetVideos(v []AwsProductVideo) {
	o.Videos = v
}

func (o AwsProductPromotionalResources) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsProductPromotionalResources) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalResources) {
		toSerialize["AdditionalResources"] = o.AdditionalResources
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["LogoUrl"] = o.LogoUrl
	}
	if !IsNil(o.Videos) {
		toSerialize["Videos"] = o.Videos
	}
	return toSerialize, nil
}

type NullableAwsProductPromotionalResources struct {
	value *AwsProductPromotionalResources
	isSet bool
}

func (v NullableAwsProductPromotionalResources) Get() *AwsProductPromotionalResources {
	return v.value
}

func (v *NullableAwsProductPromotionalResources) Set(val *AwsProductPromotionalResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsProductPromotionalResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsProductPromotionalResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsProductPromotionalResources(val *AwsProductPromotionalResources) *NullableAwsProductPromotionalResources {
	return &NullableAwsProductPromotionalResources{value: val, isSet: true}
}

func (v NullableAwsProductPromotionalResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsProductPromotionalResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
