/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCppoOpportunity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoOpportunity{}

// AwsMarketplaceCppoOpportunity struct for AwsMarketplaceCppoOpportunity
type AwsMarketplaceCppoOpportunity struct {
	CreatedDate               *string                                    `json:"CreatedDate,omitempty"`
	Description               *string                                    `json:"Description,omitempty"`
	Dimensions                []AwsProductDimension                      `json:"Dimensions,omitempty"`
	ManufacturerAccountId     *string                                    `json:"ManufacturerAccountId,omitempty"`
	ManufacturerLegalName     *string                                    `json:"ManufacturerLegalName,omitempty"`
	Name                      *string                                    `json:"Name,omitempty"`
	OfferDetails              *AwsMarketplaceCppoOpportunityOfferDetails `json:"OfferDetails,omitempty"`
	PreExistingBuyerAgreement *AwsMarketplacePreExistingAgreement        `json:"PreExistingBuyerAgreement,omitempty"`
	ProductId                 *string                                    `json:"ProductId,omitempty"`
	ProductName               *string                                    `json:"ProductName,omitempty"`
	Rules                     []AwsMarketplaceCppoOpportunityRule        `json:"Rules,omitempty"`
	Status                    *string                                    `json:"Status,omitempty"`
	Terms                     []AwsMarketplaceCppoOpportunityTerm        `json:"Terms,omitempty"`
	// The following fields are not from aws catalog API, only used for cppo_out offer create. They shouldn't be read in other places because they will absent when fetch opportunity from aws catalog API.
	DiscountType            *AwsMarketplaceCppoDiscountType `json:"discountType,omitempty"`
	OpportunityDurationType *AwsMarketplaceCppoDurationType `json:"opportunityDurationType,omitempty"`
	OpportunityId           *string                         `json:"opportunityId,omitempty"`
	PartnerId               *string                         `json:"partnerId,omitempty"`
}

// NewAwsMarketplaceCppoOpportunity instantiates a new AwsMarketplaceCppoOpportunity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoOpportunity() *AwsMarketplaceCppoOpportunity {
	this := AwsMarketplaceCppoOpportunity{}
	return &this
}

// NewAwsMarketplaceCppoOpportunityWithDefaults instantiates a new AwsMarketplaceCppoOpportunity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoOpportunityWithDefaults() *AwsMarketplaceCppoOpportunity {
	this := AwsMarketplaceCppoOpportunity{}
	return &this
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetCreatedDate() string {
	if o == nil || IsNil(o.CreatedDate) {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetCreatedDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *AwsMarketplaceCppoOpportunity) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AwsMarketplaceCppoOpportunity) SetDescription(v string) {
	o.Description = &v
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetDimensions() []AwsProductDimension {
	if o == nil || IsNil(o.Dimensions) {
		var ret []AwsProductDimension
		return ret
	}
	return o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetDimensionsOk() ([]AwsProductDimension, bool) {
	if o == nil || IsNil(o.Dimensions) {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasDimensions() bool {
	if o != nil && !IsNil(o.Dimensions) {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given []AwsProductDimension and assigns it to the Dimensions field.
func (o *AwsMarketplaceCppoOpportunity) SetDimensions(v []AwsProductDimension) {
	o.Dimensions = v
}

// GetManufacturerAccountId returns the ManufacturerAccountId field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetManufacturerAccountId() string {
	if o == nil || IsNil(o.ManufacturerAccountId) {
		var ret string
		return ret
	}
	return *o.ManufacturerAccountId
}

// GetManufacturerAccountIdOk returns a tuple with the ManufacturerAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetManufacturerAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerAccountId) {
		return nil, false
	}
	return o.ManufacturerAccountId, true
}

// HasManufacturerAccountId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasManufacturerAccountId() bool {
	if o != nil && !IsNil(o.ManufacturerAccountId) {
		return true
	}

	return false
}

// SetManufacturerAccountId gets a reference to the given string and assigns it to the ManufacturerAccountId field.
func (o *AwsMarketplaceCppoOpportunity) SetManufacturerAccountId(v string) {
	o.ManufacturerAccountId = &v
}

// GetManufacturerLegalName returns the ManufacturerLegalName field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetManufacturerLegalName() string {
	if o == nil || IsNil(o.ManufacturerLegalName) {
		var ret string
		return ret
	}
	return *o.ManufacturerLegalName
}

// GetManufacturerLegalNameOk returns a tuple with the ManufacturerLegalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetManufacturerLegalNameOk() (*string, bool) {
	if o == nil || IsNil(o.ManufacturerLegalName) {
		return nil, false
	}
	return o.ManufacturerLegalName, true
}

// HasManufacturerLegalName returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasManufacturerLegalName() bool {
	if o != nil && !IsNil(o.ManufacturerLegalName) {
		return true
	}

	return false
}

// SetManufacturerLegalName gets a reference to the given string and assigns it to the ManufacturerLegalName field.
func (o *AwsMarketplaceCppoOpportunity) SetManufacturerLegalName(v string) {
	o.ManufacturerLegalName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AwsMarketplaceCppoOpportunity) SetName(v string) {
	o.Name = &v
}

// GetOfferDetails returns the OfferDetails field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetOfferDetails() AwsMarketplaceCppoOpportunityOfferDetails {
	if o == nil || IsNil(o.OfferDetails) {
		var ret AwsMarketplaceCppoOpportunityOfferDetails
		return ret
	}
	return *o.OfferDetails
}

// GetOfferDetailsOk returns a tuple with the OfferDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetOfferDetailsOk() (*AwsMarketplaceCppoOpportunityOfferDetails, bool) {
	if o == nil || IsNil(o.OfferDetails) {
		return nil, false
	}
	return o.OfferDetails, true
}

// HasOfferDetails returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasOfferDetails() bool {
	if o != nil && !IsNil(o.OfferDetails) {
		return true
	}

	return false
}

// SetOfferDetails gets a reference to the given AwsMarketplaceCppoOpportunityOfferDetails and assigns it to the OfferDetails field.
func (o *AwsMarketplaceCppoOpportunity) SetOfferDetails(v AwsMarketplaceCppoOpportunityOfferDetails) {
	o.OfferDetails = &v
}

// GetPreExistingBuyerAgreement returns the PreExistingBuyerAgreement field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetPreExistingBuyerAgreement() AwsMarketplacePreExistingAgreement {
	if o == nil || IsNil(o.PreExistingBuyerAgreement) {
		var ret AwsMarketplacePreExistingAgreement
		return ret
	}
	return *o.PreExistingBuyerAgreement
}

// GetPreExistingBuyerAgreementOk returns a tuple with the PreExistingBuyerAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetPreExistingBuyerAgreementOk() (*AwsMarketplacePreExistingAgreement, bool) {
	if o == nil || IsNil(o.PreExistingBuyerAgreement) {
		return nil, false
	}
	return o.PreExistingBuyerAgreement, true
}

// HasPreExistingBuyerAgreement returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasPreExistingBuyerAgreement() bool {
	if o != nil && !IsNil(o.PreExistingBuyerAgreement) {
		return true
	}

	return false
}

// SetPreExistingBuyerAgreement gets a reference to the given AwsMarketplacePreExistingAgreement and assigns it to the PreExistingBuyerAgreement field.
func (o *AwsMarketplaceCppoOpportunity) SetPreExistingBuyerAgreement(v AwsMarketplacePreExistingAgreement) {
	o.PreExistingBuyerAgreement = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *AwsMarketplaceCppoOpportunity) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetProductName() string {
	if o == nil || IsNil(o.ProductName) {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *AwsMarketplaceCppoOpportunity) SetProductName(v string) {
	o.ProductName = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetRules() []AwsMarketplaceCppoOpportunityRule {
	if o == nil || IsNil(o.Rules) {
		var ret []AwsMarketplaceCppoOpportunityRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetRulesOk() ([]AwsMarketplaceCppoOpportunityRule, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []AwsMarketplaceCppoOpportunityRule and assigns it to the Rules field.
func (o *AwsMarketplaceCppoOpportunity) SetRules(v []AwsMarketplaceCppoOpportunityRule) {
	o.Rules = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AwsMarketplaceCppoOpportunity) SetStatus(v string) {
	o.Status = &v
}

// GetTerms returns the Terms field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetTerms() []AwsMarketplaceCppoOpportunityTerm {
	if o == nil || IsNil(o.Terms) {
		var ret []AwsMarketplaceCppoOpportunityTerm
		return ret
	}
	return o.Terms
}

// GetTermsOk returns a tuple with the Terms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetTermsOk() ([]AwsMarketplaceCppoOpportunityTerm, bool) {
	if o == nil || IsNil(o.Terms) {
		return nil, false
	}
	return o.Terms, true
}

// HasTerms returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasTerms() bool {
	if o != nil && !IsNil(o.Terms) {
		return true
	}

	return false
}

// SetTerms gets a reference to the given []AwsMarketplaceCppoOpportunityTerm and assigns it to the Terms field.
func (o *AwsMarketplaceCppoOpportunity) SetTerms(v []AwsMarketplaceCppoOpportunityTerm) {
	o.Terms = v
}

// GetDiscountType returns the DiscountType field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetDiscountType() AwsMarketplaceCppoDiscountType {
	if o == nil || IsNil(o.DiscountType) {
		var ret AwsMarketplaceCppoDiscountType
		return ret
	}
	return *o.DiscountType
}

// GetDiscountTypeOk returns a tuple with the DiscountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetDiscountTypeOk() (*AwsMarketplaceCppoDiscountType, bool) {
	if o == nil || IsNil(o.DiscountType) {
		return nil, false
	}
	return o.DiscountType, true
}

// HasDiscountType returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasDiscountType() bool {
	if o != nil && !IsNil(o.DiscountType) {
		return true
	}

	return false
}

// SetDiscountType gets a reference to the given AwsMarketplaceCppoDiscountType and assigns it to the DiscountType field.
func (o *AwsMarketplaceCppoOpportunity) SetDiscountType(v AwsMarketplaceCppoDiscountType) {
	o.DiscountType = &v
}

// GetOpportunityDurationType returns the OpportunityDurationType field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetOpportunityDurationType() AwsMarketplaceCppoDurationType {
	if o == nil || IsNil(o.OpportunityDurationType) {
		var ret AwsMarketplaceCppoDurationType
		return ret
	}
	return *o.OpportunityDurationType
}

// GetOpportunityDurationTypeOk returns a tuple with the OpportunityDurationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetOpportunityDurationTypeOk() (*AwsMarketplaceCppoDurationType, bool) {
	if o == nil || IsNil(o.OpportunityDurationType) {
		return nil, false
	}
	return o.OpportunityDurationType, true
}

// HasOpportunityDurationType returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasOpportunityDurationType() bool {
	if o != nil && !IsNil(o.OpportunityDurationType) {
		return true
	}

	return false
}

// SetOpportunityDurationType gets a reference to the given AwsMarketplaceCppoDurationType and assigns it to the OpportunityDurationType field.
func (o *AwsMarketplaceCppoOpportunity) SetOpportunityDurationType(v AwsMarketplaceCppoDurationType) {
	o.OpportunityDurationType = &v
}

// GetOpportunityId returns the OpportunityId field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetOpportunityId() string {
	if o == nil || IsNil(o.OpportunityId) {
		var ret string
		return ret
	}
	return *o.OpportunityId
}

// GetOpportunityIdOk returns a tuple with the OpportunityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetOpportunityIdOk() (*string, bool) {
	if o == nil || IsNil(o.OpportunityId) {
		return nil, false
	}
	return o.OpportunityId, true
}

// HasOpportunityId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasOpportunityId() bool {
	if o != nil && !IsNil(o.OpportunityId) {
		return true
	}

	return false
}

// SetOpportunityId gets a reference to the given string and assigns it to the OpportunityId field.
func (o *AwsMarketplaceCppoOpportunity) SetOpportunityId(v string) {
	o.OpportunityId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunity) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunity) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunity) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *AwsMarketplaceCppoOpportunity) SetPartnerId(v string) {
	o.PartnerId = &v
}

func (o AwsMarketplaceCppoOpportunity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoOpportunity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedDate) {
		toSerialize["CreatedDate"] = o.CreatedDate
	}
	if !IsNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !IsNil(o.Dimensions) {
		toSerialize["Dimensions"] = o.Dimensions
	}
	if !IsNil(o.ManufacturerAccountId) {
		toSerialize["ManufacturerAccountId"] = o.ManufacturerAccountId
	}
	if !IsNil(o.ManufacturerLegalName) {
		toSerialize["ManufacturerLegalName"] = o.ManufacturerLegalName
	}
	if !IsNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !IsNil(o.OfferDetails) {
		toSerialize["OfferDetails"] = o.OfferDetails
	}
	if !IsNil(o.PreExistingBuyerAgreement) {
		toSerialize["PreExistingBuyerAgreement"] = o.PreExistingBuyerAgreement
	}
	if !IsNil(o.ProductId) {
		toSerialize["ProductId"] = o.ProductId
	}
	if !IsNil(o.ProductName) {
		toSerialize["ProductName"] = o.ProductName
	}
	if !IsNil(o.Rules) {
		toSerialize["Rules"] = o.Rules
	}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.Terms) {
		toSerialize["Terms"] = o.Terms
	}
	if !IsNil(o.DiscountType) {
		toSerialize["discountType"] = o.DiscountType
	}
	if !IsNil(o.OpportunityDurationType) {
		toSerialize["opportunityDurationType"] = o.OpportunityDurationType
	}
	if !IsNil(o.OpportunityId) {
		toSerialize["opportunityId"] = o.OpportunityId
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partnerId"] = o.PartnerId
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoOpportunity struct {
	value *AwsMarketplaceCppoOpportunity
	isSet bool
}

func (v NullableAwsMarketplaceCppoOpportunity) Get() *AwsMarketplaceCppoOpportunity {
	return v.value
}

func (v *NullableAwsMarketplaceCppoOpportunity) Set(val *AwsMarketplaceCppoOpportunity) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoOpportunity) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoOpportunity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoOpportunity(val *AwsMarketplaceCppoOpportunity) *NullableAwsMarketplaceCppoOpportunity {
	return &NullableAwsMarketplaceCppoOpportunity{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoOpportunity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoOpportunity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
