/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BillableDimensionFeeDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillableDimensionFeeDetail{}

// BillableDimensionFeeDetail struct for BillableDimensionFeeDetail
type BillableDimensionFeeDetail struct {
	// Description of the pricing model that is used to show what the amount is for. like 'Bulk pricing: 0-100 units', 'Tiered pricing: 0-100 units'
	Descriptions *string `json:"descriptions,omitempty"`
	// FeeExpression is the expression used to calculate the fee that is used to show how the amount is calculated. like '211 Ã— $0.03'
	FeeExpressions *string `json:"feeExpressions,omitempty"`
}

// NewBillableDimensionFeeDetail instantiates a new BillableDimensionFeeDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillableDimensionFeeDetail() *BillableDimensionFeeDetail {
	this := BillableDimensionFeeDetail{}
	return &this
}

// NewBillableDimensionFeeDetailWithDefaults instantiates a new BillableDimensionFeeDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillableDimensionFeeDetailWithDefaults() *BillableDimensionFeeDetail {
	this := BillableDimensionFeeDetail{}
	return &this
}

// GetDescriptions returns the Descriptions field value if set, zero value otherwise.
func (o *BillableDimensionFeeDetail) GetDescriptions() string {
	if o == nil || IsNil(o.Descriptions) {
		var ret string
		return ret
	}
	return *o.Descriptions
}

// GetDescriptionsOk returns a tuple with the Descriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableDimensionFeeDetail) GetDescriptionsOk() (*string, bool) {
	if o == nil || IsNil(o.Descriptions) {
		return nil, false
	}
	return o.Descriptions, true
}

// HasDescriptions returns a boolean if a field has been set.
func (o *BillableDimensionFeeDetail) HasDescriptions() bool {
	if o != nil && !IsNil(o.Descriptions) {
		return true
	}

	return false
}

// SetDescriptions gets a reference to the given string and assigns it to the Descriptions field.
func (o *BillableDimensionFeeDetail) SetDescriptions(v string) {
	o.Descriptions = &v
}

// GetFeeExpressions returns the FeeExpressions field value if set, zero value otherwise.
func (o *BillableDimensionFeeDetail) GetFeeExpressions() string {
	if o == nil || IsNil(o.FeeExpressions) {
		var ret string
		return ret
	}
	return *o.FeeExpressions
}

// GetFeeExpressionsOk returns a tuple with the FeeExpressions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillableDimensionFeeDetail) GetFeeExpressionsOk() (*string, bool) {
	if o == nil || IsNil(o.FeeExpressions) {
		return nil, false
	}
	return o.FeeExpressions, true
}

// HasFeeExpressions returns a boolean if a field has been set.
func (o *BillableDimensionFeeDetail) HasFeeExpressions() bool {
	if o != nil && !IsNil(o.FeeExpressions) {
		return true
	}

	return false
}

// SetFeeExpressions gets a reference to the given string and assigns it to the FeeExpressions field.
func (o *BillableDimensionFeeDetail) SetFeeExpressions(v string) {
	o.FeeExpressions = &v
}

func (o BillableDimensionFeeDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillableDimensionFeeDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Descriptions) {
		toSerialize["descriptions"] = o.Descriptions
	}
	if !IsNil(o.FeeExpressions) {
		toSerialize["feeExpressions"] = o.FeeExpressions
	}
	return toSerialize, nil
}

type NullableBillableDimensionFeeDetail struct {
	value *BillableDimensionFeeDetail
	isSet bool
}

func (v NullableBillableDimensionFeeDetail) Get() *BillableDimensionFeeDetail {
	return v.value
}

func (v *NullableBillableDimensionFeeDetail) Set(val *BillableDimensionFeeDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBillableDimensionFeeDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBillableDimensionFeeDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillableDimensionFeeDetail(val *BillableDimensionFeeDetail) *NullableBillableDimensionFeeDetail {
	return &NullableBillableDimensionFeeDetail{value: val, isSet: true}
}

func (v NullableBillableDimensionFeeDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillableDimensionFeeDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
