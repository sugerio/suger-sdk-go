/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplaceProductUsageFee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceProductUsageFee{}

// GcpMarketplaceProductUsageFee struct for GcpMarketplaceProductUsageFee
type GcpMarketplaceProductUsageFee struct {
	// such as 1
	DisplayQuantity *int32 `json:"displayQuantity,omitempty"`
	// such as \"Starter_storage\"
	MetricId   *string        `json:"metricId,omitempty"`
	PriceTiers []GcpPriceTier `json:"priceTiers,omitempty"`
}

// NewGcpMarketplaceProductUsageFee instantiates a new GcpMarketplaceProductUsageFee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceProductUsageFee() *GcpMarketplaceProductUsageFee {
	this := GcpMarketplaceProductUsageFee{}
	return &this
}

// NewGcpMarketplaceProductUsageFeeWithDefaults instantiates a new GcpMarketplaceProductUsageFee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceProductUsageFeeWithDefaults() *GcpMarketplaceProductUsageFee {
	this := GcpMarketplaceProductUsageFee{}
	return &this
}

// GetDisplayQuantity returns the DisplayQuantity field value if set, zero value otherwise.
func (o *GcpMarketplaceProductUsageFee) GetDisplayQuantity() int32 {
	if o == nil || IsNil(o.DisplayQuantity) {
		var ret int32
		return ret
	}
	return *o.DisplayQuantity
}

// GetDisplayQuantityOk returns a tuple with the DisplayQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductUsageFee) GetDisplayQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayQuantity) {
		return nil, false
	}
	return o.DisplayQuantity, true
}

// HasDisplayQuantity returns a boolean if a field has been set.
func (o *GcpMarketplaceProductUsageFee) HasDisplayQuantity() bool {
	if o != nil && !IsNil(o.DisplayQuantity) {
		return true
	}

	return false
}

// SetDisplayQuantity gets a reference to the given int32 and assigns it to the DisplayQuantity field.
func (o *GcpMarketplaceProductUsageFee) SetDisplayQuantity(v int32) {
	o.DisplayQuantity = &v
}

// GetMetricId returns the MetricId field value if set, zero value otherwise.
func (o *GcpMarketplaceProductUsageFee) GetMetricId() string {
	if o == nil || IsNil(o.MetricId) {
		var ret string
		return ret
	}
	return *o.MetricId
}

// GetMetricIdOk returns a tuple with the MetricId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductUsageFee) GetMetricIdOk() (*string, bool) {
	if o == nil || IsNil(o.MetricId) {
		return nil, false
	}
	return o.MetricId, true
}

// HasMetricId returns a boolean if a field has been set.
func (o *GcpMarketplaceProductUsageFee) HasMetricId() bool {
	if o != nil && !IsNil(o.MetricId) {
		return true
	}

	return false
}

// SetMetricId gets a reference to the given string and assigns it to the MetricId field.
func (o *GcpMarketplaceProductUsageFee) SetMetricId(v string) {
	o.MetricId = &v
}

// GetPriceTiers returns the PriceTiers field value if set, zero value otherwise.
func (o *GcpMarketplaceProductUsageFee) GetPriceTiers() []GcpPriceTier {
	if o == nil || IsNil(o.PriceTiers) {
		var ret []GcpPriceTier
		return ret
	}
	return o.PriceTiers
}

// GetPriceTiersOk returns a tuple with the PriceTiers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceProductUsageFee) GetPriceTiersOk() ([]GcpPriceTier, bool) {
	if o == nil || IsNil(o.PriceTiers) {
		return nil, false
	}
	return o.PriceTiers, true
}

// HasPriceTiers returns a boolean if a field has been set.
func (o *GcpMarketplaceProductUsageFee) HasPriceTiers() bool {
	if o != nil && !IsNil(o.PriceTiers) {
		return true
	}

	return false
}

// SetPriceTiers gets a reference to the given []GcpPriceTier and assigns it to the PriceTiers field.
func (o *GcpMarketplaceProductUsageFee) SetPriceTiers(v []GcpPriceTier) {
	o.PriceTiers = v
}

func (o GcpMarketplaceProductUsageFee) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceProductUsageFee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisplayQuantity) {
		toSerialize["displayQuantity"] = o.DisplayQuantity
	}
	if !IsNil(o.MetricId) {
		toSerialize["metricId"] = o.MetricId
	}
	if !IsNil(o.PriceTiers) {
		toSerialize["priceTiers"] = o.PriceTiers
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceProductUsageFee struct {
	value *GcpMarketplaceProductUsageFee
	isSet bool
}

func (v NullableGcpMarketplaceProductUsageFee) Get() *GcpMarketplaceProductUsageFee {
	return v.value
}

func (v *NullableGcpMarketplaceProductUsageFee) Set(val *GcpMarketplaceProductUsageFee) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceProductUsageFee) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceProductUsageFee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceProductUsageFee(val *GcpMarketplaceProductUsageFee) *NullableGcpMarketplaceProductUsageFee {
	return &NullableGcpMarketplaceProductUsageFee{value: val, isSet: true}
}

func (v NullableGcpMarketplaceProductUsageFee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceProductUsageFee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
