/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralTrackingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralTrackingInfo{}

// MicrosoftPartnerReferralTrackingInfo struct for MicrosoftPartnerReferralTrackingInfo
type MicrosoftPartnerReferralTrackingInfo struct {
	MicrosoftMsxId map[string]interface{} `json:"microsoftMsxId,omitempty"`
	MicrosoftUSFedLeadId map[string]interface{} `json:"microsoftUSFedLeadId,omitempty"`
	MicrosoftUSFedopportunityId map[string]interface{} `json:"microsoftUSFedopportunityId,omitempty"`
	MigratedPSCDealId map[string]interface{} `json:"migratedPSCDealId,omitempty"`
	MigratedPSCPartnerDealId map[string]interface{} `json:"migratedPSCPartnerDealId,omitempty"`
}

// NewMicrosoftPartnerReferralTrackingInfo instantiates a new MicrosoftPartnerReferralTrackingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralTrackingInfo() *MicrosoftPartnerReferralTrackingInfo {
	this := MicrosoftPartnerReferralTrackingInfo{}
	return &this
}

// NewMicrosoftPartnerReferralTrackingInfoWithDefaults instantiates a new MicrosoftPartnerReferralTrackingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralTrackingInfoWithDefaults() *MicrosoftPartnerReferralTrackingInfo {
	this := MicrosoftPartnerReferralTrackingInfo{}
	return &this
}

// GetMicrosoftMsxId returns the MicrosoftMsxId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftMsxId() map[string]interface{} {
	if o == nil || IsNil(o.MicrosoftMsxId) {
		var ret map[string]interface{}
		return ret
	}
	return o.MicrosoftMsxId
}

// GetMicrosoftMsxIdOk returns a tuple with the MicrosoftMsxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftMsxIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MicrosoftMsxId) {
		return map[string]interface{}{}, false
	}
	return o.MicrosoftMsxId, true
}

// HasMicrosoftMsxId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) HasMicrosoftMsxId() bool {
	if o != nil && !IsNil(o.MicrosoftMsxId) {
		return true
	}

	return false
}

// SetMicrosoftMsxId gets a reference to the given map[string]interface{} and assigns it to the MicrosoftMsxId field.
func (o *MicrosoftPartnerReferralTrackingInfo) SetMicrosoftMsxId(v map[string]interface{}) {
	o.MicrosoftMsxId = v
}

// GetMicrosoftUSFedLeadId returns the MicrosoftUSFedLeadId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftUSFedLeadId() map[string]interface{} {
	if o == nil || IsNil(o.MicrosoftUSFedLeadId) {
		var ret map[string]interface{}
		return ret
	}
	return o.MicrosoftUSFedLeadId
}

// GetMicrosoftUSFedLeadIdOk returns a tuple with the MicrosoftUSFedLeadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftUSFedLeadIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MicrosoftUSFedLeadId) {
		return map[string]interface{}{}, false
	}
	return o.MicrosoftUSFedLeadId, true
}

// HasMicrosoftUSFedLeadId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) HasMicrosoftUSFedLeadId() bool {
	if o != nil && !IsNil(o.MicrosoftUSFedLeadId) {
		return true
	}

	return false
}

// SetMicrosoftUSFedLeadId gets a reference to the given map[string]interface{} and assigns it to the MicrosoftUSFedLeadId field.
func (o *MicrosoftPartnerReferralTrackingInfo) SetMicrosoftUSFedLeadId(v map[string]interface{}) {
	o.MicrosoftUSFedLeadId = v
}

// GetMicrosoftUSFedopportunityId returns the MicrosoftUSFedopportunityId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftUSFedopportunityId() map[string]interface{} {
	if o == nil || IsNil(o.MicrosoftUSFedopportunityId) {
		var ret map[string]interface{}
		return ret
	}
	return o.MicrosoftUSFedopportunityId
}

// GetMicrosoftUSFedopportunityIdOk returns a tuple with the MicrosoftUSFedopportunityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMicrosoftUSFedopportunityIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MicrosoftUSFedopportunityId) {
		return map[string]interface{}{}, false
	}
	return o.MicrosoftUSFedopportunityId, true
}

// HasMicrosoftUSFedopportunityId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) HasMicrosoftUSFedopportunityId() bool {
	if o != nil && !IsNil(o.MicrosoftUSFedopportunityId) {
		return true
	}

	return false
}

// SetMicrosoftUSFedopportunityId gets a reference to the given map[string]interface{} and assigns it to the MicrosoftUSFedopportunityId field.
func (o *MicrosoftPartnerReferralTrackingInfo) SetMicrosoftUSFedopportunityId(v map[string]interface{}) {
	o.MicrosoftUSFedopportunityId = v
}

// GetMigratedPSCDealId returns the MigratedPSCDealId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMigratedPSCDealId() map[string]interface{} {
	if o == nil || IsNil(o.MigratedPSCDealId) {
		var ret map[string]interface{}
		return ret
	}
	return o.MigratedPSCDealId
}

// GetMigratedPSCDealIdOk returns a tuple with the MigratedPSCDealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMigratedPSCDealIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MigratedPSCDealId) {
		return map[string]interface{}{}, false
	}
	return o.MigratedPSCDealId, true
}

// HasMigratedPSCDealId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) HasMigratedPSCDealId() bool {
	if o != nil && !IsNil(o.MigratedPSCDealId) {
		return true
	}

	return false
}

// SetMigratedPSCDealId gets a reference to the given map[string]interface{} and assigns it to the MigratedPSCDealId field.
func (o *MicrosoftPartnerReferralTrackingInfo) SetMigratedPSCDealId(v map[string]interface{}) {
	o.MigratedPSCDealId = v
}

// GetMigratedPSCPartnerDealId returns the MigratedPSCPartnerDealId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMigratedPSCPartnerDealId() map[string]interface{} {
	if o == nil || IsNil(o.MigratedPSCPartnerDealId) {
		var ret map[string]interface{}
		return ret
	}
	return o.MigratedPSCPartnerDealId
}

// GetMigratedPSCPartnerDealIdOk returns a tuple with the MigratedPSCPartnerDealId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) GetMigratedPSCPartnerDealIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.MigratedPSCPartnerDealId) {
		return map[string]interface{}{}, false
	}
	return o.MigratedPSCPartnerDealId, true
}

// HasMigratedPSCPartnerDealId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralTrackingInfo) HasMigratedPSCPartnerDealId() bool {
	if o != nil && !IsNil(o.MigratedPSCPartnerDealId) {
		return true
	}

	return false
}

// SetMigratedPSCPartnerDealId gets a reference to the given map[string]interface{} and assigns it to the MigratedPSCPartnerDealId field.
func (o *MicrosoftPartnerReferralTrackingInfo) SetMigratedPSCPartnerDealId(v map[string]interface{}) {
	o.MigratedPSCPartnerDealId = v
}

func (o MicrosoftPartnerReferralTrackingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralTrackingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MicrosoftMsxId) {
		toSerialize["microsoftMsxId"] = o.MicrosoftMsxId
	}
	if !IsNil(o.MicrosoftUSFedLeadId) {
		toSerialize["microsoftUSFedLeadId"] = o.MicrosoftUSFedLeadId
	}
	if !IsNil(o.MicrosoftUSFedopportunityId) {
		toSerialize["microsoftUSFedopportunityId"] = o.MicrosoftUSFedopportunityId
	}
	if !IsNil(o.MigratedPSCDealId) {
		toSerialize["migratedPSCDealId"] = o.MigratedPSCDealId
	}
	if !IsNil(o.MigratedPSCPartnerDealId) {
		toSerialize["migratedPSCPartnerDealId"] = o.MigratedPSCPartnerDealId
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralTrackingInfo struct {
	value *MicrosoftPartnerReferralTrackingInfo
	isSet bool
}

func (v NullableMicrosoftPartnerReferralTrackingInfo) Get() *MicrosoftPartnerReferralTrackingInfo {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralTrackingInfo) Set(val *MicrosoftPartnerReferralTrackingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralTrackingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralTrackingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralTrackingInfo(val *MicrosoftPartnerReferralTrackingInfo) *NullableMicrosoftPartnerReferralTrackingInfo {
	return &NullableMicrosoftPartnerReferralTrackingInfo{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralTrackingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralTrackingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


