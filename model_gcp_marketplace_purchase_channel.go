/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpMarketplacePurchaseChannel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplacePurchaseChannel{}

// GcpMarketplacePurchaseChannel struct for GcpMarketplacePurchaseChannel
type GcpMarketplacePurchaseChannel struct {
	Marketplace *bool `json:"marketplace,omitempty"`
	Reseller    *bool `json:"reseller,omitempty"`
}

// NewGcpMarketplacePurchaseChannel instantiates a new GcpMarketplacePurchaseChannel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplacePurchaseChannel() *GcpMarketplacePurchaseChannel {
	this := GcpMarketplacePurchaseChannel{}
	return &this
}

// NewGcpMarketplacePurchaseChannelWithDefaults instantiates a new GcpMarketplacePurchaseChannel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplacePurchaseChannelWithDefaults() *GcpMarketplacePurchaseChannel {
	this := GcpMarketplacePurchaseChannel{}
	return &this
}

// GetMarketplace returns the Marketplace field value if set, zero value otherwise.
func (o *GcpMarketplacePurchaseChannel) GetMarketplace() bool {
	if o == nil || IsNil(o.Marketplace) {
		var ret bool
		return ret
	}
	return *o.Marketplace
}

// GetMarketplaceOk returns a tuple with the Marketplace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePurchaseChannel) GetMarketplaceOk() (*bool, bool) {
	if o == nil || IsNil(o.Marketplace) {
		return nil, false
	}
	return o.Marketplace, true
}

// HasMarketplace returns a boolean if a field has been set.
func (o *GcpMarketplacePurchaseChannel) HasMarketplace() bool {
	if o != nil && !IsNil(o.Marketplace) {
		return true
	}

	return false
}

// SetMarketplace gets a reference to the given bool and assigns it to the Marketplace field.
func (o *GcpMarketplacePurchaseChannel) SetMarketplace(v bool) {
	o.Marketplace = &v
}

// GetReseller returns the Reseller field value if set, zero value otherwise.
func (o *GcpMarketplacePurchaseChannel) GetReseller() bool {
	if o == nil || IsNil(o.Reseller) {
		var ret bool
		return ret
	}
	return *o.Reseller
}

// GetResellerOk returns a tuple with the Reseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplacePurchaseChannel) GetResellerOk() (*bool, bool) {
	if o == nil || IsNil(o.Reseller) {
		return nil, false
	}
	return o.Reseller, true
}

// HasReseller returns a boolean if a field has been set.
func (o *GcpMarketplacePurchaseChannel) HasReseller() bool {
	if o != nil && !IsNil(o.Reseller) {
		return true
	}

	return false
}

// SetReseller gets a reference to the given bool and assigns it to the Reseller field.
func (o *GcpMarketplacePurchaseChannel) SetReseller(v bool) {
	o.Reseller = &v
}

func (o GcpMarketplacePurchaseChannel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplacePurchaseChannel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Marketplace) {
		toSerialize["marketplace"] = o.Marketplace
	}
	if !IsNil(o.Reseller) {
		toSerialize["reseller"] = o.Reseller
	}
	return toSerialize, nil
}

type NullableGcpMarketplacePurchaseChannel struct {
	value *GcpMarketplacePurchaseChannel
	isSet bool
}

func (v NullableGcpMarketplacePurchaseChannel) Get() *GcpMarketplacePurchaseChannel {
	return v.value
}

func (v *NullableGcpMarketplacePurchaseChannel) Set(val *GcpMarketplacePurchaseChannel) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplacePurchaseChannel) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplacePurchaseChannel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplacePurchaseChannel(val *GcpMarketplacePurchaseChannel) *NullableGcpMarketplacePurchaseChannel {
	return &NullableGcpMarketplacePurchaseChannel{value: val, isSet: true}
}

func (v NullableGcpMarketplacePurchaseChannel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplacePurchaseChannel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
