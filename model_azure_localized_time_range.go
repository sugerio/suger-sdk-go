/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureLocalizedTimeRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureLocalizedTimeRange{}

// AzureLocalizedTimeRange struct for AzureLocalizedTimeRange
type AzureLocalizedTimeRange struct {
	EndAt   *AzureLocalizedDateTime `json:"endAt,omitempty"`
	StartAt *AzureLocalizedDateTime `json:"startAt,omitempty"`
}

// NewAzureLocalizedTimeRange instantiates a new AzureLocalizedTimeRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureLocalizedTimeRange() *AzureLocalizedTimeRange {
	this := AzureLocalizedTimeRange{}
	return &this
}

// NewAzureLocalizedTimeRangeWithDefaults instantiates a new AzureLocalizedTimeRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureLocalizedTimeRangeWithDefaults() *AzureLocalizedTimeRange {
	this := AzureLocalizedTimeRange{}
	return &this
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *AzureLocalizedTimeRange) GetEndAt() AzureLocalizedDateTime {
	if o == nil || IsNil(o.EndAt) {
		var ret AzureLocalizedDateTime
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLocalizedTimeRange) GetEndAtOk() (*AzureLocalizedDateTime, bool) {
	if o == nil || IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *AzureLocalizedTimeRange) HasEndAt() bool {
	if o != nil && !IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given AzureLocalizedDateTime and assigns it to the EndAt field.
func (o *AzureLocalizedTimeRange) SetEndAt(v AzureLocalizedDateTime) {
	o.EndAt = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *AzureLocalizedTimeRange) GetStartAt() AzureLocalizedDateTime {
	if o == nil || IsNil(o.StartAt) {
		var ret AzureLocalizedDateTime
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureLocalizedTimeRange) GetStartAtOk() (*AzureLocalizedDateTime, bool) {
	if o == nil || IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *AzureLocalizedTimeRange) HasStartAt() bool {
	if o != nil && !IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given AzureLocalizedDateTime and assigns it to the StartAt field.
func (o *AzureLocalizedTimeRange) SetStartAt(v AzureLocalizedDateTime) {
	o.StartAt = &v
}

func (o AzureLocalizedTimeRange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureLocalizedTimeRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndAt) {
		toSerialize["endAt"] = o.EndAt
	}
	if !IsNil(o.StartAt) {
		toSerialize["startAt"] = o.StartAt
	}
	return toSerialize, nil
}

type NullableAzureLocalizedTimeRange struct {
	value *AzureLocalizedTimeRange
	isSet bool
}

func (v NullableAzureLocalizedTimeRange) Get() *AzureLocalizedTimeRange {
	return v.value
}

func (v *NullableAzureLocalizedTimeRange) Set(val *AzureLocalizedTimeRange) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureLocalizedTimeRange) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureLocalizedTimeRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureLocalizedTimeRange(val *AzureLocalizedTimeRange) *NullableAzureLocalizedTimeRange {
	return &NullableAzureLocalizedTimeRange{value: val, isSet: true}
}

func (v NullableAzureLocalizedTimeRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureLocalizedTimeRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
