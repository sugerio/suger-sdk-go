/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralRequirements type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralRequirements{}

// MicrosoftPartnerReferralRequirements struct for MicrosoftPartnerReferralRequirements
type MicrosoftPartnerReferralRequirements struct {
	AdditionalRequirements *MicrosoftPartnerReferralAdditionalRequirements `json:"additionalRequirements,omitempty"`
	Industries             []MicrosoftPartnerReferralTag                   `json:"industries,omitempty"`
	Offers                 []MicrosoftPartnerReferralTag                   `json:"offers,omitempty"`
	Products               []MicrosoftPartnerReferralTag                   `json:"products,omitempty"`
	SalesPlays             []MicrosoftPartnerReferralTag                   `json:"salesPlays,omitempty"`
	Services               []MicrosoftPartnerReferralTag                   `json:"services,omitempty"`
	Solutions              []MicrosoftPartnerReferralSolution              `json:"solutions,omitempty"`
}

// NewMicrosoftPartnerReferralRequirements instantiates a new MicrosoftPartnerReferralRequirements object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralRequirements() *MicrosoftPartnerReferralRequirements {
	this := MicrosoftPartnerReferralRequirements{}
	return &this
}

// NewMicrosoftPartnerReferralRequirementsWithDefaults instantiates a new MicrosoftPartnerReferralRequirements object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralRequirementsWithDefaults() *MicrosoftPartnerReferralRequirements {
	this := MicrosoftPartnerReferralRequirements{}
	return &this
}

// GetAdditionalRequirements returns the AdditionalRequirements field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetAdditionalRequirements() MicrosoftPartnerReferralAdditionalRequirements {
	if o == nil || IsNil(o.AdditionalRequirements) {
		var ret MicrosoftPartnerReferralAdditionalRequirements
		return ret
	}
	return *o.AdditionalRequirements
}

// GetAdditionalRequirementsOk returns a tuple with the AdditionalRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetAdditionalRequirementsOk() (*MicrosoftPartnerReferralAdditionalRequirements, bool) {
	if o == nil || IsNil(o.AdditionalRequirements) {
		return nil, false
	}
	return o.AdditionalRequirements, true
}

// HasAdditionalRequirements returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasAdditionalRequirements() bool {
	if o != nil && !IsNil(o.AdditionalRequirements) {
		return true
	}

	return false
}

// SetAdditionalRequirements gets a reference to the given MicrosoftPartnerReferralAdditionalRequirements and assigns it to the AdditionalRequirements field.
func (o *MicrosoftPartnerReferralRequirements) SetAdditionalRequirements(v MicrosoftPartnerReferralAdditionalRequirements) {
	o.AdditionalRequirements = &v
}

// GetIndustries returns the Industries field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetIndustries() []MicrosoftPartnerReferralTag {
	if o == nil || IsNil(o.Industries) {
		var ret []MicrosoftPartnerReferralTag
		return ret
	}
	return o.Industries
}

// GetIndustriesOk returns a tuple with the Industries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetIndustriesOk() ([]MicrosoftPartnerReferralTag, bool) {
	if o == nil || IsNil(o.Industries) {
		return nil, false
	}
	return o.Industries, true
}

// HasIndustries returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasIndustries() bool {
	if o != nil && !IsNil(o.Industries) {
		return true
	}

	return false
}

// SetIndustries gets a reference to the given []MicrosoftPartnerReferralTag and assigns it to the Industries field.
func (o *MicrosoftPartnerReferralRequirements) SetIndustries(v []MicrosoftPartnerReferralTag) {
	o.Industries = v
}

// GetOffers returns the Offers field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetOffers() []MicrosoftPartnerReferralTag {
	if o == nil || IsNil(o.Offers) {
		var ret []MicrosoftPartnerReferralTag
		return ret
	}
	return o.Offers
}

// GetOffersOk returns a tuple with the Offers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetOffersOk() ([]MicrosoftPartnerReferralTag, bool) {
	if o == nil || IsNil(o.Offers) {
		return nil, false
	}
	return o.Offers, true
}

// HasOffers returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasOffers() bool {
	if o != nil && !IsNil(o.Offers) {
		return true
	}

	return false
}

// SetOffers gets a reference to the given []MicrosoftPartnerReferralTag and assigns it to the Offers field.
func (o *MicrosoftPartnerReferralRequirements) SetOffers(v []MicrosoftPartnerReferralTag) {
	o.Offers = v
}

// GetProducts returns the Products field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetProducts() []MicrosoftPartnerReferralTag {
	if o == nil || IsNil(o.Products) {
		var ret []MicrosoftPartnerReferralTag
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetProductsOk() ([]MicrosoftPartnerReferralTag, bool) {
	if o == nil || IsNil(o.Products) {
		return nil, false
	}
	return o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasProducts() bool {
	if o != nil && !IsNil(o.Products) {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []MicrosoftPartnerReferralTag and assigns it to the Products field.
func (o *MicrosoftPartnerReferralRequirements) SetProducts(v []MicrosoftPartnerReferralTag) {
	o.Products = v
}

// GetSalesPlays returns the SalesPlays field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetSalesPlays() []MicrosoftPartnerReferralTag {
	if o == nil || IsNil(o.SalesPlays) {
		var ret []MicrosoftPartnerReferralTag
		return ret
	}
	return o.SalesPlays
}

// GetSalesPlaysOk returns a tuple with the SalesPlays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetSalesPlaysOk() ([]MicrosoftPartnerReferralTag, bool) {
	if o == nil || IsNil(o.SalesPlays) {
		return nil, false
	}
	return o.SalesPlays, true
}

// HasSalesPlays returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasSalesPlays() bool {
	if o != nil && !IsNil(o.SalesPlays) {
		return true
	}

	return false
}

// SetSalesPlays gets a reference to the given []MicrosoftPartnerReferralTag and assigns it to the SalesPlays field.
func (o *MicrosoftPartnerReferralRequirements) SetSalesPlays(v []MicrosoftPartnerReferralTag) {
	o.SalesPlays = v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetServices() []MicrosoftPartnerReferralTag {
	if o == nil || IsNil(o.Services) {
		var ret []MicrosoftPartnerReferralTag
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetServicesOk() ([]MicrosoftPartnerReferralTag, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []MicrosoftPartnerReferralTag and assigns it to the Services field.
func (o *MicrosoftPartnerReferralRequirements) SetServices(v []MicrosoftPartnerReferralTag) {
	o.Services = v
}

// GetSolutions returns the Solutions field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralRequirements) GetSolutions() []MicrosoftPartnerReferralSolution {
	if o == nil || IsNil(o.Solutions) {
		var ret []MicrosoftPartnerReferralSolution
		return ret
	}
	return o.Solutions
}

// GetSolutionsOk returns a tuple with the Solutions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralRequirements) GetSolutionsOk() ([]MicrosoftPartnerReferralSolution, bool) {
	if o == nil || IsNil(o.Solutions) {
		return nil, false
	}
	return o.Solutions, true
}

// HasSolutions returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralRequirements) HasSolutions() bool {
	if o != nil && !IsNil(o.Solutions) {
		return true
	}

	return false
}

// SetSolutions gets a reference to the given []MicrosoftPartnerReferralSolution and assigns it to the Solutions field.
func (o *MicrosoftPartnerReferralRequirements) SetSolutions(v []MicrosoftPartnerReferralSolution) {
	o.Solutions = v
}

func (o MicrosoftPartnerReferralRequirements) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralRequirements) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalRequirements) {
		toSerialize["additionalRequirements"] = o.AdditionalRequirements
	}
	if !IsNil(o.Industries) {
		toSerialize["industries"] = o.Industries
	}
	if !IsNil(o.Offers) {
		toSerialize["offers"] = o.Offers
	}
	if !IsNil(o.Products) {
		toSerialize["products"] = o.Products
	}
	if !IsNil(o.SalesPlays) {
		toSerialize["salesPlays"] = o.SalesPlays
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !IsNil(o.Solutions) {
		toSerialize["solutions"] = o.Solutions
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralRequirements struct {
	value *MicrosoftPartnerReferralRequirements
	isSet bool
}

func (v NullableMicrosoftPartnerReferralRequirements) Get() *MicrosoftPartnerReferralRequirements {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralRequirements) Set(val *MicrosoftPartnerReferralRequirements) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralRequirements) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralRequirements) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralRequirements(val *MicrosoftPartnerReferralRequirements) *NullableMicrosoftPartnerReferralRequirements {
	return &NullableMicrosoftPartnerReferralRequirements{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralRequirements) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralRequirements) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
