/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the GcpCommitmentAmountPerPeriodTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpCommitmentAmountPerPeriodTemplate{}

// GcpCommitmentAmountPerPeriodTemplate struct for GcpCommitmentAmountPerPeriodTemplate
type GcpCommitmentAmountPerPeriodTemplate struct {
	CurrencyCode            *string              `json:"currencyCode,omitempty"`
	DecimalAmountConstraint *GcpAmountConstraint `json:"decimalAmountConstraint,omitempty"`
}

// NewGcpCommitmentAmountPerPeriodTemplate instantiates a new GcpCommitmentAmountPerPeriodTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpCommitmentAmountPerPeriodTemplate() *GcpCommitmentAmountPerPeriodTemplate {
	this := GcpCommitmentAmountPerPeriodTemplate{}
	return &this
}

// NewGcpCommitmentAmountPerPeriodTemplateWithDefaults instantiates a new GcpCommitmentAmountPerPeriodTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpCommitmentAmountPerPeriodTemplateWithDefaults() *GcpCommitmentAmountPerPeriodTemplate {
	this := GcpCommitmentAmountPerPeriodTemplate{}
	return &this
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *GcpCommitmentAmountPerPeriodTemplate) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpCommitmentAmountPerPeriodTemplate) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *GcpCommitmentAmountPerPeriodTemplate) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *GcpCommitmentAmountPerPeriodTemplate) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetDecimalAmountConstraint returns the DecimalAmountConstraint field value if set, zero value otherwise.
func (o *GcpCommitmentAmountPerPeriodTemplate) GetDecimalAmountConstraint() GcpAmountConstraint {
	if o == nil || IsNil(o.DecimalAmountConstraint) {
		var ret GcpAmountConstraint
		return ret
	}
	return *o.DecimalAmountConstraint
}

// GetDecimalAmountConstraintOk returns a tuple with the DecimalAmountConstraint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpCommitmentAmountPerPeriodTemplate) GetDecimalAmountConstraintOk() (*GcpAmountConstraint, bool) {
	if o == nil || IsNil(o.DecimalAmountConstraint) {
		return nil, false
	}
	return o.DecimalAmountConstraint, true
}

// HasDecimalAmountConstraint returns a boolean if a field has been set.
func (o *GcpCommitmentAmountPerPeriodTemplate) HasDecimalAmountConstraint() bool {
	if o != nil && !IsNil(o.DecimalAmountConstraint) {
		return true
	}

	return false
}

// SetDecimalAmountConstraint gets a reference to the given GcpAmountConstraint and assigns it to the DecimalAmountConstraint field.
func (o *GcpCommitmentAmountPerPeriodTemplate) SetDecimalAmountConstraint(v GcpAmountConstraint) {
	o.DecimalAmountConstraint = &v
}

func (o GcpCommitmentAmountPerPeriodTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpCommitmentAmountPerPeriodTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.DecimalAmountConstraint) {
		toSerialize["decimalAmountConstraint"] = o.DecimalAmountConstraint
	}
	return toSerialize, nil
}

type NullableGcpCommitmentAmountPerPeriodTemplate struct {
	value *GcpCommitmentAmountPerPeriodTemplate
	isSet bool
}

func (v NullableGcpCommitmentAmountPerPeriodTemplate) Get() *GcpCommitmentAmountPerPeriodTemplate {
	return v.value
}

func (v *NullableGcpCommitmentAmountPerPeriodTemplate) Set(val *GcpCommitmentAmountPerPeriodTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpCommitmentAmountPerPeriodTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpCommitmentAmountPerPeriodTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpCommitmentAmountPerPeriodTemplate(val *GcpCommitmentAmountPerPeriodTemplate) *NullableGcpCommitmentAmountPerPeriodTemplate {
	return &NullableGcpCommitmentAmountPerPeriodTemplate{value: val, isSet: true}
}

func (v NullableGcpCommitmentAmountPerPeriodTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpCommitmentAmountPerPeriodTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
