/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StripePaymentMethodBACSDebit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StripePaymentMethodBACSDebit{}

// StripePaymentMethodBACSDebit struct for StripePaymentMethodBACSDebit
type StripePaymentMethodBACSDebit struct {
	// Uniquely identifies this particular bank account. You can use this attribute to check whether two bank accounts are the same.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Last four digits of the bank account number.
	Last4 *string `json:"last4,omitempty"`
	// Sort code of the bank account. (e.g., `10-20-30`)
	SortCode *string `json:"sort_code,omitempty"`
}

// NewStripePaymentMethodBACSDebit instantiates a new StripePaymentMethodBACSDebit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripePaymentMethodBACSDebit() *StripePaymentMethodBACSDebit {
	this := StripePaymentMethodBACSDebit{}
	return &this
}

// NewStripePaymentMethodBACSDebitWithDefaults instantiates a new StripePaymentMethodBACSDebit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripePaymentMethodBACSDebitWithDefaults() *StripePaymentMethodBACSDebit {
	this := StripePaymentMethodBACSDebit{}
	return &this
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *StripePaymentMethodBACSDebit) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentMethodBACSDebit) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *StripePaymentMethodBACSDebit) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *StripePaymentMethodBACSDebit) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetLast4 returns the Last4 field value if set, zero value otherwise.
func (o *StripePaymentMethodBACSDebit) GetLast4() string {
	if o == nil || IsNil(o.Last4) {
		var ret string
		return ret
	}
	return *o.Last4
}

// GetLast4Ok returns a tuple with the Last4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentMethodBACSDebit) GetLast4Ok() (*string, bool) {
	if o == nil || IsNil(o.Last4) {
		return nil, false
	}
	return o.Last4, true
}

// HasLast4 returns a boolean if a field has been set.
func (o *StripePaymentMethodBACSDebit) HasLast4() bool {
	if o != nil && !IsNil(o.Last4) {
		return true
	}

	return false
}

// SetLast4 gets a reference to the given string and assigns it to the Last4 field.
func (o *StripePaymentMethodBACSDebit) SetLast4(v string) {
	o.Last4 = &v
}

// GetSortCode returns the SortCode field value if set, zero value otherwise.
func (o *StripePaymentMethodBACSDebit) GetSortCode() string {
	if o == nil || IsNil(o.SortCode) {
		var ret string
		return ret
	}
	return *o.SortCode
}

// GetSortCodeOk returns a tuple with the SortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StripePaymentMethodBACSDebit) GetSortCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SortCode) {
		return nil, false
	}
	return o.SortCode, true
}

// HasSortCode returns a boolean if a field has been set.
func (o *StripePaymentMethodBACSDebit) HasSortCode() bool {
	if o != nil && !IsNil(o.SortCode) {
		return true
	}

	return false
}

// SetSortCode gets a reference to the given string and assigns it to the SortCode field.
func (o *StripePaymentMethodBACSDebit) SetSortCode(v string) {
	o.SortCode = &v
}

func (o StripePaymentMethodBACSDebit) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StripePaymentMethodBACSDebit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !IsNil(o.Last4) {
		toSerialize["last4"] = o.Last4
	}
	if !IsNil(o.SortCode) {
		toSerialize["sort_code"] = o.SortCode
	}
	return toSerialize, nil
}

type NullableStripePaymentMethodBACSDebit struct {
	value *StripePaymentMethodBACSDebit
	isSet bool
}

func (v NullableStripePaymentMethodBACSDebit) Get() *StripePaymentMethodBACSDebit {
	return v.value
}

func (v *NullableStripePaymentMethodBACSDebit) Set(val *StripePaymentMethodBACSDebit) {
	v.value = val
	v.isSet = true
}

func (v NullableStripePaymentMethodBACSDebit) IsSet() bool {
	return v.isSet
}

func (v *NullableStripePaymentMethodBACSDebit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripePaymentMethodBACSDebit(val *StripePaymentMethodBACSDebit) *NullableStripePaymentMethodBACSDebit {
	return &NullableStripePaymentMethodBACSDebit{value: val, isSet: true}
}

func (v NullableStripePaymentMethodBACSDebit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripePaymentMethodBACSDebit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
