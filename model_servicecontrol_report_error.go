/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ServicecontrolReportError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServicecontrolReportError{}

// ServicecontrolReportError struct for ServicecontrolReportError
type ServicecontrolReportError struct {
	// OperationId: The Operation.operation_id value from the request.
	OperationId *string `json:"operationId,omitempty"`
	Status *ServicecontrolStatus `json:"status,omitempty"`
}

// NewServicecontrolReportError instantiates a new ServicecontrolReportError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServicecontrolReportError() *ServicecontrolReportError {
	this := ServicecontrolReportError{}
	return &this
}

// NewServicecontrolReportErrorWithDefaults instantiates a new ServicecontrolReportError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServicecontrolReportErrorWithDefaults() *ServicecontrolReportError {
	this := ServicecontrolReportError{}
	return &this
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *ServicecontrolReportError) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicecontrolReportError) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *ServicecontrolReportError) HasOperationId() bool {
	if o != nil && !IsNil(o.OperationId) {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *ServicecontrolReportError) SetOperationId(v string) {
	o.OperationId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServicecontrolReportError) GetStatus() ServicecontrolStatus {
	if o == nil || IsNil(o.Status) {
		var ret ServicecontrolStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServicecontrolReportError) GetStatusOk() (*ServicecontrolStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServicecontrolReportError) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServicecontrolStatus and assigns it to the Status field.
func (o *ServicecontrolReportError) SetStatus(v ServicecontrolStatus) {
	o.Status = &v
}

func (o ServicecontrolReportError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServicecontrolReportError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperationId) {
		toSerialize["operationId"] = o.OperationId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableServicecontrolReportError struct {
	value *ServicecontrolReportError
	isSet bool
}

func (v NullableServicecontrolReportError) Get() *ServicecontrolReportError {
	return v.value
}

func (v *NullableServicecontrolReportError) Set(val *ServicecontrolReportError) {
	v.value = val
	v.isSet = true
}

func (v NullableServicecontrolReportError) IsSet() bool {
	return v.isSet
}

func (v *NullableServicecontrolReportError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServicecontrolReportError(val *ServicecontrolReportError) *NullableServicecontrolReportError {
	return &NullableServicecontrolReportError{value: val, isSet: true}
}

func (v NullableServicecontrolReportError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServicecontrolReportError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


