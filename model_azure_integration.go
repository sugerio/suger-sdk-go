/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AzureIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureIntegration{}

// AzureIntegration struct for AzureIntegration
type AzureIntegration struct {
	// Is Azure Commercial Marketplace Analytics (CMA) full-sync done.
	CmaFullSyncDone *bool                       `json:"cmaFullSyncDone,omitempty"`
	Credential      *AzureIntegrationCredential `json:"credential,omitempty"`
	// Is Microsoft Partner Center referral sync paused.
	PartnerCenterReferralSyncPaused *bool `json:"partnerCenterReferralSyncPaused,omitempty"`
	// Is AZURE Marketplace Revenue Record full-sync done.
	RevenueRecordFullSyncDone *bool `json:"revenueRecordFullSyncDone,omitempty"`
	// The secret key used to store the AzureIntegrationCredential in AWS Secret manager. for internal usage only.
	SecretKey *string `json:"secretKey,omitempty"`
}

// NewAzureIntegration instantiates a new AzureIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureIntegration() *AzureIntegration {
	this := AzureIntegration{}
	return &this
}

// NewAzureIntegrationWithDefaults instantiates a new AzureIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureIntegrationWithDefaults() *AzureIntegration {
	this := AzureIntegration{}
	return &this
}

// GetCmaFullSyncDone returns the CmaFullSyncDone field value if set, zero value otherwise.
func (o *AzureIntegration) GetCmaFullSyncDone() bool {
	if o == nil || IsNil(o.CmaFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.CmaFullSyncDone
}

// GetCmaFullSyncDoneOk returns a tuple with the CmaFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureIntegration) GetCmaFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.CmaFullSyncDone) {
		return nil, false
	}
	return o.CmaFullSyncDone, true
}

// HasCmaFullSyncDone returns a boolean if a field has been set.
func (o *AzureIntegration) HasCmaFullSyncDone() bool {
	if o != nil && !IsNil(o.CmaFullSyncDone) {
		return true
	}

	return false
}

// SetCmaFullSyncDone gets a reference to the given bool and assigns it to the CmaFullSyncDone field.
func (o *AzureIntegration) SetCmaFullSyncDone(v bool) {
	o.CmaFullSyncDone = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *AzureIntegration) GetCredential() AzureIntegrationCredential {
	if o == nil || IsNil(o.Credential) {
		var ret AzureIntegrationCredential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureIntegration) GetCredentialOk() (*AzureIntegrationCredential, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *AzureIntegration) HasCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given AzureIntegrationCredential and assigns it to the Credential field.
func (o *AzureIntegration) SetCredential(v AzureIntegrationCredential) {
	o.Credential = &v
}

// GetPartnerCenterReferralSyncPaused returns the PartnerCenterReferralSyncPaused field value if set, zero value otherwise.
func (o *AzureIntegration) GetPartnerCenterReferralSyncPaused() bool {
	if o == nil || IsNil(o.PartnerCenterReferralSyncPaused) {
		var ret bool
		return ret
	}
	return *o.PartnerCenterReferralSyncPaused
}

// GetPartnerCenterReferralSyncPausedOk returns a tuple with the PartnerCenterReferralSyncPaused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureIntegration) GetPartnerCenterReferralSyncPausedOk() (*bool, bool) {
	if o == nil || IsNil(o.PartnerCenterReferralSyncPaused) {
		return nil, false
	}
	return o.PartnerCenterReferralSyncPaused, true
}

// HasPartnerCenterReferralSyncPaused returns a boolean if a field has been set.
func (o *AzureIntegration) HasPartnerCenterReferralSyncPaused() bool {
	if o != nil && !IsNil(o.PartnerCenterReferralSyncPaused) {
		return true
	}

	return false
}

// SetPartnerCenterReferralSyncPaused gets a reference to the given bool and assigns it to the PartnerCenterReferralSyncPaused field.
func (o *AzureIntegration) SetPartnerCenterReferralSyncPaused(v bool) {
	o.PartnerCenterReferralSyncPaused = &v
}

// GetRevenueRecordFullSyncDone returns the RevenueRecordFullSyncDone field value if set, zero value otherwise.
func (o *AzureIntegration) GetRevenueRecordFullSyncDone() bool {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.RevenueRecordFullSyncDone
}

// GetRevenueRecordFullSyncDoneOk returns a tuple with the RevenueRecordFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureIntegration) GetRevenueRecordFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		return nil, false
	}
	return o.RevenueRecordFullSyncDone, true
}

// HasRevenueRecordFullSyncDone returns a boolean if a field has been set.
func (o *AzureIntegration) HasRevenueRecordFullSyncDone() bool {
	if o != nil && !IsNil(o.RevenueRecordFullSyncDone) {
		return true
	}

	return false
}

// SetRevenueRecordFullSyncDone gets a reference to the given bool and assigns it to the RevenueRecordFullSyncDone field.
func (o *AzureIntegration) SetRevenueRecordFullSyncDone(v bool) {
	o.RevenueRecordFullSyncDone = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *AzureIntegration) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureIntegration) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *AzureIntegration) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *AzureIntegration) SetSecretKey(v string) {
	o.SecretKey = &v
}

func (o AzureIntegration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CmaFullSyncDone) {
		toSerialize["cmaFullSyncDone"] = o.CmaFullSyncDone
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.PartnerCenterReferralSyncPaused) {
		toSerialize["partnerCenterReferralSyncPaused"] = o.PartnerCenterReferralSyncPaused
	}
	if !IsNil(o.RevenueRecordFullSyncDone) {
		toSerialize["revenueRecordFullSyncDone"] = o.RevenueRecordFullSyncDone
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	return toSerialize, nil
}

type NullableAzureIntegration struct {
	value *AzureIntegration
	isSet bool
}

func (v NullableAzureIntegration) Get() *AzureIntegration {
	return v.value
}

func (v *NullableAzureIntegration) Set(val *AzureIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureIntegration(val *AzureIntegration) *NullableAzureIntegration {
	return &NullableAzureIntegration{value: val, isSet: true}
}

func (v NullableAzureIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
