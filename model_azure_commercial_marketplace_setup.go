/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzureCommercialMarketplaceSetup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureCommercialMarketplaceSetup{}

// AzureCommercialMarketplaceSetup struct for AzureCommercialMarketplaceSetup
type AzureCommercialMarketplaceSetup struct {
	Schema *string `json:"$schema,omitempty"`
	// in patern of \"^(http|https)://\"
	AccessUrl    *string `json:"accessUrl,omitempty"`
	CallToAction *string `json:"callToAction,omitempty"`
	// In format of \"commercial-marketplace-setup/setup-durable-id\"
	Id *string `json:"id,omitempty"`
	// Product resource name, in format of \"product/product-durable-id\"
	Product                  *string `json:"product,omitempty"`
	RequireLicenseForInstall *bool   `json:"requireLicenseForInstall,omitempty"`
	ResourceName             *string `json:"resourceName,omitempty"`
	SellThroughMicrosoft     *bool   `json:"sellThroughMicrosoft,omitempty"`
	// If true, only per_user pricing model is allowed.
	UseMicrosoftLicenseManagementService *bool                        `json:"useMicrosoftLicenseManagementService,omitempty"`
	Validations                          []AzureMarketplaceValidation `json:"validations,omitempty"`
}

// NewAzureCommercialMarketplaceSetup instantiates a new AzureCommercialMarketplaceSetup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCommercialMarketplaceSetup() *AzureCommercialMarketplaceSetup {
	this := AzureCommercialMarketplaceSetup{}
	return &this
}

// NewAzureCommercialMarketplaceSetupWithDefaults instantiates a new AzureCommercialMarketplaceSetup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCommercialMarketplaceSetupWithDefaults() *AzureCommercialMarketplaceSetup {
	this := AzureCommercialMarketplaceSetup{}
	return &this
}

// GetSchema returns the Schema field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetSchema() string {
	if o == nil || IsNil(o.Schema) {
		var ret string
		return ret
	}
	return *o.Schema
}

// GetSchemaOk returns a tuple with the Schema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetSchemaOk() (*string, bool) {
	if o == nil || IsNil(o.Schema) {
		return nil, false
	}
	return o.Schema, true
}

// HasSchema returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasSchema() bool {
	if o != nil && !IsNil(o.Schema) {
		return true
	}

	return false
}

// SetSchema gets a reference to the given string and assigns it to the Schema field.
func (o *AzureCommercialMarketplaceSetup) SetSchema(v string) {
	o.Schema = &v
}

// GetAccessUrl returns the AccessUrl field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetAccessUrl() string {
	if o == nil || IsNil(o.AccessUrl) {
		var ret string
		return ret
	}
	return *o.AccessUrl
}

// GetAccessUrlOk returns a tuple with the AccessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetAccessUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AccessUrl) {
		return nil, false
	}
	return o.AccessUrl, true
}

// HasAccessUrl returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasAccessUrl() bool {
	if o != nil && !IsNil(o.AccessUrl) {
		return true
	}

	return false
}

// SetAccessUrl gets a reference to the given string and assigns it to the AccessUrl field.
func (o *AzureCommercialMarketplaceSetup) SetAccessUrl(v string) {
	o.AccessUrl = &v
}

// GetCallToAction returns the CallToAction field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetCallToAction() string {
	if o == nil || IsNil(o.CallToAction) {
		var ret string
		return ret
	}
	return *o.CallToAction
}

// GetCallToActionOk returns a tuple with the CallToAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetCallToActionOk() (*string, bool) {
	if o == nil || IsNil(o.CallToAction) {
		return nil, false
	}
	return o.CallToAction, true
}

// HasCallToAction returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasCallToAction() bool {
	if o != nil && !IsNil(o.CallToAction) {
		return true
	}

	return false
}

// SetCallToAction gets a reference to the given string and assigns it to the CallToAction field.
func (o *AzureCommercialMarketplaceSetup) SetCallToAction(v string) {
	o.CallToAction = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureCommercialMarketplaceSetup) SetId(v string) {
	o.Id = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetProduct() string {
	if o == nil || IsNil(o.Product) {
		var ret string
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetProductOk() (*string, bool) {
	if o == nil || IsNil(o.Product) {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasProduct() bool {
	if o != nil && !IsNil(o.Product) {
		return true
	}

	return false
}

// SetProduct gets a reference to the given string and assigns it to the Product field.
func (o *AzureCommercialMarketplaceSetup) SetProduct(v string) {
	o.Product = &v
}

// GetRequireLicenseForInstall returns the RequireLicenseForInstall field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetRequireLicenseForInstall() bool {
	if o == nil || IsNil(o.RequireLicenseForInstall) {
		var ret bool
		return ret
	}
	return *o.RequireLicenseForInstall
}

// GetRequireLicenseForInstallOk returns a tuple with the RequireLicenseForInstall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetRequireLicenseForInstallOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireLicenseForInstall) {
		return nil, false
	}
	return o.RequireLicenseForInstall, true
}

// HasRequireLicenseForInstall returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasRequireLicenseForInstall() bool {
	if o != nil && !IsNil(o.RequireLicenseForInstall) {
		return true
	}

	return false
}

// SetRequireLicenseForInstall gets a reference to the given bool and assigns it to the RequireLicenseForInstall field.
func (o *AzureCommercialMarketplaceSetup) SetRequireLicenseForInstall(v bool) {
	o.RequireLicenseForInstall = &v
}

// GetResourceName returns the ResourceName field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetResourceName() string {
	if o == nil || IsNil(o.ResourceName) {
		var ret string
		return ret
	}
	return *o.ResourceName
}

// GetResourceNameOk returns a tuple with the ResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceName) {
		return nil, false
	}
	return o.ResourceName, true
}

// HasResourceName returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasResourceName() bool {
	if o != nil && !IsNil(o.ResourceName) {
		return true
	}

	return false
}

// SetResourceName gets a reference to the given string and assigns it to the ResourceName field.
func (o *AzureCommercialMarketplaceSetup) SetResourceName(v string) {
	o.ResourceName = &v
}

// GetSellThroughMicrosoft returns the SellThroughMicrosoft field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetSellThroughMicrosoft() bool {
	if o == nil || IsNil(o.SellThroughMicrosoft) {
		var ret bool
		return ret
	}
	return *o.SellThroughMicrosoft
}

// GetSellThroughMicrosoftOk returns a tuple with the SellThroughMicrosoft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetSellThroughMicrosoftOk() (*bool, bool) {
	if o == nil || IsNil(o.SellThroughMicrosoft) {
		return nil, false
	}
	return o.SellThroughMicrosoft, true
}

// HasSellThroughMicrosoft returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasSellThroughMicrosoft() bool {
	if o != nil && !IsNil(o.SellThroughMicrosoft) {
		return true
	}

	return false
}

// SetSellThroughMicrosoft gets a reference to the given bool and assigns it to the SellThroughMicrosoft field.
func (o *AzureCommercialMarketplaceSetup) SetSellThroughMicrosoft(v bool) {
	o.SellThroughMicrosoft = &v
}

// GetUseMicrosoftLicenseManagementService returns the UseMicrosoftLicenseManagementService field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetUseMicrosoftLicenseManagementService() bool {
	if o == nil || IsNil(o.UseMicrosoftLicenseManagementService) {
		var ret bool
		return ret
	}
	return *o.UseMicrosoftLicenseManagementService
}

// GetUseMicrosoftLicenseManagementServiceOk returns a tuple with the UseMicrosoftLicenseManagementService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetUseMicrosoftLicenseManagementServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMicrosoftLicenseManagementService) {
		return nil, false
	}
	return o.UseMicrosoftLicenseManagementService, true
}

// HasUseMicrosoftLicenseManagementService returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasUseMicrosoftLicenseManagementService() bool {
	if o != nil && !IsNil(o.UseMicrosoftLicenseManagementService) {
		return true
	}

	return false
}

// SetUseMicrosoftLicenseManagementService gets a reference to the given bool and assigns it to the UseMicrosoftLicenseManagementService field.
func (o *AzureCommercialMarketplaceSetup) SetUseMicrosoftLicenseManagementService(v bool) {
	o.UseMicrosoftLicenseManagementService = &v
}

// GetValidations returns the Validations field value if set, zero value otherwise.
func (o *AzureCommercialMarketplaceSetup) GetValidations() []AzureMarketplaceValidation {
	if o == nil || IsNil(o.Validations) {
		var ret []AzureMarketplaceValidation
		return ret
	}
	return o.Validations
}

// GetValidationsOk returns a tuple with the Validations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCommercialMarketplaceSetup) GetValidationsOk() ([]AzureMarketplaceValidation, bool) {
	if o == nil || IsNil(o.Validations) {
		return nil, false
	}
	return o.Validations, true
}

// HasValidations returns a boolean if a field has been set.
func (o *AzureCommercialMarketplaceSetup) HasValidations() bool {
	if o != nil && !IsNil(o.Validations) {
		return true
	}

	return false
}

// SetValidations gets a reference to the given []AzureMarketplaceValidation and assigns it to the Validations field.
func (o *AzureCommercialMarketplaceSetup) SetValidations(v []AzureMarketplaceValidation) {
	o.Validations = v
}

func (o AzureCommercialMarketplaceSetup) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureCommercialMarketplaceSetup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schema) {
		toSerialize["$schema"] = o.Schema
	}
	if !IsNil(o.AccessUrl) {
		toSerialize["accessUrl"] = o.AccessUrl
	}
	if !IsNil(o.CallToAction) {
		toSerialize["callToAction"] = o.CallToAction
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Product) {
		toSerialize["product"] = o.Product
	}
	if !IsNil(o.RequireLicenseForInstall) {
		toSerialize["requireLicenseForInstall"] = o.RequireLicenseForInstall
	}
	if !IsNil(o.ResourceName) {
		toSerialize["resourceName"] = o.ResourceName
	}
	if !IsNil(o.SellThroughMicrosoft) {
		toSerialize["sellThroughMicrosoft"] = o.SellThroughMicrosoft
	}
	if !IsNil(o.UseMicrosoftLicenseManagementService) {
		toSerialize["useMicrosoftLicenseManagementService"] = o.UseMicrosoftLicenseManagementService
	}
	if !IsNil(o.Validations) {
		toSerialize["validations"] = o.Validations
	}
	return toSerialize, nil
}

type NullableAzureCommercialMarketplaceSetup struct {
	value *AzureCommercialMarketplaceSetup
	isSet bool
}

func (v NullableAzureCommercialMarketplaceSetup) Get() *AzureCommercialMarketplaceSetup {
	return v.value
}

func (v *NullableAzureCommercialMarketplaceSetup) Set(val *AzureCommercialMarketplaceSetup) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCommercialMarketplaceSetup) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCommercialMarketplaceSetup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCommercialMarketplaceSetup(val *AzureCommercialMarketplaceSetup) *NullableAzureCommercialMarketplaceSetup {
	return &NullableAzureCommercialMarketplaceSetup{value: val, isSet: true}
}

func (v NullableAzureCommercialMarketplaceSetup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCommercialMarketplaceSetup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
