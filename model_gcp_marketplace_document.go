/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the GcpMarketplaceDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpMarketplaceDocument{}

// GcpMarketplaceDocument struct for GcpMarketplaceDocument
type GcpMarketplaceDocument struct {
	Description  *string `json:"description,omitempty"`
	DocumentBody *string `json:"documentBody,omitempty"`
	// such as \"PARTNER_EULA\"
	DocumentType *string `json:"documentType,omitempty"`
	// The external link to Standard EULA such as https://cloud.google.com/terms/marketplace/eula-standard-v2-01272021.
	ExternalGoogleLink *GcpMarketplaceExternalGoogleLink `json:"externalGoogleLink,omitempty"`
	// in format of \"projects/{projectNumber}/agreements/{agreementId}/documents/{documentId}\"
	Name                 *string                             `json:"name,omitempty"`
	UnstructuredDocument *GcpMarketplaceUnstructuredDocument `json:"unstructuredDocument,omitempty"`
	UpdateTime           *time.Time                          `json:"updateTime,omitempty"`
}

// NewGcpMarketplaceDocument instantiates a new GcpMarketplaceDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpMarketplaceDocument() *GcpMarketplaceDocument {
	this := GcpMarketplaceDocument{}
	return &this
}

// NewGcpMarketplaceDocumentWithDefaults instantiates a new GcpMarketplaceDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpMarketplaceDocumentWithDefaults() *GcpMarketplaceDocument {
	this := GcpMarketplaceDocument{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GcpMarketplaceDocument) SetDescription(v string) {
	o.Description = &v
}

// GetDocumentBody returns the DocumentBody field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetDocumentBody() string {
	if o == nil || IsNil(o.DocumentBody) {
		var ret string
		return ret
	}
	return *o.DocumentBody
}

// GetDocumentBodyOk returns a tuple with the DocumentBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetDocumentBodyOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentBody) {
		return nil, false
	}
	return o.DocumentBody, true
}

// HasDocumentBody returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasDocumentBody() bool {
	if o != nil && !IsNil(o.DocumentBody) {
		return true
	}

	return false
}

// SetDocumentBody gets a reference to the given string and assigns it to the DocumentBody field.
func (o *GcpMarketplaceDocument) SetDocumentBody(v string) {
	o.DocumentBody = &v
}

// GetDocumentType returns the DocumentType field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetDocumentType() string {
	if o == nil || IsNil(o.DocumentType) {
		var ret string
		return ret
	}
	return *o.DocumentType
}

// GetDocumentTypeOk returns a tuple with the DocumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetDocumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentType) {
		return nil, false
	}
	return o.DocumentType, true
}

// HasDocumentType returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasDocumentType() bool {
	if o != nil && !IsNil(o.DocumentType) {
		return true
	}

	return false
}

// SetDocumentType gets a reference to the given string and assigns it to the DocumentType field.
func (o *GcpMarketplaceDocument) SetDocumentType(v string) {
	o.DocumentType = &v
}

// GetExternalGoogleLink returns the ExternalGoogleLink field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetExternalGoogleLink() GcpMarketplaceExternalGoogleLink {
	if o == nil || IsNil(o.ExternalGoogleLink) {
		var ret GcpMarketplaceExternalGoogleLink
		return ret
	}
	return *o.ExternalGoogleLink
}

// GetExternalGoogleLinkOk returns a tuple with the ExternalGoogleLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetExternalGoogleLinkOk() (*GcpMarketplaceExternalGoogleLink, bool) {
	if o == nil || IsNil(o.ExternalGoogleLink) {
		return nil, false
	}
	return o.ExternalGoogleLink, true
}

// HasExternalGoogleLink returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasExternalGoogleLink() bool {
	if o != nil && !IsNil(o.ExternalGoogleLink) {
		return true
	}

	return false
}

// SetExternalGoogleLink gets a reference to the given GcpMarketplaceExternalGoogleLink and assigns it to the ExternalGoogleLink field.
func (o *GcpMarketplaceDocument) SetExternalGoogleLink(v GcpMarketplaceExternalGoogleLink) {
	o.ExternalGoogleLink = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GcpMarketplaceDocument) SetName(v string) {
	o.Name = &v
}

// GetUnstructuredDocument returns the UnstructuredDocument field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetUnstructuredDocument() GcpMarketplaceUnstructuredDocument {
	if o == nil || IsNil(o.UnstructuredDocument) {
		var ret GcpMarketplaceUnstructuredDocument
		return ret
	}
	return *o.UnstructuredDocument
}

// GetUnstructuredDocumentOk returns a tuple with the UnstructuredDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetUnstructuredDocumentOk() (*GcpMarketplaceUnstructuredDocument, bool) {
	if o == nil || IsNil(o.UnstructuredDocument) {
		return nil, false
	}
	return o.UnstructuredDocument, true
}

// HasUnstructuredDocument returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasUnstructuredDocument() bool {
	if o != nil && !IsNil(o.UnstructuredDocument) {
		return true
	}

	return false
}

// SetUnstructuredDocument gets a reference to the given GcpMarketplaceUnstructuredDocument and assigns it to the UnstructuredDocument field.
func (o *GcpMarketplaceDocument) SetUnstructuredDocument(v GcpMarketplaceUnstructuredDocument) {
	o.UnstructuredDocument = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GcpMarketplaceDocument) GetUpdateTime() time.Time {
	if o == nil || IsNil(o.UpdateTime) {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpMarketplaceDocument) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GcpMarketplaceDocument) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *GcpMarketplaceDocument) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o GcpMarketplaceDocument) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpMarketplaceDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DocumentBody) {
		toSerialize["documentBody"] = o.DocumentBody
	}
	if !IsNil(o.DocumentType) {
		toSerialize["documentType"] = o.DocumentType
	}
	if !IsNil(o.ExternalGoogleLink) {
		toSerialize["externalGoogleLink"] = o.ExternalGoogleLink
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UnstructuredDocument) {
		toSerialize["unstructuredDocument"] = o.UnstructuredDocument
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableGcpMarketplaceDocument struct {
	value *GcpMarketplaceDocument
	isSet bool
}

func (v NullableGcpMarketplaceDocument) Get() *GcpMarketplaceDocument {
	return v.value
}

func (v *NullableGcpMarketplaceDocument) Set(val *GcpMarketplaceDocument) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpMarketplaceDocument) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpMarketplaceDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpMarketplaceDocument(val *GcpMarketplaceDocument) *NullableGcpMarketplaceDocument {
	return &NullableGcpMarketplaceDocument{value: val, isSet: true}
}

func (v NullableGcpMarketplaceDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpMarketplaceDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
