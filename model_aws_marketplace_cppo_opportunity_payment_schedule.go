/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AwsMarketplaceCppoOpportunityPaymentSchedule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoOpportunityPaymentSchedule{}

// AwsMarketplaceCppoOpportunityPaymentSchedule struct for AwsMarketplaceCppoOpportunityPaymentSchedule
type AwsMarketplaceCppoOpportunityPaymentSchedule struct {
	ChargeAmount *string    `json:"ChargeAmount,omitempty"`
	ChargeDate   *time.Time `json:"ChargeDate,omitempty"`
}

// NewAwsMarketplaceCppoOpportunityPaymentSchedule instantiates a new AwsMarketplaceCppoOpportunityPaymentSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoOpportunityPaymentSchedule() *AwsMarketplaceCppoOpportunityPaymentSchedule {
	this := AwsMarketplaceCppoOpportunityPaymentSchedule{}
	return &this
}

// NewAwsMarketplaceCppoOpportunityPaymentScheduleWithDefaults instantiates a new AwsMarketplaceCppoOpportunityPaymentSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoOpportunityPaymentScheduleWithDefaults() *AwsMarketplaceCppoOpportunityPaymentSchedule {
	this := AwsMarketplaceCppoOpportunityPaymentSchedule{}
	return &this
}

// GetChargeAmount returns the ChargeAmount field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) GetChargeAmount() string {
	if o == nil || IsNil(o.ChargeAmount) {
		var ret string
		return ret
	}
	return *o.ChargeAmount
}

// GetChargeAmountOk returns a tuple with the ChargeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) GetChargeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ChargeAmount) {
		return nil, false
	}
	return o.ChargeAmount, true
}

// HasChargeAmount returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) HasChargeAmount() bool {
	if o != nil && !IsNil(o.ChargeAmount) {
		return true
	}

	return false
}

// SetChargeAmount gets a reference to the given string and assigns it to the ChargeAmount field.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) SetChargeAmount(v string) {
	o.ChargeAmount = &v
}

// GetChargeDate returns the ChargeDate field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) GetChargeDate() time.Time {
	if o == nil || IsNil(o.ChargeDate) {
		var ret time.Time
		return ret
	}
	return *o.ChargeDate
}

// GetChargeDateOk returns a tuple with the ChargeDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) GetChargeDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ChargeDate) {
		return nil, false
	}
	return o.ChargeDate, true
}

// HasChargeDate returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) HasChargeDate() bool {
	if o != nil && !IsNil(o.ChargeDate) {
		return true
	}

	return false
}

// SetChargeDate gets a reference to the given time.Time and assigns it to the ChargeDate field.
func (o *AwsMarketplaceCppoOpportunityPaymentSchedule) SetChargeDate(v time.Time) {
	o.ChargeDate = &v
}

func (o AwsMarketplaceCppoOpportunityPaymentSchedule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoOpportunityPaymentSchedule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChargeAmount) {
		toSerialize["ChargeAmount"] = o.ChargeAmount
	}
	if !IsNil(o.ChargeDate) {
		toSerialize["ChargeDate"] = o.ChargeDate
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoOpportunityPaymentSchedule struct {
	value *AwsMarketplaceCppoOpportunityPaymentSchedule
	isSet bool
}

func (v NullableAwsMarketplaceCppoOpportunityPaymentSchedule) Get() *AwsMarketplaceCppoOpportunityPaymentSchedule {
	return v.value
}

func (v *NullableAwsMarketplaceCppoOpportunityPaymentSchedule) Set(val *AwsMarketplaceCppoOpportunityPaymentSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoOpportunityPaymentSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoOpportunityPaymentSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoOpportunityPaymentSchedule(val *AwsMarketplaceCppoOpportunityPaymentSchedule) *NullableAwsMarketplaceCppoOpportunityPaymentSchedule {
	return &NullableAwsMarketplaceCppoOpportunityPaymentSchedule{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoOpportunityPaymentSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoOpportunityPaymentSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
