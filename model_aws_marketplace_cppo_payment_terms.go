/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the AwsMarketplaceCppoPaymentTerms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsMarketplaceCppoPaymentTerms{}

// AwsMarketplaceCppoPaymentTerms struct for AwsMarketplaceCppoPaymentTerms
type AwsMarketplaceCppoPaymentTerms struct {
	CurrencyCode     *string                                     `json:"currencyCode,omitempty"`
	Entitlement      []AwsMarketplaceCppoPaymentTermsEntitlement `json:"entitlement,omitempty"`
	Schedule         []AwsMarketplaceCppoPaymentSchedule         `json:"schedule,omitempty"`
	ScheduleType     *string                                     `json:"scheduleType,omitempty"`
	SelectedDuration *string                                     `json:"selectedDuration,omitempty"`
}

// NewAwsMarketplaceCppoPaymentTerms instantiates a new AwsMarketplaceCppoPaymentTerms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsMarketplaceCppoPaymentTerms() *AwsMarketplaceCppoPaymentTerms {
	this := AwsMarketplaceCppoPaymentTerms{}
	return &this
}

// NewAwsMarketplaceCppoPaymentTermsWithDefaults instantiates a new AwsMarketplaceCppoPaymentTerms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsMarketplaceCppoPaymentTermsWithDefaults() *AwsMarketplaceCppoPaymentTerms {
	this := AwsMarketplaceCppoPaymentTerms{}
	return &this
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPaymentTerms) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPaymentTerms) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPaymentTerms) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *AwsMarketplaceCppoPaymentTerms) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetEntitlement returns the Entitlement field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPaymentTerms) GetEntitlement() []AwsMarketplaceCppoPaymentTermsEntitlement {
	if o == nil || IsNil(o.Entitlement) {
		var ret []AwsMarketplaceCppoPaymentTermsEntitlement
		return ret
	}
	return o.Entitlement
}

// GetEntitlementOk returns a tuple with the Entitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPaymentTerms) GetEntitlementOk() ([]AwsMarketplaceCppoPaymentTermsEntitlement, bool) {
	if o == nil || IsNil(o.Entitlement) {
		return nil, false
	}
	return o.Entitlement, true
}

// HasEntitlement returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPaymentTerms) HasEntitlement() bool {
	if o != nil && !IsNil(o.Entitlement) {
		return true
	}

	return false
}

// SetEntitlement gets a reference to the given []AwsMarketplaceCppoPaymentTermsEntitlement and assigns it to the Entitlement field.
func (o *AwsMarketplaceCppoPaymentTerms) SetEntitlement(v []AwsMarketplaceCppoPaymentTermsEntitlement) {
	o.Entitlement = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPaymentTerms) GetSchedule() []AwsMarketplaceCppoPaymentSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret []AwsMarketplaceCppoPaymentSchedule
		return ret
	}
	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPaymentTerms) GetScheduleOk() ([]AwsMarketplaceCppoPaymentSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPaymentTerms) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given []AwsMarketplaceCppoPaymentSchedule and assigns it to the Schedule field.
func (o *AwsMarketplaceCppoPaymentTerms) SetSchedule(v []AwsMarketplaceCppoPaymentSchedule) {
	o.Schedule = v
}

// GetScheduleType returns the ScheduleType field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPaymentTerms) GetScheduleType() string {
	if o == nil || IsNil(o.ScheduleType) {
		var ret string
		return ret
	}
	return *o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPaymentTerms) GetScheduleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleType) {
		return nil, false
	}
	return o.ScheduleType, true
}

// HasScheduleType returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPaymentTerms) HasScheduleType() bool {
	if o != nil && !IsNil(o.ScheduleType) {
		return true
	}

	return false
}

// SetScheduleType gets a reference to the given string and assigns it to the ScheduleType field.
func (o *AwsMarketplaceCppoPaymentTerms) SetScheduleType(v string) {
	o.ScheduleType = &v
}

// GetSelectedDuration returns the SelectedDuration field value if set, zero value otherwise.
func (o *AwsMarketplaceCppoPaymentTerms) GetSelectedDuration() string {
	if o == nil || IsNil(o.SelectedDuration) {
		var ret string
		return ret
	}
	return *o.SelectedDuration
}

// GetSelectedDurationOk returns a tuple with the SelectedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsMarketplaceCppoPaymentTerms) GetSelectedDurationOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedDuration) {
		return nil, false
	}
	return o.SelectedDuration, true
}

// HasSelectedDuration returns a boolean if a field has been set.
func (o *AwsMarketplaceCppoPaymentTerms) HasSelectedDuration() bool {
	if o != nil && !IsNil(o.SelectedDuration) {
		return true
	}

	return false
}

// SetSelectedDuration gets a reference to the given string and assigns it to the SelectedDuration field.
func (o *AwsMarketplaceCppoPaymentTerms) SetSelectedDuration(v string) {
	o.SelectedDuration = &v
}

func (o AwsMarketplaceCppoPaymentTerms) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsMarketplaceCppoPaymentTerms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.Entitlement) {
		toSerialize["entitlement"] = o.Entitlement
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.ScheduleType) {
		toSerialize["scheduleType"] = o.ScheduleType
	}
	if !IsNil(o.SelectedDuration) {
		toSerialize["selectedDuration"] = o.SelectedDuration
	}
	return toSerialize, nil
}

type NullableAwsMarketplaceCppoPaymentTerms struct {
	value *AwsMarketplaceCppoPaymentTerms
	isSet bool
}

func (v NullableAwsMarketplaceCppoPaymentTerms) Get() *AwsMarketplaceCppoPaymentTerms {
	return v.value
}

func (v *NullableAwsMarketplaceCppoPaymentTerms) Set(val *AwsMarketplaceCppoPaymentTerms) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoPaymentTerms) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoPaymentTerms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoPaymentTerms(val *AwsMarketplaceCppoPaymentTerms) *NullableAwsMarketplaceCppoPaymentTerms {
	return &NullableAwsMarketplaceCppoPaymentTerms{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoPaymentTerms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoPaymentTerms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
