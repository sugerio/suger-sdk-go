/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AzurePriceAndAvailabilityPrivateOfferPrice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzurePriceAndAvailabilityPrivateOfferPrice{}

// AzurePriceAndAvailabilityPrivateOfferPrice struct for AzurePriceAndAvailabilityPrivateOfferPrice
type AzurePriceAndAvailabilityPrivateOfferPrice struct {
	CustomMeters *AzurePriceAndAvailabilityPrivateOfferCustomMeters `json:"customMeters,omitempty"`
	RecurrentPrice *AzurePriceAndAvailabilityRecurrentPrice `json:"recurrentPrice,omitempty"`
}

// NewAzurePriceAndAvailabilityPrivateOfferPrice instantiates a new AzurePriceAndAvailabilityPrivateOfferPrice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzurePriceAndAvailabilityPrivateOfferPrice() *AzurePriceAndAvailabilityPrivateOfferPrice {
	this := AzurePriceAndAvailabilityPrivateOfferPrice{}
	return &this
}

// NewAzurePriceAndAvailabilityPrivateOfferPriceWithDefaults instantiates a new AzurePriceAndAvailabilityPrivateOfferPrice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzurePriceAndAvailabilityPrivateOfferPriceWithDefaults() *AzurePriceAndAvailabilityPrivateOfferPrice {
	this := AzurePriceAndAvailabilityPrivateOfferPrice{}
	return &this
}

// GetCustomMeters returns the CustomMeters field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) GetCustomMeters() AzurePriceAndAvailabilityPrivateOfferCustomMeters {
	if o == nil || IsNil(o.CustomMeters) {
		var ret AzurePriceAndAvailabilityPrivateOfferCustomMeters
		return ret
	}
	return *o.CustomMeters
}

// GetCustomMetersOk returns a tuple with the CustomMeters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) GetCustomMetersOk() (*AzurePriceAndAvailabilityPrivateOfferCustomMeters, bool) {
	if o == nil || IsNil(o.CustomMeters) {
		return nil, false
	}
	return o.CustomMeters, true
}

// HasCustomMeters returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) HasCustomMeters() bool {
	if o != nil && !IsNil(o.CustomMeters) {
		return true
	}

	return false
}

// SetCustomMeters gets a reference to the given AzurePriceAndAvailabilityPrivateOfferCustomMeters and assigns it to the CustomMeters field.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) SetCustomMeters(v AzurePriceAndAvailabilityPrivateOfferCustomMeters) {
	o.CustomMeters = &v
}

// GetRecurrentPrice returns the RecurrentPrice field value if set, zero value otherwise.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) GetRecurrentPrice() AzurePriceAndAvailabilityRecurrentPrice {
	if o == nil || IsNil(o.RecurrentPrice) {
		var ret AzurePriceAndAvailabilityRecurrentPrice
		return ret
	}
	return *o.RecurrentPrice
}

// GetRecurrentPriceOk returns a tuple with the RecurrentPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) GetRecurrentPriceOk() (*AzurePriceAndAvailabilityRecurrentPrice, bool) {
	if o == nil || IsNil(o.RecurrentPrice) {
		return nil, false
	}
	return o.RecurrentPrice, true
}

// HasRecurrentPrice returns a boolean if a field has been set.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) HasRecurrentPrice() bool {
	if o != nil && !IsNil(o.RecurrentPrice) {
		return true
	}

	return false
}

// SetRecurrentPrice gets a reference to the given AzurePriceAndAvailabilityRecurrentPrice and assigns it to the RecurrentPrice field.
func (o *AzurePriceAndAvailabilityPrivateOfferPrice) SetRecurrentPrice(v AzurePriceAndAvailabilityRecurrentPrice) {
	o.RecurrentPrice = &v
}

func (o AzurePriceAndAvailabilityPrivateOfferPrice) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzurePriceAndAvailabilityPrivateOfferPrice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomMeters) {
		toSerialize["customMeters"] = o.CustomMeters
	}
	if !IsNil(o.RecurrentPrice) {
		toSerialize["recurrentPrice"] = o.RecurrentPrice
	}
	return toSerialize, nil
}

type NullableAzurePriceAndAvailabilityPrivateOfferPrice struct {
	value *AzurePriceAndAvailabilityPrivateOfferPrice
	isSet bool
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPrice) Get() *AzurePriceAndAvailabilityPrivateOfferPrice {
	return v.value
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPrice) Set(val *AzurePriceAndAvailabilityPrivateOfferPrice) {
	v.value = val
	v.isSet = true
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPrice) IsSet() bool {
	return v.isSet
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPrice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzurePriceAndAvailabilityPrivateOfferPrice(val *AzurePriceAndAvailabilityPrivateOfferPrice) *NullableAzurePriceAndAvailabilityPrivateOfferPrice {
	return &NullableAzurePriceAndAvailabilityPrivateOfferPrice{value: val, isSet: true}
}

func (v NullableAzurePriceAndAvailabilityPrivateOfferPrice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzurePriceAndAvailabilityPrivateOfferPrice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


