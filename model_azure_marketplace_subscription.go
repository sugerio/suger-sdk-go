/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the AzureMarketplaceSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureMarketplaceSubscription{}

// AzureMarketplaceSubscription struct for AzureMarketplaceSubscription
type AzureMarketplaceSubscription struct {
	AllowedCustomerOperations []string `json:"allowedCustomerOperations,omitempty"`
	AutoRenew *bool `json:"autoRenew,omitempty"`
	Beneficiary *AzureADIdentifier `json:"beneficiary,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	FulfillmentId *string `json:"fulfillmentId,omitempty"`
	Id *string `json:"id,omitempty"`
	IsFreeTrial *bool `json:"isFreeTrial,omitempty"`
	IsTest *bool `json:"isTest,omitempty"`
	LastModified *string `json:"lastModified,omitempty"`
	Name *string `json:"name,omitempty"`
	OfferId *string `json:"offerId,omitempty"`
	PlanId *string `json:"planId,omitempty"`
	PublisherId *string `json:"publisherId,omitempty"`
	Purchaser *AzureADIdentifier `json:"purchaser,omitempty"`
	Quantity *int32 `json:"quantity,omitempty"`
	SaasSubscriptionStatus *AzureMarketplaceSubscriptionStatus `json:"saasSubscriptionStatus,omitempty"`
	SandboxType *string `json:"sandboxType,omitempty"`
	SessionId *string `json:"sessionId,omitempty"`
	SessionMode *string `json:"sessionMode,omitempty"`
	StoreFront *string `json:"storeFront,omitempty"`
	Term *AzureTerm `json:"term,omitempty"`
}

// NewAzureMarketplaceSubscription instantiates a new AzureMarketplaceSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureMarketplaceSubscription() *AzureMarketplaceSubscription {
	this := AzureMarketplaceSubscription{}
	return &this
}

// NewAzureMarketplaceSubscriptionWithDefaults instantiates a new AzureMarketplaceSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureMarketplaceSubscriptionWithDefaults() *AzureMarketplaceSubscription {
	this := AzureMarketplaceSubscription{}
	return &this
}

// GetAllowedCustomerOperations returns the AllowedCustomerOperations field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetAllowedCustomerOperations() []string {
	if o == nil || IsNil(o.AllowedCustomerOperations) {
		var ret []string
		return ret
	}
	return o.AllowedCustomerOperations
}

// GetAllowedCustomerOperationsOk returns a tuple with the AllowedCustomerOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetAllowedCustomerOperationsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedCustomerOperations) {
		return nil, false
	}
	return o.AllowedCustomerOperations, true
}

// HasAllowedCustomerOperations returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasAllowedCustomerOperations() bool {
	if o != nil && !IsNil(o.AllowedCustomerOperations) {
		return true
	}

	return false
}

// SetAllowedCustomerOperations gets a reference to the given []string and assigns it to the AllowedCustomerOperations field.
func (o *AzureMarketplaceSubscription) SetAllowedCustomerOperations(v []string) {
	o.AllowedCustomerOperations = v
}

// GetAutoRenew returns the AutoRenew field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetAutoRenew() bool {
	if o == nil || IsNil(o.AutoRenew) {
		var ret bool
		return ret
	}
	return *o.AutoRenew
}

// GetAutoRenewOk returns a tuple with the AutoRenew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetAutoRenewOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoRenew) {
		return nil, false
	}
	return o.AutoRenew, true
}

// HasAutoRenew returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasAutoRenew() bool {
	if o != nil && !IsNil(o.AutoRenew) {
		return true
	}

	return false
}

// SetAutoRenew gets a reference to the given bool and assigns it to the AutoRenew field.
func (o *AzureMarketplaceSubscription) SetAutoRenew(v bool) {
	o.AutoRenew = &v
}

// GetBeneficiary returns the Beneficiary field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetBeneficiary() AzureADIdentifier {
	if o == nil || IsNil(o.Beneficiary) {
		var ret AzureADIdentifier
		return ret
	}
	return *o.Beneficiary
}

// GetBeneficiaryOk returns a tuple with the Beneficiary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetBeneficiaryOk() (*AzureADIdentifier, bool) {
	if o == nil || IsNil(o.Beneficiary) {
		return nil, false
	}
	return o.Beneficiary, true
}

// HasBeneficiary returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasBeneficiary() bool {
	if o != nil && !IsNil(o.Beneficiary) {
		return true
	}

	return false
}

// SetBeneficiary gets a reference to the given AzureADIdentifier and assigns it to the Beneficiary field.
func (o *AzureMarketplaceSubscription) SetBeneficiary(v AzureADIdentifier) {
	o.Beneficiary = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetCreated() time.Time {
	if o == nil || IsNil(o.Created) {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AzureMarketplaceSubscription) SetCreated(v time.Time) {
	o.Created = &v
}

// GetFulfillmentId returns the FulfillmentId field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetFulfillmentId() string {
	if o == nil || IsNil(o.FulfillmentId) {
		var ret string
		return ret
	}
	return *o.FulfillmentId
}

// GetFulfillmentIdOk returns a tuple with the FulfillmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetFulfillmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.FulfillmentId) {
		return nil, false
	}
	return o.FulfillmentId, true
}

// HasFulfillmentId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasFulfillmentId() bool {
	if o != nil && !IsNil(o.FulfillmentId) {
		return true
	}

	return false
}

// SetFulfillmentId gets a reference to the given string and assigns it to the FulfillmentId field.
func (o *AzureMarketplaceSubscription) SetFulfillmentId(v string) {
	o.FulfillmentId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AzureMarketplaceSubscription) SetId(v string) {
	o.Id = &v
}

// GetIsFreeTrial returns the IsFreeTrial field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetIsFreeTrial() bool {
	if o == nil || IsNil(o.IsFreeTrial) {
		var ret bool
		return ret
	}
	return *o.IsFreeTrial
}

// GetIsFreeTrialOk returns a tuple with the IsFreeTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetIsFreeTrialOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFreeTrial) {
		return nil, false
	}
	return o.IsFreeTrial, true
}

// HasIsFreeTrial returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasIsFreeTrial() bool {
	if o != nil && !IsNil(o.IsFreeTrial) {
		return true
	}

	return false
}

// SetIsFreeTrial gets a reference to the given bool and assigns it to the IsFreeTrial field.
func (o *AzureMarketplaceSubscription) SetIsFreeTrial(v bool) {
	o.IsFreeTrial = &v
}

// GetIsTest returns the IsTest field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetIsTest() bool {
	if o == nil || IsNil(o.IsTest) {
		var ret bool
		return ret
	}
	return *o.IsTest
}

// GetIsTestOk returns a tuple with the IsTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetIsTestOk() (*bool, bool) {
	if o == nil || IsNil(o.IsTest) {
		return nil, false
	}
	return o.IsTest, true
}

// HasIsTest returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasIsTest() bool {
	if o != nil && !IsNil(o.IsTest) {
		return true
	}

	return false
}

// SetIsTest gets a reference to the given bool and assigns it to the IsTest field.
func (o *AzureMarketplaceSubscription) SetIsTest(v bool) {
	o.IsTest = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetLastModified() string {
	if o == nil || IsNil(o.LastModified) {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetLastModifiedOk() (*string, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *AzureMarketplaceSubscription) SetLastModified(v string) {
	o.LastModified = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AzureMarketplaceSubscription) SetName(v string) {
	o.Name = &v
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *AzureMarketplaceSubscription) SetOfferId(v string) {
	o.OfferId = &v
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetPlanId() string {
	if o == nil || IsNil(o.PlanId) {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetPlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlanId) {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasPlanId() bool {
	if o != nil && !IsNil(o.PlanId) {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *AzureMarketplaceSubscription) SetPlanId(v string) {
	o.PlanId = &v
}

// GetPublisherId returns the PublisherId field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetPublisherId() string {
	if o == nil || IsNil(o.PublisherId) {
		var ret string
		return ret
	}
	return *o.PublisherId
}

// GetPublisherIdOk returns a tuple with the PublisherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetPublisherIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublisherId) {
		return nil, false
	}
	return o.PublisherId, true
}

// HasPublisherId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasPublisherId() bool {
	if o != nil && !IsNil(o.PublisherId) {
		return true
	}

	return false
}

// SetPublisherId gets a reference to the given string and assigns it to the PublisherId field.
func (o *AzureMarketplaceSubscription) SetPublisherId(v string) {
	o.PublisherId = &v
}

// GetPurchaser returns the Purchaser field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetPurchaser() AzureADIdentifier {
	if o == nil || IsNil(o.Purchaser) {
		var ret AzureADIdentifier
		return ret
	}
	return *o.Purchaser
}

// GetPurchaserOk returns a tuple with the Purchaser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetPurchaserOk() (*AzureADIdentifier, bool) {
	if o == nil || IsNil(o.Purchaser) {
		return nil, false
	}
	return o.Purchaser, true
}

// HasPurchaser returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasPurchaser() bool {
	if o != nil && !IsNil(o.Purchaser) {
		return true
	}

	return false
}

// SetPurchaser gets a reference to the given AzureADIdentifier and assigns it to the Purchaser field.
func (o *AzureMarketplaceSubscription) SetPurchaser(v AzureADIdentifier) {
	o.Purchaser = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *AzureMarketplaceSubscription) SetQuantity(v int32) {
	o.Quantity = &v
}

// GetSaasSubscriptionStatus returns the SaasSubscriptionStatus field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetSaasSubscriptionStatus() AzureMarketplaceSubscriptionStatus {
	if o == nil || IsNil(o.SaasSubscriptionStatus) {
		var ret AzureMarketplaceSubscriptionStatus
		return ret
	}
	return *o.SaasSubscriptionStatus
}

// GetSaasSubscriptionStatusOk returns a tuple with the SaasSubscriptionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetSaasSubscriptionStatusOk() (*AzureMarketplaceSubscriptionStatus, bool) {
	if o == nil || IsNil(o.SaasSubscriptionStatus) {
		return nil, false
	}
	return o.SaasSubscriptionStatus, true
}

// HasSaasSubscriptionStatus returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasSaasSubscriptionStatus() bool {
	if o != nil && !IsNil(o.SaasSubscriptionStatus) {
		return true
	}

	return false
}

// SetSaasSubscriptionStatus gets a reference to the given AzureMarketplaceSubscriptionStatus and assigns it to the SaasSubscriptionStatus field.
func (o *AzureMarketplaceSubscription) SetSaasSubscriptionStatus(v AzureMarketplaceSubscriptionStatus) {
	o.SaasSubscriptionStatus = &v
}

// GetSandboxType returns the SandboxType field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetSandboxType() string {
	if o == nil || IsNil(o.SandboxType) {
		var ret string
		return ret
	}
	return *o.SandboxType
}

// GetSandboxTypeOk returns a tuple with the SandboxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetSandboxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SandboxType) {
		return nil, false
	}
	return o.SandboxType, true
}

// HasSandboxType returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasSandboxType() bool {
	if o != nil && !IsNil(o.SandboxType) {
		return true
	}

	return false
}

// SetSandboxType gets a reference to the given string and assigns it to the SandboxType field.
func (o *AzureMarketplaceSubscription) SetSandboxType(v string) {
	o.SandboxType = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetSessionId() string {
	if o == nil || IsNil(o.SessionId) {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetSessionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SessionId) {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasSessionId() bool {
	if o != nil && !IsNil(o.SessionId) {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *AzureMarketplaceSubscription) SetSessionId(v string) {
	o.SessionId = &v
}

// GetSessionMode returns the SessionMode field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetSessionMode() string {
	if o == nil || IsNil(o.SessionMode) {
		var ret string
		return ret
	}
	return *o.SessionMode
}

// GetSessionModeOk returns a tuple with the SessionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetSessionModeOk() (*string, bool) {
	if o == nil || IsNil(o.SessionMode) {
		return nil, false
	}
	return o.SessionMode, true
}

// HasSessionMode returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasSessionMode() bool {
	if o != nil && !IsNil(o.SessionMode) {
		return true
	}

	return false
}

// SetSessionMode gets a reference to the given string and assigns it to the SessionMode field.
func (o *AzureMarketplaceSubscription) SetSessionMode(v string) {
	o.SessionMode = &v
}

// GetStoreFront returns the StoreFront field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetStoreFront() string {
	if o == nil || IsNil(o.StoreFront) {
		var ret string
		return ret
	}
	return *o.StoreFront
}

// GetStoreFrontOk returns a tuple with the StoreFront field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetStoreFrontOk() (*string, bool) {
	if o == nil || IsNil(o.StoreFront) {
		return nil, false
	}
	return o.StoreFront, true
}

// HasStoreFront returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasStoreFront() bool {
	if o != nil && !IsNil(o.StoreFront) {
		return true
	}

	return false
}

// SetStoreFront gets a reference to the given string and assigns it to the StoreFront field.
func (o *AzureMarketplaceSubscription) SetStoreFront(v string) {
	o.StoreFront = &v
}

// GetTerm returns the Term field value if set, zero value otherwise.
func (o *AzureMarketplaceSubscription) GetTerm() AzureTerm {
	if o == nil || IsNil(o.Term) {
		var ret AzureTerm
		return ret
	}
	return *o.Term
}

// GetTermOk returns a tuple with the Term field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureMarketplaceSubscription) GetTermOk() (*AzureTerm, bool) {
	if o == nil || IsNil(o.Term) {
		return nil, false
	}
	return o.Term, true
}

// HasTerm returns a boolean if a field has been set.
func (o *AzureMarketplaceSubscription) HasTerm() bool {
	if o != nil && !IsNil(o.Term) {
		return true
	}

	return false
}

// SetTerm gets a reference to the given AzureTerm and assigns it to the Term field.
func (o *AzureMarketplaceSubscription) SetTerm(v AzureTerm) {
	o.Term = &v
}

func (o AzureMarketplaceSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureMarketplaceSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedCustomerOperations) {
		toSerialize["allowedCustomerOperations"] = o.AllowedCustomerOperations
	}
	if !IsNil(o.AutoRenew) {
		toSerialize["autoRenew"] = o.AutoRenew
	}
	if !IsNil(o.Beneficiary) {
		toSerialize["beneficiary"] = o.Beneficiary
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.FulfillmentId) {
		toSerialize["fulfillmentId"] = o.FulfillmentId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsFreeTrial) {
		toSerialize["isFreeTrial"] = o.IsFreeTrial
	}
	if !IsNil(o.IsTest) {
		toSerialize["isTest"] = o.IsTest
	}
	if !IsNil(o.LastModified) {
		toSerialize["lastModified"] = o.LastModified
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OfferId) {
		toSerialize["offerId"] = o.OfferId
	}
	if !IsNil(o.PlanId) {
		toSerialize["planId"] = o.PlanId
	}
	if !IsNil(o.PublisherId) {
		toSerialize["publisherId"] = o.PublisherId
	}
	if !IsNil(o.Purchaser) {
		toSerialize["purchaser"] = o.Purchaser
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.SaasSubscriptionStatus) {
		toSerialize["saasSubscriptionStatus"] = o.SaasSubscriptionStatus
	}
	if !IsNil(o.SandboxType) {
		toSerialize["sandboxType"] = o.SandboxType
	}
	if !IsNil(o.SessionId) {
		toSerialize["sessionId"] = o.SessionId
	}
	if !IsNil(o.SessionMode) {
		toSerialize["sessionMode"] = o.SessionMode
	}
	if !IsNil(o.StoreFront) {
		toSerialize["storeFront"] = o.StoreFront
	}
	if !IsNil(o.Term) {
		toSerialize["term"] = o.Term
	}
	return toSerialize, nil
}

type NullableAzureMarketplaceSubscription struct {
	value *AzureMarketplaceSubscription
	isSet bool
}

func (v NullableAzureMarketplaceSubscription) Get() *AzureMarketplaceSubscription {
	return v.value
}

func (v *NullableAzureMarketplaceSubscription) Set(val *AzureMarketplaceSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureMarketplaceSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureMarketplaceSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureMarketplaceSubscription(val *AzureMarketplaceSubscription) *NullableAzureMarketplaceSubscription {
	return &NullableAzureMarketplaceSubscription{value: val, isSet: true}
}

func (v NullableAzureMarketplaceSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureMarketplaceSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


