/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AwsMarketplaceCppoDiscountType the model 'AwsMarketplaceCppoDiscountType'
type AwsMarketplaceCppoDiscountType string

// List of AwsMarketplaceCppoDiscountType
const (
	AwsMarketplaceCppoDiscountType_DISCOUNT_PERCENT AwsMarketplaceCppoDiscountType = "DISCOUNT_PERCENT"
	AwsMarketplaceCppoDiscountType_CUSTOM_PRICE AwsMarketplaceCppoDiscountType = "CUSTOM_PRICE"
	AwsMarketplaceCppoDiscountType_CUSTOM_PRICE_WITH_FPS AwsMarketplaceCppoDiscountType = "CUSTOM_PRICE_WITH_FPS"
)

// All allowed values of AwsMarketplaceCppoDiscountType enum
var AllowedAwsMarketplaceCppoDiscountTypeEnumValues = []AwsMarketplaceCppoDiscountType{
	"DISCOUNT_PERCENT",
	"CUSTOM_PRICE",
	"CUSTOM_PRICE_WITH_FPS",
}

func (v *AwsMarketplaceCppoDiscountType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AwsMarketplaceCppoDiscountType(value)
	for _, existing := range AllowedAwsMarketplaceCppoDiscountTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AwsMarketplaceCppoDiscountType", value)
}

// NewAwsMarketplaceCppoDiscountTypeFromValue returns a pointer to a valid AwsMarketplaceCppoDiscountType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAwsMarketplaceCppoDiscountTypeFromValue(v string) (*AwsMarketplaceCppoDiscountType, error) {
	ev := AwsMarketplaceCppoDiscountType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AwsMarketplaceCppoDiscountType: valid values are %v", v, AllowedAwsMarketplaceCppoDiscountTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AwsMarketplaceCppoDiscountType) IsValid() bool {
	for _, existing := range AllowedAwsMarketplaceCppoDiscountTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AwsMarketplaceCppoDiscountType value
func (v AwsMarketplaceCppoDiscountType) Ptr() *AwsMarketplaceCppoDiscountType {
	return &v
}

type NullableAwsMarketplaceCppoDiscountType struct {
	value *AwsMarketplaceCppoDiscountType
	isSet bool
}

func (v NullableAwsMarketplaceCppoDiscountType) Get() *AwsMarketplaceCppoDiscountType {
	return v.value
}

func (v *NullableAwsMarketplaceCppoDiscountType) Set(val *AwsMarketplaceCppoDiscountType) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsMarketplaceCppoDiscountType) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsMarketplaceCppoDiscountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsMarketplaceCppoDiscountType(val *AwsMarketplaceCppoDiscountType) *NullableAwsMarketplaceCppoDiscountType {
	return &NullableAwsMarketplaceCppoDiscountType{value: val, isSet: true}
}

func (v NullableAwsMarketplaceCppoDiscountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsMarketplaceCppoDiscountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

