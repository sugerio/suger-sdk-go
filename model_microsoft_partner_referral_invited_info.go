/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MicrosoftPartnerReferralInvitedInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MicrosoftPartnerReferralInvitedInfo{}

// MicrosoftPartnerReferralInvitedInfo struct for MicrosoftPartnerReferralInvitedInfo
type MicrosoftPartnerReferralInvitedInfo struct {
	OrganizationId *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
}

// NewMicrosoftPartnerReferralInvitedInfo instantiates a new MicrosoftPartnerReferralInvitedInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMicrosoftPartnerReferralInvitedInfo() *MicrosoftPartnerReferralInvitedInfo {
	this := MicrosoftPartnerReferralInvitedInfo{}
	return &this
}

// NewMicrosoftPartnerReferralInvitedInfoWithDefaults instantiates a new MicrosoftPartnerReferralInvitedInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMicrosoftPartnerReferralInvitedInfoWithDefaults() *MicrosoftPartnerReferralInvitedInfo {
	this := MicrosoftPartnerReferralInvitedInfo{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralInvitedInfo) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralInvitedInfo) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralInvitedInfo) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *MicrosoftPartnerReferralInvitedInfo) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *MicrosoftPartnerReferralInvitedInfo) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MicrosoftPartnerReferralInvitedInfo) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *MicrosoftPartnerReferralInvitedInfo) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *MicrosoftPartnerReferralInvitedInfo) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

func (o MicrosoftPartnerReferralInvitedInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MicrosoftPartnerReferralInvitedInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	return toSerialize, nil
}

type NullableMicrosoftPartnerReferralInvitedInfo struct {
	value *MicrosoftPartnerReferralInvitedInfo
	isSet bool
}

func (v NullableMicrosoftPartnerReferralInvitedInfo) Get() *MicrosoftPartnerReferralInvitedInfo {
	return v.value
}

func (v *NullableMicrosoftPartnerReferralInvitedInfo) Set(val *MicrosoftPartnerReferralInvitedInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMicrosoftPartnerReferralInvitedInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMicrosoftPartnerReferralInvitedInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMicrosoftPartnerReferralInvitedInfo(val *MicrosoftPartnerReferralInvitedInfo) *NullableMicrosoftPartnerReferralInvitedInfo {
	return &NullableMicrosoftPartnerReferralInvitedInfo{value: val, isSet: true}
}

func (v NullableMicrosoftPartnerReferralInvitedInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMicrosoftPartnerReferralInvitedInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


