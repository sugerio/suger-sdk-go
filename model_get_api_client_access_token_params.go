/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetApiClientAccessTokenParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiClientAccessTokenParams{}

// GetApiClientAccessTokenParams struct for GetApiClientAccessTokenParams
type GetApiClientAccessTokenParams struct {
	// The ID of the API Client.
	Id             string `json:"id"`
	OrganizationID string `json:"organizationID"`
	// The secret of the API Client.
	Secret string `json:"secret"`
}

type _GetApiClientAccessTokenParams GetApiClientAccessTokenParams

// NewGetApiClientAccessTokenParams instantiates a new GetApiClientAccessTokenParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiClientAccessTokenParams(id string, organizationID string, secret string) *GetApiClientAccessTokenParams {
	this := GetApiClientAccessTokenParams{}
	this.Id = id
	this.OrganizationID = organizationID
	this.Secret = secret
	return &this
}

// NewGetApiClientAccessTokenParamsWithDefaults instantiates a new GetApiClientAccessTokenParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiClientAccessTokenParamsWithDefaults() *GetApiClientAccessTokenParams {
	this := GetApiClientAccessTokenParams{}
	return &this
}

// GetId returns the Id field value
func (o *GetApiClientAccessTokenParams) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetApiClientAccessTokenParams) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetApiClientAccessTokenParams) SetId(v string) {
	o.Id = v
}

// GetOrganizationID returns the OrganizationID field value
func (o *GetApiClientAccessTokenParams) GetOrganizationID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value
// and a boolean to check if the value has been set.
func (o *GetApiClientAccessTokenParams) GetOrganizationIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationID, true
}

// SetOrganizationID sets field value
func (o *GetApiClientAccessTokenParams) SetOrganizationID(v string) {
	o.OrganizationID = v
}

// GetSecret returns the Secret field value
func (o *GetApiClientAccessTokenParams) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *GetApiClientAccessTokenParams) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *GetApiClientAccessTokenParams) SetSecret(v string) {
	o.Secret = v
}

func (o GetApiClientAccessTokenParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiClientAccessTokenParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["organizationID"] = o.OrganizationID
	toSerialize["secret"] = o.Secret
	return toSerialize, nil
}

func (o *GetApiClientAccessTokenParams) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"organizationID",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApiClientAccessTokenParams := _GetApiClientAccessTokenParams{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApiClientAccessTokenParams)

	if err != nil {
		return err
	}

	*o = GetApiClientAccessTokenParams(varGetApiClientAccessTokenParams)

	return err
}

type NullableGetApiClientAccessTokenParams struct {
	value *GetApiClientAccessTokenParams
	isSet bool
}

func (v NullableGetApiClientAccessTokenParams) Get() *GetApiClientAccessTokenParams {
	return v.value
}

func (v *NullableGetApiClientAccessTokenParams) Set(val *GetApiClientAccessTokenParams) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiClientAccessTokenParams) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiClientAccessTokenParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiClientAccessTokenParams(val *GetApiClientAccessTokenParams) *NullableGetApiClientAccessTokenParams {
	return &NullableGetApiClientAccessTokenParams{value: val, isSet: true}
}

func (v NullableGetApiClientAccessTokenParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiClientAccessTokenParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
