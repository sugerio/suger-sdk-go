/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
	"time"
)

// checks if the BillingPaymentInstallmentDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingPaymentInstallmentDetail{}

// BillingPaymentInstallmentDetail struct for BillingPaymentInstallmentDetail
type BillingPaymentInstallmentDetail struct {
	Amount      *float32   `json:"amount,omitempty"`
	ChargeOn    *time.Time `json:"chargeOn,omitempty"`
	Description *string    `json:"description,omitempty"`
}

// NewBillingPaymentInstallmentDetail instantiates a new BillingPaymentInstallmentDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingPaymentInstallmentDetail() *BillingPaymentInstallmentDetail {
	this := BillingPaymentInstallmentDetail{}
	return &this
}

// NewBillingPaymentInstallmentDetailWithDefaults instantiates a new BillingPaymentInstallmentDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingPaymentInstallmentDetailWithDefaults() *BillingPaymentInstallmentDetail {
	this := BillingPaymentInstallmentDetail{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *BillingPaymentInstallmentDetail) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentInstallmentDetail) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *BillingPaymentInstallmentDetail) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *BillingPaymentInstallmentDetail) SetAmount(v float32) {
	o.Amount = &v
}

// GetChargeOn returns the ChargeOn field value if set, zero value otherwise.
func (o *BillingPaymentInstallmentDetail) GetChargeOn() time.Time {
	if o == nil || IsNil(o.ChargeOn) {
		var ret time.Time
		return ret
	}
	return *o.ChargeOn
}

// GetChargeOnOk returns a tuple with the ChargeOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentInstallmentDetail) GetChargeOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ChargeOn) {
		return nil, false
	}
	return o.ChargeOn, true
}

// HasChargeOn returns a boolean if a field has been set.
func (o *BillingPaymentInstallmentDetail) HasChargeOn() bool {
	if o != nil && !IsNil(o.ChargeOn) {
		return true
	}

	return false
}

// SetChargeOn gets a reference to the given time.Time and assigns it to the ChargeOn field.
func (o *BillingPaymentInstallmentDetail) SetChargeOn(v time.Time) {
	o.ChargeOn = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BillingPaymentInstallmentDetail) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingPaymentInstallmentDetail) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BillingPaymentInstallmentDetail) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BillingPaymentInstallmentDetail) SetDescription(v string) {
	o.Description = &v
}

func (o BillingPaymentInstallmentDetail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingPaymentInstallmentDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ChargeOn) {
		toSerialize["chargeOn"] = o.ChargeOn
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableBillingPaymentInstallmentDetail struct {
	value *BillingPaymentInstallmentDetail
	isSet bool
}

func (v NullableBillingPaymentInstallmentDetail) Get() *BillingPaymentInstallmentDetail {
	return v.value
}

func (v *NullableBillingPaymentInstallmentDetail) Set(val *BillingPaymentInstallmentDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingPaymentInstallmentDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingPaymentInstallmentDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingPaymentInstallmentDetail(val *BillingPaymentInstallmentDetail) *NullableBillingPaymentInstallmentDetail {
	return &NullableBillingPaymentInstallmentDetail{value: val, isSet: true}
}

func (v NullableBillingPaymentInstallmentDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingPaymentInstallmentDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
