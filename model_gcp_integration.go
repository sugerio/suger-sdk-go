/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GcpIntegration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GcpIntegration{}

// GcpIntegration struct for GcpIntegration
type GcpIntegration struct {
	// Enable GCP marketplace sync from GCP Chrome. If true, Suger will sync GCP Marketplace Product & Private Offer from GCP Chrome.
	EnableChromeSync *bool `json:"enableChromeSync,omitempty"`
	// Enable manually approve the GCP Marketplace Entitlement. If true, Suger will not automatically approve the GCP Marketplace Entitlement. Util the GCP Marketplace Entitlement is manually approved, it will not be activated.
	EnableManualApproveEntitlement *bool `json:"enableManualApproveEntitlement,omitempty"`
	GcpProjectId *string `json:"gcpProjectId,omitempty"`
	GcpProjectNumber *string `json:"gcpProjectNumber,omitempty"`
	IdentityProviderId *string `json:"identityProviderId,omitempty"`
	// The Login URL for GCP Marketplace buyers to login to your service with or without SSO JWT token. If not set, the login will be redirected to the Product's fulfillment URL.
	LoginUrl *string `json:"loginUrl,omitempty"`
	// The GCP Marketplace Partner ID, it is also called as Provider ID somewhere.
	PartnerId *string `json:"partnerId,omitempty"`
	// The resource name of the Pub/Sub subscription to receive notifications from Google cloud marketplace.
	PubsubSubscription *string `json:"pubsubSubscription,omitempty"`
	// The resource name of the Pub/Sub topic to receive notifications from Google when a user signs up for your service, purchases a plan, or changes an existing plan.
	PubsubTopic *string `json:"pubsubTopic,omitempty"`
	// The GCP storage bucket name to store the GCP Marketplace reports.
	ReportBucket *string `json:"reportBucket,omitempty"`
	// Is GCP Marketplace Report full-sync done.
	ReportFullSyncDone *bool `json:"reportFullSyncDone,omitempty"`
	// The UTC date when GCP Marketplace reports start to generate.
	ReportStartDate *time.Time `json:"reportStartDate,omitempty"`
	// Disable GCP Marketplace Report sync. If true, Suger stop to sync GCP Marketplace reports.
	ReportSyncDisabled *bool `json:"reportSyncDisabled,omitempty"`
	// Is GCP Marketplace Revenue Record full-sync done.
	RevenueRecordFullSyncDone *bool `json:"revenueRecordFullSyncDone,omitempty"`
	// Disable GCP Marketplace Revenue Record sync. If true, Suger stop to sync GCP Marketplace Revenue Records.
	RevenueRecordSyncDisabled *bool `json:"revenueRecordSyncDisabled,omitempty"`
	ServiceAccountEmail *string `json:"serviceAccountEmail,omitempty"`
	// The array of service resource names of the listings in GCP Marketplace.
	ServiceNames []string `json:"serviceNames,omitempty"`
	// If enabled, Suger will redirect the new client to the signup page even the entitlement is not found. If disabled, Suger will redirect the new client to the error page if the entitlement is not found.
	SignupRedirectWithoutEntitlementEnabled *bool `json:"signupRedirectWithoutEntitlementEnabled,omitempty"`
	// Disable Usage Metering to GCP Marketplace. If true, Suger stop to report usage records to GCP Marketplace.
	UsageMeteringDisabled *bool `json:"usageMeteringDisabled,omitempty"`
	WorkloadIdentityPoolId *string `json:"workloadIdentityPoolId,omitempty"`
}

// NewGcpIntegration instantiates a new GcpIntegration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGcpIntegration() *GcpIntegration {
	this := GcpIntegration{}
	return &this
}

// NewGcpIntegrationWithDefaults instantiates a new GcpIntegration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGcpIntegrationWithDefaults() *GcpIntegration {
	this := GcpIntegration{}
	return &this
}

// GetEnableChromeSync returns the EnableChromeSync field value if set, zero value otherwise.
func (o *GcpIntegration) GetEnableChromeSync() bool {
	if o == nil || IsNil(o.EnableChromeSync) {
		var ret bool
		return ret
	}
	return *o.EnableChromeSync
}

// GetEnableChromeSyncOk returns a tuple with the EnableChromeSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetEnableChromeSyncOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableChromeSync) {
		return nil, false
	}
	return o.EnableChromeSync, true
}

// HasEnableChromeSync returns a boolean if a field has been set.
func (o *GcpIntegration) HasEnableChromeSync() bool {
	if o != nil && !IsNil(o.EnableChromeSync) {
		return true
	}

	return false
}

// SetEnableChromeSync gets a reference to the given bool and assigns it to the EnableChromeSync field.
func (o *GcpIntegration) SetEnableChromeSync(v bool) {
	o.EnableChromeSync = &v
}

// GetEnableManualApproveEntitlement returns the EnableManualApproveEntitlement field value if set, zero value otherwise.
func (o *GcpIntegration) GetEnableManualApproveEntitlement() bool {
	if o == nil || IsNil(o.EnableManualApproveEntitlement) {
		var ret bool
		return ret
	}
	return *o.EnableManualApproveEntitlement
}

// GetEnableManualApproveEntitlementOk returns a tuple with the EnableManualApproveEntitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetEnableManualApproveEntitlementOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableManualApproveEntitlement) {
		return nil, false
	}
	return o.EnableManualApproveEntitlement, true
}

// HasEnableManualApproveEntitlement returns a boolean if a field has been set.
func (o *GcpIntegration) HasEnableManualApproveEntitlement() bool {
	if o != nil && !IsNil(o.EnableManualApproveEntitlement) {
		return true
	}

	return false
}

// SetEnableManualApproveEntitlement gets a reference to the given bool and assigns it to the EnableManualApproveEntitlement field.
func (o *GcpIntegration) SetEnableManualApproveEntitlement(v bool) {
	o.EnableManualApproveEntitlement = &v
}

// GetGcpProjectId returns the GcpProjectId field value if set, zero value otherwise.
func (o *GcpIntegration) GetGcpProjectId() string {
	if o == nil || IsNil(o.GcpProjectId) {
		var ret string
		return ret
	}
	return *o.GcpProjectId
}

// GetGcpProjectIdOk returns a tuple with the GcpProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetGcpProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectId) {
		return nil, false
	}
	return o.GcpProjectId, true
}

// HasGcpProjectId returns a boolean if a field has been set.
func (o *GcpIntegration) HasGcpProjectId() bool {
	if o != nil && !IsNil(o.GcpProjectId) {
		return true
	}

	return false
}

// SetGcpProjectId gets a reference to the given string and assigns it to the GcpProjectId field.
func (o *GcpIntegration) SetGcpProjectId(v string) {
	o.GcpProjectId = &v
}

// GetGcpProjectNumber returns the GcpProjectNumber field value if set, zero value otherwise.
func (o *GcpIntegration) GetGcpProjectNumber() string {
	if o == nil || IsNil(o.GcpProjectNumber) {
		var ret string
		return ret
	}
	return *o.GcpProjectNumber
}

// GetGcpProjectNumberOk returns a tuple with the GcpProjectNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetGcpProjectNumberOk() (*string, bool) {
	if o == nil || IsNil(o.GcpProjectNumber) {
		return nil, false
	}
	return o.GcpProjectNumber, true
}

// HasGcpProjectNumber returns a boolean if a field has been set.
func (o *GcpIntegration) HasGcpProjectNumber() bool {
	if o != nil && !IsNil(o.GcpProjectNumber) {
		return true
	}

	return false
}

// SetGcpProjectNumber gets a reference to the given string and assigns it to the GcpProjectNumber field.
func (o *GcpIntegration) SetGcpProjectNumber(v string) {
	o.GcpProjectNumber = &v
}

// GetIdentityProviderId returns the IdentityProviderId field value if set, zero value otherwise.
func (o *GcpIntegration) GetIdentityProviderId() string {
	if o == nil || IsNil(o.IdentityProviderId) {
		var ret string
		return ret
	}
	return *o.IdentityProviderId
}

// GetIdentityProviderIdOk returns a tuple with the IdentityProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetIdentityProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityProviderId) {
		return nil, false
	}
	return o.IdentityProviderId, true
}

// HasIdentityProviderId returns a boolean if a field has been set.
func (o *GcpIntegration) HasIdentityProviderId() bool {
	if o != nil && !IsNil(o.IdentityProviderId) {
		return true
	}

	return false
}

// SetIdentityProviderId gets a reference to the given string and assigns it to the IdentityProviderId field.
func (o *GcpIntegration) SetIdentityProviderId(v string) {
	o.IdentityProviderId = &v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *GcpIntegration) GetLoginUrl() string {
	if o == nil || IsNil(o.LoginUrl) {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetLoginUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LoginUrl) {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *GcpIntegration) HasLoginUrl() bool {
	if o != nil && !IsNil(o.LoginUrl) {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *GcpIntegration) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *GcpIntegration) GetPartnerId() string {
	if o == nil || IsNil(o.PartnerId) {
		var ret string
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetPartnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.PartnerId) {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *GcpIntegration) HasPartnerId() bool {
	if o != nil && !IsNil(o.PartnerId) {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given string and assigns it to the PartnerId field.
func (o *GcpIntegration) SetPartnerId(v string) {
	o.PartnerId = &v
}

// GetPubsubSubscription returns the PubsubSubscription field value if set, zero value otherwise.
func (o *GcpIntegration) GetPubsubSubscription() string {
	if o == nil || IsNil(o.PubsubSubscription) {
		var ret string
		return ret
	}
	return *o.PubsubSubscription
}

// GetPubsubSubscriptionOk returns a tuple with the PubsubSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetPubsubSubscriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PubsubSubscription) {
		return nil, false
	}
	return o.PubsubSubscription, true
}

// HasPubsubSubscription returns a boolean if a field has been set.
func (o *GcpIntegration) HasPubsubSubscription() bool {
	if o != nil && !IsNil(o.PubsubSubscription) {
		return true
	}

	return false
}

// SetPubsubSubscription gets a reference to the given string and assigns it to the PubsubSubscription field.
func (o *GcpIntegration) SetPubsubSubscription(v string) {
	o.PubsubSubscription = &v
}

// GetPubsubTopic returns the PubsubTopic field value if set, zero value otherwise.
func (o *GcpIntegration) GetPubsubTopic() string {
	if o == nil || IsNil(o.PubsubTopic) {
		var ret string
		return ret
	}
	return *o.PubsubTopic
}

// GetPubsubTopicOk returns a tuple with the PubsubTopic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetPubsubTopicOk() (*string, bool) {
	if o == nil || IsNil(o.PubsubTopic) {
		return nil, false
	}
	return o.PubsubTopic, true
}

// HasPubsubTopic returns a boolean if a field has been set.
func (o *GcpIntegration) HasPubsubTopic() bool {
	if o != nil && !IsNil(o.PubsubTopic) {
		return true
	}

	return false
}

// SetPubsubTopic gets a reference to the given string and assigns it to the PubsubTopic field.
func (o *GcpIntegration) SetPubsubTopic(v string) {
	o.PubsubTopic = &v
}

// GetReportBucket returns the ReportBucket field value if set, zero value otherwise.
func (o *GcpIntegration) GetReportBucket() string {
	if o == nil || IsNil(o.ReportBucket) {
		var ret string
		return ret
	}
	return *o.ReportBucket
}

// GetReportBucketOk returns a tuple with the ReportBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetReportBucketOk() (*string, bool) {
	if o == nil || IsNil(o.ReportBucket) {
		return nil, false
	}
	return o.ReportBucket, true
}

// HasReportBucket returns a boolean if a field has been set.
func (o *GcpIntegration) HasReportBucket() bool {
	if o != nil && !IsNil(o.ReportBucket) {
		return true
	}

	return false
}

// SetReportBucket gets a reference to the given string and assigns it to the ReportBucket field.
func (o *GcpIntegration) SetReportBucket(v string) {
	o.ReportBucket = &v
}

// GetReportFullSyncDone returns the ReportFullSyncDone field value if set, zero value otherwise.
func (o *GcpIntegration) GetReportFullSyncDone() bool {
	if o == nil || IsNil(o.ReportFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.ReportFullSyncDone
}

// GetReportFullSyncDoneOk returns a tuple with the ReportFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetReportFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportFullSyncDone) {
		return nil, false
	}
	return o.ReportFullSyncDone, true
}

// HasReportFullSyncDone returns a boolean if a field has been set.
func (o *GcpIntegration) HasReportFullSyncDone() bool {
	if o != nil && !IsNil(o.ReportFullSyncDone) {
		return true
	}

	return false
}

// SetReportFullSyncDone gets a reference to the given bool and assigns it to the ReportFullSyncDone field.
func (o *GcpIntegration) SetReportFullSyncDone(v bool) {
	o.ReportFullSyncDone = &v
}

// GetReportStartDate returns the ReportStartDate field value if set, zero value otherwise.
func (o *GcpIntegration) GetReportStartDate() time.Time {
	if o == nil || IsNil(o.ReportStartDate) {
		var ret time.Time
		return ret
	}
	return *o.ReportStartDate
}

// GetReportStartDateOk returns a tuple with the ReportStartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetReportStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ReportStartDate) {
		return nil, false
	}
	return o.ReportStartDate, true
}

// HasReportStartDate returns a boolean if a field has been set.
func (o *GcpIntegration) HasReportStartDate() bool {
	if o != nil && !IsNil(o.ReportStartDate) {
		return true
	}

	return false
}

// SetReportStartDate gets a reference to the given time.Time and assigns it to the ReportStartDate field.
func (o *GcpIntegration) SetReportStartDate(v time.Time) {
	o.ReportStartDate = &v
}

// GetReportSyncDisabled returns the ReportSyncDisabled field value if set, zero value otherwise.
func (o *GcpIntegration) GetReportSyncDisabled() bool {
	if o == nil || IsNil(o.ReportSyncDisabled) {
		var ret bool
		return ret
	}
	return *o.ReportSyncDisabled
}

// GetReportSyncDisabledOk returns a tuple with the ReportSyncDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetReportSyncDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ReportSyncDisabled) {
		return nil, false
	}
	return o.ReportSyncDisabled, true
}

// HasReportSyncDisabled returns a boolean if a field has been set.
func (o *GcpIntegration) HasReportSyncDisabled() bool {
	if o != nil && !IsNil(o.ReportSyncDisabled) {
		return true
	}

	return false
}

// SetReportSyncDisabled gets a reference to the given bool and assigns it to the ReportSyncDisabled field.
func (o *GcpIntegration) SetReportSyncDisabled(v bool) {
	o.ReportSyncDisabled = &v
}

// GetRevenueRecordFullSyncDone returns the RevenueRecordFullSyncDone field value if set, zero value otherwise.
func (o *GcpIntegration) GetRevenueRecordFullSyncDone() bool {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		var ret bool
		return ret
	}
	return *o.RevenueRecordFullSyncDone
}

// GetRevenueRecordFullSyncDoneOk returns a tuple with the RevenueRecordFullSyncDone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetRevenueRecordFullSyncDoneOk() (*bool, bool) {
	if o == nil || IsNil(o.RevenueRecordFullSyncDone) {
		return nil, false
	}
	return o.RevenueRecordFullSyncDone, true
}

// HasRevenueRecordFullSyncDone returns a boolean if a field has been set.
func (o *GcpIntegration) HasRevenueRecordFullSyncDone() bool {
	if o != nil && !IsNil(o.RevenueRecordFullSyncDone) {
		return true
	}

	return false
}

// SetRevenueRecordFullSyncDone gets a reference to the given bool and assigns it to the RevenueRecordFullSyncDone field.
func (o *GcpIntegration) SetRevenueRecordFullSyncDone(v bool) {
	o.RevenueRecordFullSyncDone = &v
}

// GetRevenueRecordSyncDisabled returns the RevenueRecordSyncDisabled field value if set, zero value otherwise.
func (o *GcpIntegration) GetRevenueRecordSyncDisabled() bool {
	if o == nil || IsNil(o.RevenueRecordSyncDisabled) {
		var ret bool
		return ret
	}
	return *o.RevenueRecordSyncDisabled
}

// GetRevenueRecordSyncDisabledOk returns a tuple with the RevenueRecordSyncDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetRevenueRecordSyncDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RevenueRecordSyncDisabled) {
		return nil, false
	}
	return o.RevenueRecordSyncDisabled, true
}

// HasRevenueRecordSyncDisabled returns a boolean if a field has been set.
func (o *GcpIntegration) HasRevenueRecordSyncDisabled() bool {
	if o != nil && !IsNil(o.RevenueRecordSyncDisabled) {
		return true
	}

	return false
}

// SetRevenueRecordSyncDisabled gets a reference to the given bool and assigns it to the RevenueRecordSyncDisabled field.
func (o *GcpIntegration) SetRevenueRecordSyncDisabled(v bool) {
	o.RevenueRecordSyncDisabled = &v
}

// GetServiceAccountEmail returns the ServiceAccountEmail field value if set, zero value otherwise.
func (o *GcpIntegration) GetServiceAccountEmail() string {
	if o == nil || IsNil(o.ServiceAccountEmail) {
		var ret string
		return ret
	}
	return *o.ServiceAccountEmail
}

// GetServiceAccountEmailOk returns a tuple with the ServiceAccountEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetServiceAccountEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccountEmail) {
		return nil, false
	}
	return o.ServiceAccountEmail, true
}

// HasServiceAccountEmail returns a boolean if a field has been set.
func (o *GcpIntegration) HasServiceAccountEmail() bool {
	if o != nil && !IsNil(o.ServiceAccountEmail) {
		return true
	}

	return false
}

// SetServiceAccountEmail gets a reference to the given string and assigns it to the ServiceAccountEmail field.
func (o *GcpIntegration) SetServiceAccountEmail(v string) {
	o.ServiceAccountEmail = &v
}

// GetServiceNames returns the ServiceNames field value if set, zero value otherwise.
func (o *GcpIntegration) GetServiceNames() []string {
	if o == nil || IsNil(o.ServiceNames) {
		var ret []string
		return ret
	}
	return o.ServiceNames
}

// GetServiceNamesOk returns a tuple with the ServiceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetServiceNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceNames) {
		return nil, false
	}
	return o.ServiceNames, true
}

// HasServiceNames returns a boolean if a field has been set.
func (o *GcpIntegration) HasServiceNames() bool {
	if o != nil && !IsNil(o.ServiceNames) {
		return true
	}

	return false
}

// SetServiceNames gets a reference to the given []string and assigns it to the ServiceNames field.
func (o *GcpIntegration) SetServiceNames(v []string) {
	o.ServiceNames = v
}

// GetSignupRedirectWithoutEntitlementEnabled returns the SignupRedirectWithoutEntitlementEnabled field value if set, zero value otherwise.
func (o *GcpIntegration) GetSignupRedirectWithoutEntitlementEnabled() bool {
	if o == nil || IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		var ret bool
		return ret
	}
	return *o.SignupRedirectWithoutEntitlementEnabled
}

// GetSignupRedirectWithoutEntitlementEnabledOk returns a tuple with the SignupRedirectWithoutEntitlementEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetSignupRedirectWithoutEntitlementEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		return nil, false
	}
	return o.SignupRedirectWithoutEntitlementEnabled, true
}

// HasSignupRedirectWithoutEntitlementEnabled returns a boolean if a field has been set.
func (o *GcpIntegration) HasSignupRedirectWithoutEntitlementEnabled() bool {
	if o != nil && !IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		return true
	}

	return false
}

// SetSignupRedirectWithoutEntitlementEnabled gets a reference to the given bool and assigns it to the SignupRedirectWithoutEntitlementEnabled field.
func (o *GcpIntegration) SetSignupRedirectWithoutEntitlementEnabled(v bool) {
	o.SignupRedirectWithoutEntitlementEnabled = &v
}

// GetUsageMeteringDisabled returns the UsageMeteringDisabled field value if set, zero value otherwise.
func (o *GcpIntegration) GetUsageMeteringDisabled() bool {
	if o == nil || IsNil(o.UsageMeteringDisabled) {
		var ret bool
		return ret
	}
	return *o.UsageMeteringDisabled
}

// GetUsageMeteringDisabledOk returns a tuple with the UsageMeteringDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetUsageMeteringDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.UsageMeteringDisabled) {
		return nil, false
	}
	return o.UsageMeteringDisabled, true
}

// HasUsageMeteringDisabled returns a boolean if a field has been set.
func (o *GcpIntegration) HasUsageMeteringDisabled() bool {
	if o != nil && !IsNil(o.UsageMeteringDisabled) {
		return true
	}

	return false
}

// SetUsageMeteringDisabled gets a reference to the given bool and assigns it to the UsageMeteringDisabled field.
func (o *GcpIntegration) SetUsageMeteringDisabled(v bool) {
	o.UsageMeteringDisabled = &v
}

// GetWorkloadIdentityPoolId returns the WorkloadIdentityPoolId field value if set, zero value otherwise.
func (o *GcpIntegration) GetWorkloadIdentityPoolId() string {
	if o == nil || IsNil(o.WorkloadIdentityPoolId) {
		var ret string
		return ret
	}
	return *o.WorkloadIdentityPoolId
}

// GetWorkloadIdentityPoolIdOk returns a tuple with the WorkloadIdentityPoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GcpIntegration) GetWorkloadIdentityPoolIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkloadIdentityPoolId) {
		return nil, false
	}
	return o.WorkloadIdentityPoolId, true
}

// HasWorkloadIdentityPoolId returns a boolean if a field has been set.
func (o *GcpIntegration) HasWorkloadIdentityPoolId() bool {
	if o != nil && !IsNil(o.WorkloadIdentityPoolId) {
		return true
	}

	return false
}

// SetWorkloadIdentityPoolId gets a reference to the given string and assigns it to the WorkloadIdentityPoolId field.
func (o *GcpIntegration) SetWorkloadIdentityPoolId(v string) {
	o.WorkloadIdentityPoolId = &v
}

func (o GcpIntegration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GcpIntegration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableChromeSync) {
		toSerialize["enableChromeSync"] = o.EnableChromeSync
	}
	if !IsNil(o.EnableManualApproveEntitlement) {
		toSerialize["enableManualApproveEntitlement"] = o.EnableManualApproveEntitlement
	}
	if !IsNil(o.GcpProjectId) {
		toSerialize["gcpProjectId"] = o.GcpProjectId
	}
	if !IsNil(o.GcpProjectNumber) {
		toSerialize["gcpProjectNumber"] = o.GcpProjectNumber
	}
	if !IsNil(o.IdentityProviderId) {
		toSerialize["identityProviderId"] = o.IdentityProviderId
	}
	if !IsNil(o.LoginUrl) {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if !IsNil(o.PartnerId) {
		toSerialize["partnerId"] = o.PartnerId
	}
	if !IsNil(o.PubsubSubscription) {
		toSerialize["pubsubSubscription"] = o.PubsubSubscription
	}
	if !IsNil(o.PubsubTopic) {
		toSerialize["pubsubTopic"] = o.PubsubTopic
	}
	if !IsNil(o.ReportBucket) {
		toSerialize["reportBucket"] = o.ReportBucket
	}
	if !IsNil(o.ReportFullSyncDone) {
		toSerialize["reportFullSyncDone"] = o.ReportFullSyncDone
	}
	if !IsNil(o.ReportStartDate) {
		toSerialize["reportStartDate"] = o.ReportStartDate
	}
	if !IsNil(o.ReportSyncDisabled) {
		toSerialize["reportSyncDisabled"] = o.ReportSyncDisabled
	}
	if !IsNil(o.RevenueRecordFullSyncDone) {
		toSerialize["revenueRecordFullSyncDone"] = o.RevenueRecordFullSyncDone
	}
	if !IsNil(o.RevenueRecordSyncDisabled) {
		toSerialize["revenueRecordSyncDisabled"] = o.RevenueRecordSyncDisabled
	}
	if !IsNil(o.ServiceAccountEmail) {
		toSerialize["serviceAccountEmail"] = o.ServiceAccountEmail
	}
	if !IsNil(o.ServiceNames) {
		toSerialize["serviceNames"] = o.ServiceNames
	}
	if !IsNil(o.SignupRedirectWithoutEntitlementEnabled) {
		toSerialize["signupRedirectWithoutEntitlementEnabled"] = o.SignupRedirectWithoutEntitlementEnabled
	}
	if !IsNil(o.UsageMeteringDisabled) {
		toSerialize["usageMeteringDisabled"] = o.UsageMeteringDisabled
	}
	if !IsNil(o.WorkloadIdentityPoolId) {
		toSerialize["workloadIdentityPoolId"] = o.WorkloadIdentityPoolId
	}
	return toSerialize, nil
}

type NullableGcpIntegration struct {
	value *GcpIntegration
	isSet bool
}

func (v NullableGcpIntegration) Get() *GcpIntegration {
	return v.value
}

func (v *NullableGcpIntegration) Set(val *GcpIntegration) {
	v.value = val
	v.isSet = true
}

func (v NullableGcpIntegration) IsSet() bool {
	return v.isSet
}

func (v *NullableGcpIntegration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGcpIntegration(val *GcpIntegration) *NullableGcpIntegration {
	return &NullableGcpIntegration{value: val, isSet: true}
}

func (v NullableGcpIntegration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGcpIntegration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


