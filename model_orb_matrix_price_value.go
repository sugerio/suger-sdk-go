/*
Suger API

CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.

API version: 1.0
Contact: support@suger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package suger

import (
	"encoding/json"
)

// checks if the OrbMatrixPriceValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrbMatrixPriceValue{}

// OrbMatrixPriceValue struct for OrbMatrixPriceValue
type OrbMatrixPriceValue struct {
	DimensionValues []string `json:"dimension_values,omitempty"`
	UnitAmount      *string  `json:"unit_amount,omitempty"`
}

// NewOrbMatrixPriceValue instantiates a new OrbMatrixPriceValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrbMatrixPriceValue() *OrbMatrixPriceValue {
	this := OrbMatrixPriceValue{}
	return &this
}

// NewOrbMatrixPriceValueWithDefaults instantiates a new OrbMatrixPriceValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrbMatrixPriceValueWithDefaults() *OrbMatrixPriceValue {
	this := OrbMatrixPriceValue{}
	return &this
}

// GetDimensionValues returns the DimensionValues field value if set, zero value otherwise.
func (o *OrbMatrixPriceValue) GetDimensionValues() []string {
	if o == nil || IsNil(o.DimensionValues) {
		var ret []string
		return ret
	}
	return o.DimensionValues
}

// GetDimensionValuesOk returns a tuple with the DimensionValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbMatrixPriceValue) GetDimensionValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.DimensionValues) {
		return nil, false
	}
	return o.DimensionValues, true
}

// HasDimensionValues returns a boolean if a field has been set.
func (o *OrbMatrixPriceValue) HasDimensionValues() bool {
	if o != nil && !IsNil(o.DimensionValues) {
		return true
	}

	return false
}

// SetDimensionValues gets a reference to the given []string and assigns it to the DimensionValues field.
func (o *OrbMatrixPriceValue) SetDimensionValues(v []string) {
	o.DimensionValues = v
}

// GetUnitAmount returns the UnitAmount field value if set, zero value otherwise.
func (o *OrbMatrixPriceValue) GetUnitAmount() string {
	if o == nil || IsNil(o.UnitAmount) {
		var ret string
		return ret
	}
	return *o.UnitAmount
}

// GetUnitAmountOk returns a tuple with the UnitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrbMatrixPriceValue) GetUnitAmountOk() (*string, bool) {
	if o == nil || IsNil(o.UnitAmount) {
		return nil, false
	}
	return o.UnitAmount, true
}

// HasUnitAmount returns a boolean if a field has been set.
func (o *OrbMatrixPriceValue) HasUnitAmount() bool {
	if o != nil && !IsNil(o.UnitAmount) {
		return true
	}

	return false
}

// SetUnitAmount gets a reference to the given string and assigns it to the UnitAmount field.
func (o *OrbMatrixPriceValue) SetUnitAmount(v string) {
	o.UnitAmount = &v
}

func (o OrbMatrixPriceValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrbMatrixPriceValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DimensionValues) {
		toSerialize["dimension_values"] = o.DimensionValues
	}
	if !IsNil(o.UnitAmount) {
		toSerialize["unit_amount"] = o.UnitAmount
	}
	return toSerialize, nil
}

type NullableOrbMatrixPriceValue struct {
	value *OrbMatrixPriceValue
	isSet bool
}

func (v NullableOrbMatrixPriceValue) Get() *OrbMatrixPriceValue {
	return v.value
}

func (v *NullableOrbMatrixPriceValue) Set(val *OrbMatrixPriceValue) {
	v.value = val
	v.isSet = true
}

func (v NullableOrbMatrixPriceValue) IsSet() bool {
	return v.isSet
}

func (v *NullableOrbMatrixPriceValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrbMatrixPriceValue(val *OrbMatrixPriceValue) *NullableOrbMatrixPriceValue {
	return &NullableOrbMatrixPriceValue{value: val, isSet: true}
}

func (v NullableOrbMatrixPriceValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrbMatrixPriceValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
